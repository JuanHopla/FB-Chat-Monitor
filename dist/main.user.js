// ==UserScript==
// @name         FB-Chat-Monitor
// @namespace    https://github.com/JuanHopla/FB-Chat-Monitor
// @version      1.1.0
// @description  Monitor and auto-respond to Facebook Marketplace messages with AI assistance
// @author       JuanHopla
// @match        https://www.messenger.com/*
// @match        https://www.facebook.com/marketplace/inbox*
// @match        https://www.facebook.com/messages*
// @match        https://www.facebook.com/marketplace/item/*
// @grant        GM_getValue
// @grant        GM_setValue
// @grant        GM_xmlhttpRequest
// @grant        GM_deleteValue
// @grant        GM_listValues
// @connect      api.openai.com
// @connect      facebook.com
// @connect      messenger.com
// @updateURL    https://juanhopla.github.io/FB-Chat-Monitor/main.user.js
// @downloadURL  https://juanhopla.github.io/FB-Chat-Monitor/main.user.js
// @license      MIT
// @run-at       document-idle
// ==/UserScript==

!function(){var CONFIG={};Object.assign(CONFIG,{version:"1.0.0",operationMode:"manual",get modo(){return this.operationMode},set modo(e){"auto"!==e&&"manual"!==e||(this.operationMode=e,void 0!==logger&&logger.debug(`Mode updated via 'modo' property: ${e}`))},apiKey:null,AI:{apiKey:null,model:"gpt-4o",maxTokens:2048,temperature:.7,useAssistantAPI:!0,provider:"openai",assistants:{seller:{id:null,name:"Seller Assistant",instructions:"Act as a professional, friendly, and concise salesperson."},buyer:{id:null,name:"Buyer Assistant",instructions:"Act as an interested buyer, asking relevant questions about the product."}},syncWithLegacyConfig:function(){CONFIG.apiKey&&!this.apiKey?this.apiKey=CONFIG.apiKey:this.apiKey&&!CONFIG.apiKey&&(CONFIG.apiKey=this.apiKey),CONFIG.model&&CONFIG.model!==this.model&&(this.model=CONFIG.model),CONFIG.assistants&&(CONFIG.assistants.seller&&(this.assistants.seller={...this.assistants.seller,...CONFIG.assistants.seller}),CONFIG.assistants.buyer&&(this.assistants.buyer={...this.assistants.buyer,...CONFIG.assistants.buyer}))}},model:"gpt-4o",autoResponseDelay:5e3,simulateHumanTyping:!0,audioTranscription:{enabled:!1,apiKey:null,model:"whisper-1",maxDuration:120},assistants:{seller:{id:null,name:"Seller Assistant",instructions:"Act as a professional, friendly, and concise salesperson."},buyer:{id:null,name:"Buyer Assistant",instructions:"Act as an interested buyer, asking relevant questions about the product."}},autoSendMessages:!0,sendMessageDelay:2e3,selectors:{chatList:{container:'div[class*="x78zum5"][class*="xdt5ytf"], div[role="main"]',chatItem:'a[href*="/marketplace/t/"][role="link"]',unreadIndicator:'span[class*="x6s0dn4"][data-visualcompletion="ignore"]',chatUserName:{selector:["span.x1lliihq.x193iq5w.x6ikm8r.x10wlt62.xlyipyv.xuxw1ft:not(.x1j85h84)",'span[dir="auto"][class*="x1lliihq"]:not([class*="x1j85h84"])'],filter:e=>Array.from(e).filter((e=>{const t=e.innerText||"";return t.includes("·")&&!t.includes(":")}))},timestamp:'span[aria-hidden="true"]',messagePreview:{selector:'span[dir="auto"]:not([class*="x1lliihq"])',filter:e=>Array.from(e).filter((e=>{const t=e.innerText||"",n=/^\s*\d+[smhdwy]\s*$/i.test(t),a=t.includes("Marketplace ·"),s=t.includes(":")||t.length>8;return!n&&!a&&s}))}},activeChat:{container:'div.x1ey2m1c.xds687c.xixxii4.x1vjfegm, div[role="main"] > div > div > div:last-child',messageWrapper:'div.x4k7w5x > div > div > div, div[role="main"] > div > div > div:last-child > div',messageRow:'div[role="row"]',senderAvatar:'img.x1rg5ohu[alt]:not([alt="Open photo"])',messageContent:['span.x1lliihq.x1plvlek > div[dir="auto"]','div[role="presentation"] span.x1lliihq > div[dir="auto"]','div[dir="auto"].html-div[class*="xexx8yu"]'],messageTimestamp:["span[data-tooltip-content][aria-label]",'span[title][aria-label*=":"]',"span.x1lliihq.x1plvlek.xryxfnj[aria-label]",'span[aria-label*="sent at"]','span[aria-label*="enviado a las"]'],messageImageElement:['a[href*="/messenger_media/"] img.x1rg5ohu','img[alt]:not([width="16"]):not([height="16"])','img[data-visualcompletion="media-vc-image"]',"div.x1ey2m1c img",'div[role="img"]',"div.x6ikm8r.x10wlt62 > img"],messageAudioElement:'div[aria-label="Play"][role="button"] ~ audio[src], div[aria-label*="audio message"] audio[src], audio[src]',messageAudioPlayButton:['div.x6s0dn4 div[aria-label="Play"][role="button"]','div[role="button"][aria-label="Play"]','div[aria-label="Play"][role="button"]','div[role="button"][aria-label*="audio"]','div[aria-label*="reproducir"][role="button"]','div[aria-label*="Audio message"]','div.xzg4506 > div.x1qjc9v5 > div[role="button"]','div[aria-label*="Play" i][role="button"]'],messageAudioUrlSource:null,messageAudioUrlAttribute:null,messageVideoElement:["video",'div[aria-label="Expand video"] video','div[aria-label="Play video"][role="button"]','div[data-testid="media-container"] video','div[data-visualcompletion="media-vc-image"][style*="background-image"]','div[role="button"][aria-label*="video"]','a[href*="video_redirect"]','div.x78zum5.xdt5ytf.x16ldp7u > div[role="button"]'],messageFileElement:['a[href*="attachment.php"]','a[href*="cdn.fbsbx.com"][download]','div[data-testid="attachment"]','div[role="button"][aria-label*="file"]','div[aria-label*="archivo adjunto"]'],messageLocationElement:['div[data-testid="map_container"]','a[href*="l.facebook.com/l.php"][href*="maps"]','a[href*="google.com/maps"]','div[aria-label*="location"]','div[aria-label*="ubicación"]'],messageGifElement:['div[data-testid="sticker"] img','img[src*="tenor.com"]','img[src*="giphy.com"]','div[aria-label*="GIF"]'],sellerIndicators:['div[aria-label="Mark as sold"], div[aria-label="Marcar como vendido"]','div[aria-label="Mark as pending"], div[aria-label="Marcar como pendiente"]','div[aria-label="Mark as available"], div[aria-label="Marcar como disponible"]','a[aria-label="View buyer"], a[aria-label="Ver comprador"]','div[aria-label="View buyer"], div[aria-label="Ver comprador"]'],buyerIndicators:['a[aria-label="See details"]','div[aria-label="View listing"], div[aria-label="Ver artículo"]','div[aria-label="Create plan"]','a[aria-label="View listing"], a[aria-label="Ver artículo"]','a[aria-label="View seller profile"], a[aria-label="Ver perfil del vendedor"]'],productLink:'a[href*="/marketplace/item/"]',productInfo:'div[class*="x1sliqq"], div[role="main"] > div > div > div:first-child',messageInput:'div[contenteditable="true"][role="textbox"], div[aria-label="Message"], p.xat24cr.xdj266r',sendButton:['div[aria-label="Press enter to send"]','div[aria-label="Pulsa Intro para enviar"]','div[role="button"][aria-label*="send"]','div[role="button"][aria-label*="enviar"]','div.x1i10hfl[role="button"].xjbqb8w','div.x78zum5[role="button"].xjbqb8w','div.x1i10hfl[role="button"]:not([aria-hidden="true"])','div[role="button"][tabindex="0"]:not([style*="visibility: hidden"])','div[aria-label="Press enter to send"][role="button"]'],scrollbar:['div.x78zum5.xdt5ytf.x1iyjqo2 > div[role="none"]','div[style*="overflow-y: auto"][style*="height"]','div[style*="overflow: auto"][style*="height"]',".x1uipg7g > div:nth-child(1) > div:nth-child(1)",'div.x4k7w5x > div[style*="height"]','div[role="main"] div.x1n2onr6[style*="height"]'],chatBeginningIndicators:['div[role="img"][aria-label]',"h4.xdj266r.x11i5rnm.xat24cr.x1mh8g0r","ul.x6s0dn4.x78zum5.xl56j7k.xsag5q8.x1y1aw1k","div.x1eb86dx.xsag5q8.x1ye3gou.xn6708d.x1cnzs8"]}},init(){if(this.loadFromStorage(),this.initializeExtras(),this.AI&&"function"==typeof this.AI.syncWithLegacyConfig&&this.AI.syncWithLegacyConfig(),void 0!==logger){logger.debug(`Configuration initialized. Mode: ${this.operationMode}, modo property: ${this.modo}`);const e="function"==typeof GM_getValue?GM_getValue("FB_CHAT_MODE"):null,t="function"==typeof GM_getValue?GM_getValue("FB_CHAT_OPERATION_MODE"):null,n=localStorage.getItem("FB_CHAT_MODE"),a=localStorage.getItem("FB_CHAT_OPERATION_MODE");logger.debug(`Storage status - GM: modo=${e}, opMode=${t} | LS: modo=${n}, opMode=${a}`)}return!0},initializeExtras(){return document.addEventListener("configUpdated",(e=>{const t=e?.detail||{};t.operationMode&&(this.operationMode=t.operationMode,logger.debug(`Mode updated by event: ${this.operationMode}, source: ${t.source||"unknown"}`))})),!0},loadFromStorage(){try{const e=this.getStorage(),t=e.FB_CHAT_OPERATION_MODE,n=e.FB_CHAT_MODE;void 0!==logger&&logger.debug(`Mode values found - FB_CHAT_OPERATION_MODE: ${t}, FB_CHAT_MODE: ${n}`);let a=null;if("auto"===t||"manual"===t?(a=t,void 0!==logger&&logger.debug(`Mode loaded from FB_CHAT_OPERATION_MODE: ${a}`)):"auto"===n||"manual"===n?(a=n,void 0!==logger&&logger.debug(`Mode loaded from FB_CHAT_MODE (legacy): ${a}`),this.saveToStorage("FB_CHAT_OPERATION_MODE",n),void 0!==logger&&logger.debug(`Mode migrated from FB_CHAT_MODE to FB_CHAT_OPERATION_MODE: ${n}`)):(a="manual",void 0!==logger&&logger.debug(`No saved value found for mode. Assigning default value: ${a}`),this.saveToStorage("FB_CHAT_OPERATION_MODE",a),this.saveToStorage("FB_CHAT_MODE",a)),a&&(this.operationMode=a),e.FB_CHAT_API_KEY&&(this.apiKey=e.FB_CHAT_API_KEY,this.AI&&(this.AI.apiKey=e.FB_CHAT_API_KEY)),e.FB_CHAT_MODEL&&(this.model=e.FB_CHAT_MODEL,this.AI&&(this.AI.model=e.FB_CHAT_MODEL)),e.FB_CHAT_ASSISTANTS)try{const t="string"==typeof e.FB_CHAT_ASSISTANTS?JSON.parse(e.FB_CHAT_ASSISTANTS):e.FB_CHAT_ASSISTANTS;t&&"object"==typeof t&&(t.seller&&(this.assistants.seller={...this.assistants.seller,...t.seller},this.AI&&this.AI.assistants&&(this.AI.assistants.seller={...this.AI.assistants.seller,...t.seller})),t.buyer&&(this.assistants.buyer={...this.assistants.buyer,...t.buyer},this.AI&&this.AI.assistants&&(this.AI.assistants.buyer={...this.AI.assistants.buyer,...t.buyer})))}catch(e){void 0!==logger&&logger.error(`Error parsing assistants: ${e.message}`)}return void 0!==logger&&(logger.log("Configuration loaded from storage"),logger.debug(`Final state after loading: operationMode=${this.operationMode}, modo=${this.modo}`)),this}catch(e){return void 0!==logger&&logger.error(`Error loading configuration: ${e.message}`),this}},updateOperationMode(e){return"auto"!==e&&"manual"!==e?(logger.error(`Invalid operation mode: ${e}. Must be 'auto' or 'manual'`),!1):(this.operationMode=e,"function"==typeof GM_setValue?(GM_setValue("FB_CHAT_OPERATION_MODE",e),GM_setValue("FB_CHAT_MODE",e)):(localStorage.setItem("FB_CHAT_OPERATION_MODE",e),localStorage.setItem("FB_CHAT_MODE",e)),logger.log(`Operation mode updated to: ${e.toUpperCase()}`),document.dispatchEvent(new CustomEvent("configUpdated",{detail:{operationMode:e,modo:e,source:"updateOperationMode"}})),window.ui&&"function"==typeof window.ui.updateModeUI&&window.ui.updateModeUI(e),window.responseManager&&(window.responseManager.isAutomodeEnabled="auto"===e,logger.debug(`ResponseManager updated: automode=${window.responseManager.isAutomodeEnabled}`)),logger.debug(`Mode updated: operationMode=${this.operationMode}, modo=${this.modo}`),!0)},saveApiKey(e){return e&&"string"==typeof e?(this.apiKey=e,this.AI&&(this.AI.apiKey=e),this.saveToStorage("FB_CHAT_API_KEY",e),logger.log("API Key saved"),!0):(logger.error("Invalid API Key"),!1)},saveModel(e){return e&&"string"==typeof e?(this.model=e,this.AI&&(this.AI.model=e),this.saveToStorage("FB_CHAT_MODEL",e),logger.log(`Model changed to: ${e}`),!0):(logger.error("Invalid model"),!1)},saveAssistants(e){return e&&"object"==typeof e?(e.seller&&(this.assistants.seller={...this.assistants.seller,...e.seller},this.AI&&this.AI.assistants&&(this.AI.assistants.seller={...this.AI.assistants.seller,...e.seller})),e.buyer&&(this.assistants.buyer={...this.assistants.buyer,...e.buyer},this.AI&&this.AI.assistants&&(this.AI.assistants.buyer={...this.AI.assistants.buyer,...e.buyer})),this.saveToStorage("FB_CHAT_ASSISTANTS",JSON.stringify(this.assistants)),logger.log("Assistants configuration updated"),!0):(logger.error("Invalid assistants configuration"),!1)},getStorage(){const e={};if("function"==typeof GM_getValue&&"function"==typeof GM_setValue){let t=[];"function"==typeof GM_listValues&&(t=GM_listValues()),t.length||(t=["FB_CHAT_MODE","FB_CHAT_OPERATION_MODE","FB_CHAT_API_KEY","FB_CHAT_MODEL","FB_CHAT_ASSISTANTS"]),t.forEach((t=>{try{e[t]=GM_getValue(t)}catch(e){logger.debug(`Error reading key ${t} from GM_getValue: ${e.message}`)}}))}else for(let t=0;t<localStorage.length;t++){const n=localStorage.key(t);if(n&&n.startsWith("FB_CHAT_"))try{let t=localStorage.getItem(n);try{t=JSON.parse(t)}catch(e){}e[n]=t}catch(e){logger.debug(`Error reading key ${n} from localStorage: ${e.message}`)}}return e},saveToStorage(e,t){try{if("function"==typeof GM_setValue)return GM_setValue(e,t),!0;const n="object"==typeof t?JSON.stringify(t):t;return localStorage.setItem(e,n),!0}catch(t){return logger.error(`Error saving to storage [${e}]: ${t.message}`),!1}},checkStatus(){const e=!!this.apiKey||this.AI&&!!this.AI.apiKey,t=!!this.model||this.AI&&!!this.AI.model,n="auto"===this.operationMode||"manual"===this.operationMode,a=this.assistants.seller&&this.assistants.seller.id||this.assistants.buyer&&this.assistants.buyer.id||this.AI&&this.AI.assistants&&(this.AI.assistants.seller&&this.AI.assistants.seller.id||this.AI.assistants.buyer&&this.AI.assistants.buyer.id);return{isReady:e&&t&&n,isApiKeySet:e,isModelSet:t,isOperationModeValid:n,operationMode:this.operationMode,hasAssistants:a}},threadSystem:{newThreads:{maxMessages:50,maxProductImages:5,imageDetail:"high"},existingThreads:{ignoreOlderThan:864e5,onlyNewConversations:!1},general:{threadTTL:72e5,threadCleanupInterval:9e5,threadInfoMaxAge:2592e6}}}),window.CONFIG=CONFIG,window.diagnoseModeConfig=function(){const e="function"==typeof GM_getValue?GM_getValue("FB_CHAT_MODE"):"N/A",t="function"==typeof GM_getValue?GM_getValue("FB_CHAT_OPERATION_MODE"):"N/A",n=localStorage.getItem("FB_CHAT_MODE"),a=localStorage.getItem("FB_CHAT_OPERATION_MODE"),s={currentConfig:{operationMode:CONFIG.operationMode,modo:CONFIG.modo,areSynced:CONFIG.operationMode===CONFIG.modo},storage:{GM:{FB_CHAT_MODE:e,FB_CHAT_OPERATION_MODE:t},localStorage:{FB_CHAT_MODE:n,FB_CHAT_OPERATION_MODE:a}},responseManager:window.responseManager?{isAutomodeEnabled:window.responseManager.isAutomodeEnabled}:"Not available"};return console.log("[Mode Diagnosis]",s),s};const logger={logs:[],maxLogs:100,log(e,t={}){const n={type:"INFO",timestamp:(new Date).toISOString(),message:e,data:t};this._addLog(n),console.log(`[FB-Chat-Monitor] ${e}`,t)},debug(e,t={}){if(CONFIG.debug){const n={type:"DEBUG",timestamp:(new Date).toISOString(),message:e,data:t};this._addLog(n),console.log(`[FB-Chat-Monitor][DEBUG] ${e}`,t)}},error(e,t={},n=null){const a={type:"ERROR",timestamp:(new Date).toISOString(),message:e,data:t,stack:n?.stack||(new Error).stack};this._addLog(a),console.error(`[FB-Chat-Monitor][ERROR] ${e}`,t,n)},warn(e,t={}){const n={type:"WARN",timestamp:(new Date).toISOString(),message:e,data:t};this._addLog(n),console.warn(`[FB-Chat-Monitor][WARN] ${e}`,t)},notify(e,t="success",n={}){const a={type:"NOTIFICATION",notificationType:t,timestamp:(new Date).toISOString(),message:e};this._addLog(a);const s=document.createElement("div");s.style.position="fixed",s.style.bottom="20px",s.style.right="20px",s.style.padding="10px 15px",s.style.color="white",s.style.borderRadius="5px",s.style.zIndex="9999",s.style.opacity="0.9",s.style.boxShadow="0 2px 10px rgba(0,0,0,0.2)",s.style.fontFamily="Arial, sans-serif",s.style.fontSize="14px",s.style.display="flex",s.style.alignItems="center",s.style.transition="all 0.3s ease",s.style.maxWidth="80%",s.style.wordBreak="break-word","success"===t?(s.style.backgroundColor="#4CAF50",s.innerHTML=`<span style="margin-right:8px;">✓</span>${e}`):"error"===t?(s.style.backgroundColor="#f44336",s.innerHTML=`<span style="margin-right:8px;">⚠️</span>${e}`):"warning"===t?(s.style.backgroundColor="#ff9800",s.innerHTML=`<span style="margin-right:8px;">⚠</span>${e}`):"info"===t&&(s.style.backgroundColor="#2196F3",s.innerHTML=`<span style="margin-right:8px;">ℹ</span>${e}`);const i=document.createElement("span");if(i.innerHTML="×",i.style.marginLeft="10px",i.style.cursor="pointer",i.style.fontWeight="bold",i.style.fontSize="18px",i.onclick=()=>document.body.removeChild(s),s.appendChild(i),document.body.appendChild(s),n.buttons&&Array.isArray(n.buttons)){const e=document.createElement("div");e.style.marginTop="10px",e.style.display="flex",e.style.gap="10px",n.buttons.forEach((t=>{if(t.text&&"function"==typeof t.action){const n=document.createElement("button");n.textContent=t.text,n.style.padding="5px 10px",n.style.border="none",n.style.borderRadius="3px",n.style.cursor="pointer",n.style.backgroundColor=t.color||"#fff",n.style.color=t.textColor||"#333",n.onclick=()=>{t.action(),!1!==t.closeOnClick&&document.body.removeChild(s)},e.appendChild(n)}})),s.appendChild(e)}if(n.timeoutSeconds){const e=document.createElement("span");e.className="countdown",e.textContent=n.timeoutSeconds,e.style.marginLeft="8px",e.style.padding="2px 6px",e.style.backgroundColor="rgba(255,255,255,0.2)",e.style.borderRadius="10px",s.appendChild(e)}const r=n.duration||5e3;return setTimeout((()=>{document.body.contains(s)&&(s.style.opacity="0",setTimeout((()=>{document.body.contains(s)&&document.body.removeChild(s)}),300))}),r),s},_addLog(e){this.logs.unshift(e),this.logs.length>this.maxLogs&&(this.logs=this.logs.slice(0,this.maxLogs)),CONFIG.logging&&CONFIG.logging.saveLogs&&this._saveLogs()},_saveLogs(){try{localStorage.setItem("FB_CHAT_MONITOR_LOGS",JSON.stringify(this.logs))}catch(e){console.error("Error saving logs to localStorage",e)}},loadLogs(){try{const e=localStorage.getItem("FB_CHAT_MONITOR_LOGS");e&&(this.logs=JSON.parse(e))}catch(e){console.error("Error loading logs from localStorage",e)}},getAllLogs(){return[...this.logs]},getLogsByType(e){return this.logs.filter((t=>t.type===e))},clearLogs(){this.logs=[];try{localStorage.removeItem("FB_CHAT_MONITOR_LOGS")}catch(e){console.error("Error clearing logs from localStorage",e)}},notify:function(e,t="info",n=2e3){console.log(`[${t.toUpperCase()}] ${e}`);const a=document.createElement("div");a.className="fb-chat-monitor-notification";const s=this.getOptimalAlertPosition();switch(a.style.position="fixed",a.style.zIndex="10000",a.style.padding="10px 15px",a.style.borderRadius="6px",a.style.boxShadow="0 3px 10px rgba(0,0,0,0.2)",a.style.fontSize="14px",a.style.transition="opacity 0.3s ease-in-out, transform 0.3s ease-in-out",a.style.opacity="0",a.style.transform="translateY(20px)",a.style.pointerEvents="none",a.style.left=s.left,a.style.top=s.top,a.style.right=s.right,a.style.maxWidth="300px",t){case"success":a.style.backgroundColor="#4CAF50",a.style.color="white";break;case"error":a.style.backgroundColor="#F44336",a.style.color="white";break;case"warning":a.style.backgroundColor="#FF9800",a.style.color="white";break;default:a.style.backgroundColor="#2196F3",a.style.color="white"}a.textContent=e,document.body.appendChild(a),setTimeout((()=>{a.style.opacity="1",a.style.transform="translateY(0)"}),50),setTimeout((()=>{a.style.opacity="0",a.style.transform="translateY(-20px)",setTimeout((()=>{a.parentElement&&a.parentElement.removeChild(a)}),300)}),n)},getOptimalAlertPosition:function(){const e=document.getElementById("fbChatMonitorPanel"),t=document.getElementById("fbChatMonitorButton"),n=document.getElementById("fbChatMonitorQuickResponse");if(e&&window.uiState?.isControlPanelVisible){const t=e.getBoundingClientRect();return{top:`${t.bottom+10}px`,right:window.innerWidth-t.right+"px",left:"auto"}}if(t){const e=t.getBoundingClientRect();return{top:`${e.bottom+10}px`,right:window.innerWidth-e.right+"px",left:"auto"}}if(n&&"none"!==window.getComputedStyle(n).display){const e=n.getBoundingClientRect();return{top:e.top-10-40+"px",right:window.innerWidth-e.right+"px",left:"auto"}}return{top:"60px",right:"20px",left:"auto"}}},domUtils={findElement(e,t=document){if(Array.isArray(e)){for(const n of e)try{const e=t.querySelector(n);if(e)return e}catch(e){logger.debug(`Error with selector "${n}": ${e.message}`)}return null}try{return t.querySelector(e)}catch(t){return logger.debug(`Error with selector "${e}": ${t.message}`),null}},findAllElements(e,t=document){try{return[...t.querySelectorAll(e)]}catch(t){return logger.debug(`Error with selector "${e}": ${t.message}`),[]}},waitForElement:(e,t=CONFIG.waitElementTimeout)=>new Promise(((n,a)=>{let s=0;const i=Array.isArray(e)?e:[e],r=()=>{for(const e of i)try{const t=document.querySelector(e);if(t)return void n(t)}catch(e){}s+=100,s>=t?a(new Error(`Timeout waiting for elements: ${JSON.stringify(i)}`)):setTimeout(r,100)};r()})),scrollToTop:(e,t=10)=>new Promise((n=>{let a=e.scrollHeight,s=0,i=0;const r=()=>{e.scrollTop=0,setTimeout((()=>{if(i++,e.scrollHeight===a){if(s++,s>=3||i>=t)return void n({success:!0,fullyScrolled:!0})}else s=0,a=e.scrollHeight;r()}),300)};r()})),scrollToBottom:e=>new Promise((t=>{e?(e.scrollTop=e.scrollHeight,setTimeout((()=>t(!0)),100)):t(!1)})),injectStyles(e){const t=document.createElement("style");return t.textContent=e,document.head.appendChild(t),t},insertTextIntoField(e,t){if(!e)return!1;try{e.focus();const n=[()=>(document.execCommand("selectAll",!1,null),document.execCommand("insertText",!1,t)),()=>"true"===e.contentEditable&&(e.innerText=t,e.dispatchEvent(new Event("input",{bubbles:!0})),!0),()=>"value"in e&&(e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),!0),()=>{for(;e.firstChild;)e.removeChild(e.firstChild);return e.appendChild(document.createTextNode(t)),e.dispatchEvent(new Event("input",{bubbles:!0})),!0}];for(const e of n)try{if(e())return logger.debug("Text inserted successfully"),!0}catch(e){}return e.innerText=t,e.value=t,e.textContent=t,["input","change","keyup"].forEach((t=>{try{e.dispatchEvent(new Event(t,{bubbles:!0}))}catch(e){}})),!0}catch(e){return logger.error(`Error inserting text into field: ${e.message}`),!1}},insertTextIntoField(e,t){if(!e||!t)return!1;try{if("true"===e.getAttribute("contenteditable")){e.innerHTML="",e.focus();if(!document.execCommand("insertText",!1,t)){e.textContent=t;const n=new Event("input",{bubbles:!0,cancelable:!0});e.dispatchEvent(n)}return!0}return"INPUT"===e.tagName||"TEXTAREA"===e.tagName?(e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),!0):(e.innerText=t,!0)}catch(e){return logger.error(`Error insertando texto en campo: ${e.message}`),!1}},insertTextIntoField(e,t){if(!e||!t)return!1;try{if(("true"===e.getAttribute("contenteditable")?!e.textContent||""===e.textContent.trim():!e.value||""===e.value.trim())||("true"===e.getAttribute("contenteditable")?(e.innerHTML="",e.textContent=""):"INPUT"!==e.tagName&&"TEXTAREA"!==e.tagName||(e.value=""),logger.debug("Campo limpiado adicionalmente antes de insertar texto")),"true"===e.getAttribute("contenteditable")){e.innerHTML="",e.focus();if(!document.execCommand("insertText",!1,t)){e.textContent=t;const n=new Event("input",{bubbles:!0,cancelable:!0});e.dispatchEvent(n)}return!0}return"INPUT"===e.tagName||"TEXTAREA"===e.tagName?(e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),!0):(e.innerText=t,!0)}catch(e){return logger.error(`Error insertando texto en campo: ${e.message}`),!1}},insertTextIntoField(e,t){if(!e||!t)return!1;try{const n="true"===e.getAttribute("contenteditable"),a=n?(e.textContent||"").trim():(e.value||"").trim();if(a){if(logger.warn(`Campo aún contiene texto antes de insertar: "${a.substring(0,30)}..."`),n){e.innerHTML="",e.textContent="";try{const t=window.getSelection(),n=document.createRange();n.selectNodeContents(e),t.removeAllRanges(),t.addRange(n),t.deleteFromDocument()}catch(e){logger.debug(`Error usando selection API: ${e.message}`)}}else e.value="";["input","change"].forEach((t=>{e.dispatchEvent(new Event(t,{bubbles:!0}))}))}if(n){e.focus();document.execCommand("insertText",!1,t)||(e.textContent=t,e.dispatchEvent(new Event("input",{bubbles:!0})))}else"INPUT"!==e.tagName&&"TEXTAREA"!==e.tagName||(e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})));return setTimeout((()=>{const a=n?e.textContent:e.value;a!==t?logger.warn(`Posible problema al insertar texto. Esperado: "${t.substring(0,30)}...", Actual: "${a.substring(0,30)}..."`):logger.debug("Texto insertado correctamente verificado")}),50),!0}catch(e){return logger.error(`Error insertando texto en campo: ${e.message}`),!1}},simulateKeyPress(e,t="Enter",n=13){if(!e)return!1;try{e.focus();const a=[new KeyboardEvent("keydown",{key:t,code:t,keyCode:n,which:n,bubbles:!0,cancelable:!0}),new KeyboardEvent("keypress",{key:t,code:t,keyCode:n,which:n,bubbles:!0,cancelable:!0}),new KeyboardEvent("keyup",{key:t,code:t,keyCode:n,which:n,bubbles:!0,cancelable:!0})];let s=!0;return a.forEach((t=>{e.dispatchEvent(t)||(s=!1)})),s}catch(e){return logger.error(`Error simulando tecla ${t}: ${e.message}`),!1}},simulateKeyPress(e,t,n){if(!e)return!1;try{return e.focus(),setTimeout((()=>{try{let a=!0;return["keydown","keypress","keyup"].forEach((s=>{const i=new KeyboardEvent(s,{key:t,code:1===t.length?`Key${t.toUpperCase()}`:t,keyCode:n,which:n,bubbles:!0,cancelable:!0,view:window});e.dispatchEvent(i)||(logger.warn(`Evento ${s} no fue despachado correctamente`),a=!1),"keyup"!==s&&setTimeout((()=>{}),0)})),logger.debug(`Simulación de tecla ${t} ${a?"exitosa":"con problemas"}`),a}catch(e){return logger.error(`Error en simulación de tecla: ${e.message}`),!1}}),50),!0}catch(e){return logger.error(`Error preparando simulación de tecla: ${e.message}`),!1}}},storageUtils={set:function(e,t){try{if("function"==typeof GM_setValue&&GM_setValue(e,t),"undefined"!=typeof localStorage){const n="object"==typeof t?JSON.stringify(t):t;localStorage.setItem(e,n)}return!0}catch(t){return logger.error(`Error storing data: ${t.message}`,{key:e}),!1}},get:function(e,t=null){try{if("function"==typeof GM_getValue){const t=GM_getValue(e,void 0);if(void 0!==t)return t}if("undefined"!=typeof localStorage){const t=localStorage.getItem(e);if(null!==t)try{return JSON.parse(t)}catch(e){return t}}return t}catch(n){return logger.error(`Error retrieving data: ${n.message}`,{key:e}),t}},remove:function(e){try{return"function"==typeof GM_deleteValue&&GM_deleteValue(e),"undefined"!=typeof localStorage&&localStorage.removeItem(e),!0}catch(t){return logger.error(`Error removing data: ${t.message}`,{key:e}),!1}},migrateSettings:function(){logger.debug("Running settings migration check...");let e=0;return"function"==typeof GM_setValue&&"undefined"!=typeof localStorage&&["FB_CHAT_MONITOR_OPENAI_KEY","FB_CHAT_MONITOR_AI_MODEL","FB_CHAT_MONITOR_SELLER_ASSISTANT_ID","FB_CHAT_MONITOR_BUYER_ASSISTANT_ID","FB_CHAT_MONITOR_DEFAULT_ASSISTANT_ID","FB_CHAT_MONITOR_OPERATION_MODE","FB_CHAT_MONITOR_SELLER_ASSISTANT_NAME","FB_CHAT_MONITOR_BUYER_ASSISTANT_NAME","FB_CHAT_MONITOR_SELLER_INSTRUCTIONS","FB_CHAT_MONITOR_BUYER_INSTRUCTIONS","FB_CHAT_MONITOR_AI_TEMP"].forEach((t=>{const n=localStorage.getItem(t);if(null!==n&&void 0===GM_getValue(t,void 0)){let a=n;try{a=JSON.parse(n)}catch(e){}GM_setValue(t,a),e++,logger.debug(`Migrated ${t} from localStorage to GM_storage`)}})),e>0?logger.log(`Settings migration complete: ${e} items migrated`):logger.debug("No settings needed migration"),e},checkStorageHealth:function(){const e="function"==typeof GM_setValue&&"function"==typeof GM_getValue,t="undefined"!=typeof localStorage;if(logger.debug(`Storage availability: GM_storage=${e}, localStorage=${t}`),!e&&!t)return logger.error("No storage mechanisms available. Data persistence will not work."),!1;try{const e="STORAGE_TEST_"+Date.now(),t="test_"+Date.now();this.set(e,t);return this.get(e,null)!==t?(logger.error("Storage verification failed: write/read mismatch"),!1):(this.remove(e),logger.debug("Storage health check passed successfully"),!0)}catch(e){return logger.error("Storage health check failed",e),!1}}},e={isActive:!1,lastActivity:Date.now(),listeners:[],initialize(){document.addEventListener("mousemove",(()=>this.recordActivity())),document.addEventListener("keydown",(()=>this.recordActivity())),document.addEventListener("click",(()=>this.recordActivity())),setInterval((()=>this.checkInactivity()),6e4),logger.debug("User activity tracker initialized")},recordActivity(){const e=!this.isActive;this.isActive=!0,this.lastActivity=Date.now(),e&&this.notifyListeners()},checkInactivity(){Date.now()-this.lastActivity>3e5&&this.isActive&&(this.isActive=!1,this.notifyListeners())},onActivityChange(e){"function"==typeof e&&this.listeners.push(e)},notifyListeners(){for(const e of this.listeners)try{e(this.isActive,this.lastActivity)}catch(e){logger.error("Error in activity listener",{},e)}}},t={async withExponentialBackoff(e,t={}){const{maxRetries:n=3,baseDelay:a=1e3,maxDelay:s=3e4,factor:i=2,jitter:r=.1}=t;let o=0,l=null;for(;o<=n;)try{return await e()}catch(e){if(l=e,o++,o>n)throw logger.error(`Operation failed after ${n} retries`,{},e),e;const t=Math.min(a*Math.pow(i,o-1),s),c=t*r,d=t+(Math.random()*c*2-c);logger.debug(`Retry attempt ${o} after ${Math.round(d)}ms`),await new Promise((e=>setTimeout(e,d)))}throw l}},n={formatDate:e=>new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit",second:"2-digit"}).format(e),getRelativeTime(e){const t=new Intl.RelativeTimeFormat("en",{numeric:"auto"}),n=e-Date.now(),a=Math.floor(n/1e3),s=Math.floor(a/60),i=Math.floor(s/60),r=Math.floor(i/24);return Math.abs(r)>0?t.format(r,"day"):Math.abs(i)>0?t.format(i,"hour"):Math.abs(s)>0?t.format(s,"minute"):t.format(a,"second")},sleep:e=>new Promise((t=>setTimeout(t,e)))},a={isMarketplaceMessenger(){const e=window.location.href;return e.includes("facebook.com/messages")||e.includes("messenger.com")},redirectToMarketplace:()=>!(!window.location.href.includes("messenger.com")||window.location.href.includes("marketplace"))&&(window.location.href="https://www.facebook.com/messages/t/marketplace",!0)};function s(e,t="info",n={}){return logger.notify(e,t,n)}async function i(e){return n.sleep(e)}logger.loadLogs(),e.initialize(),window.logger=logger,window.domUtils=domUtils,window.storageUtils=storageUtils,window.userActivityTracker=e,window.retryUtils=t,window.timeUtils=n,window.pageUtils=a,window.showSimpleAlert=s,window.delay=i,window.insertTextDirectly=function(e,t){return domUtils.insertTextIntoField(e,t)},window.getFbDtsg=function(){const e=document.querySelector('input[name="fb_dtsg"], meta[name="fb_dtsg"]');if(e)return e.value||e.content||"";const t=document.body.innerHTML.match(/"DTSGInitData",\[\],\{"token":"([^"]+)"/);return t?t[1]:""},window.getFacebookUserID=function(){const e=document.cookie.match(/c_user=(\d+)/);return e?e[1]:""},window.__reqCounter||(window.__reqCounter=0),window.nextReq=function(){return(++window.__reqCounter).toString(36)},window.getRevision=function(){return document.querySelector('meta[name="revision"]')?.content||"1007773680"},window.jsonToFormUrlEncoded=function(e){return Object.entries(e).map((([e,t])=>encodeURIComponent(e)+"="+encodeURIComponent(t))).join("&")},window.diagnoseModeConfig=function(){const e={storage:{GM:"function"==typeof GM_getValue?{FB_CHAT_MODE:GM_getValue("FB_CHAT_MODE"),FB_CHAT_OPERATION_MODE:GM_getValue("FB_CHAT_OPERATION_MODE")}:"GM storage no disponible",localStorage:{FB_CHAT_MODE:localStorage.getItem("FB_CHAT_MODE"),FB_CHAT_OPERATION_MODE:localStorage.getItem("FB_CHAT_OPERATION_MODE")}},memory:{CONFIG_operationMode:window.CONFIG?.operationMode,CONFIG_modo:window.CONFIG?.modo,ui_modeState:window.ui?.currentMode||"No disponible"},responseManager:{isAutomodeEnabled:window.responseManager?.isAutomodeEnabled||"No disponible"}};return logger.log("=== DIAGNÓSTICO DE MODO OPERACIÓN ==="),logger.log(JSON.stringify(e,null,2)),logger.log("====================================="),e};const r={isTyping:!1,intervalId:null,chatId:null};function o(e){const t=e.length*CONFIG.humanSimulation.baseTypingSpeed,n=Math.random()*CONFIG.humanSimulation.typingVariation*e.length;return Math.max(CONFIG.humanSimulation.minResponseDelay,t+n)}function l(){return Math.floor(Math.random()*(CONFIG.humanSimulation.maxResponseDelay-CONFIG.humanSimulation.minResponseDelay)+CONFIG.humanSimulation.minResponseDelay)}function c(e){return/[áéíóúñ¿¡]/i.test(e)||/\b(hola|gracias|buenos días|buenas tardes|disponible)\b/i.test(e)?"es":/[ãõçâêôáéíóú]/i.test(e)||/\b(obrigado|bom dia|boa tarde|disponível)\b/i.test(e)?"pt":/[àââçéèêëîïôœùûüÿ]/i.test(e)||/\b(bonjour|merci|bonne journée|disponible)\b/i.test(e)?"fr":"en"}function d(e){const t={en:"Hello! Thank you for your message. I'll get back to you as soon as possible.",es:"¡Hola! Gracias por tu mensaje. Te responderé lo antes posible.",pt:"Olá! Obrigado pela sua mensagem. Responderei o mais rápido possível.",fr:"Bonjour! Merci pour votre message. Je vous répondrai dès que possible."};return t[c("string"==typeof e?e:e?.text||"")]||t.en}async function u(e=null){try{const t=document.querySelector(CONFIG.selectors.activeChat.messageInput);return t?(t.focus(),r.isTyping=!0,r.chatId=e,r.intervalId=setInterval((()=>{if(t&&r.isTyping){const e=new KeyboardEvent("keypress",{bubbles:!0,cancelable:!0,key:" ",code:"Space"});t.dispatchEvent(e),t.innerText.endsWith(" ")?t.innerText=t.innerText.slice(0,-1):t.innerText+=" ",t.dispatchEvent(new Event("input",{bubbles:!0}))}}),2e3),logger.debug("Typing indicator activated"),!0):(logger.debug("Input field not found for typing indicator"),!1)}catch(e){return logger.debug(`Error activating typing indicator: ${e.message}`),!1}}async function g(){try{r.intervalId&&(clearInterval(r.intervalId),r.intervalId=null),r.isTyping=!1;try{const e=document.querySelector(CONFIG.selectors.activeChat.messageInput);e&&e.innerText&&(e.innerText="",e.dispatchEvent(new Event("input",{bubbles:!0}))),e.blur()}catch(e){}return logger.debug("Typing indicator deactivated"),!0}catch(e){return logger.debug(`Error deactivating typing indicator: ${e.message}`),!1}}async function h(e){try{return e.focus(),["keydown","keypress","keyup"].forEach((t=>{e.dispatchEvent(new KeyboardEvent(t,{key:"Enter",code:"Enter",bubbles:!0}))})),!0}catch(e){return logger.debug(`Error sending via Enter: ${e.message}`),!1}}async function m(e,t,n){try{logger.debug("Processing auto mode response");const a=l();let s;await i(a),await u(t.chatId);try{s=await openAIManager.generateResponse(t),logger.debug(`AI response generated: "${s.substring(0,30)}..."`)}catch(t){logger.error(`Error generating AI response: ${t.message}`),s=d(e[e.length-1]?.content||"")}const r=o(s);logger.debug(`Simulating typing for ${Math.round(r/1e3)} seconds`),await i(r),await g();const c=await domUtils.waitForElement(CONFIG.selectors.activeChat.messageInput);if(!c)throw new Error("Message input field not found");domUtils.insertTextIntoField(c,s),await h(c),logger.log("Auto response sent successfully");const m=f();return m.unshift({timestamp:(new Date).toISOString(),mode:"auto",context:{chatId:t.chatId,role:t.role,productDetails:t.productDetails?{id:t.productDetails.id,title:t.productDetails.title}:null,lastMessage:e[e.length-1]?.content||null},response:s,sent:!0}),storageUtils.set("RESPONSE_LOGS",m),n&&n(s),s}catch(e){throw logger.error(`Auto mode error: ${e.message}`),await g(),n&&n(null),e}}async function p(e,t,n){try{let a;logger.debug("Processing manual mode response"),await u(t.chatId);try{a=await openAIManager.generateResponse(t),logger.debug(`AI response generated in manual mode: "${a.substring(0,30)}..."`)}catch(t){logger.error(`Error generating AI response: ${t.message}`),a=d(e[e.length-1]?.content||"")}await g();const i=await domUtils.waitForElement(CONFIG.selectors.activeChat.messageInput);if(!i)throw new Error("Message input field not found");domUtils.insertTextIntoField(i,a),s("Response generated and inserted in the chat input field. Review and press Enter to send.","info"),logger.log("Manual response generated and inserted");const r=f();return r.unshift({timestamp:(new Date).toISOString(),mode:"manual",context:{chatId:t.chatId,role:t.role,productDetails:t.productDetails?{id:t.productDetails.id,title:t.productDetails.title}:null,lastMessage:e[e.length-1]?.content||null},response:a,sent:!1}),storageUtils.set("RESPONSE_LOGS",r),n&&n(a),a}catch(e){throw logger.error(`Manual mode error: ${e.message}`),await g(),n&&n(null),e}}function f(){return window.storageUtils.get("RESPONSE_LOGS",[])}const responseManager={typingState:r,calculateTypingTime:o,getRandomResponseDelay:l,detectLanguage:c,getDefaultResponse:d,startTypingIndicator:u,stopTypingIndicator:g,sendViaEnter:h,generateAndHandleResponse:async function(e,t,n,a){try{if(e.length>0&&e[e.length-1].sentByUs)return;switch(n){case"auto":await m(e,t,a);break;case"manual":await p(e,t,a);break;default:logger.debug(`Unknown operation mode: ${n}`),"function"==typeof a&&a({success:!1,error:"Unknown operation mode"})}}catch(e){logger.debug(`Error handling response: ${e.message}`),await g(),"function"==typeof a&&a({success:!1,error:e.message})}},handleAutoMode:m,handleManualMode:p,getConversationHistory:f,clearConversationHistory:function(){window.storageUtils.remove("RESPONSE_LOGS")},exportConversationHistory:function(){const e=f(),t={timestamp:(new Date).toISOString(),history:e},n=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),a=URL.createObjectURL(n),s=document.createElement("a");s.href=a,s.download=`fb-chat-monitor-history-${(new Date).toISOString().slice(0,10)}.json`,document.body.appendChild(s),s.click(),document.body.removeChild(s)}};window.responseManager=responseManager;window.responseManager=new class{constructor(){this.isAutomodeEnabled=!1,this.lastChatId=null,this.lastResponseTime=0,this.cooldownPeriod=3e4,this.processingChat=!1,this.initialize()}initialize(){this.isAutomodeEnabled="auto"===window.CONFIG?.operationMode,logger.debug(`ResponseManager initialized with automode: ${this.isAutomodeEnabled} (operationMode: ${window.CONFIG?.operationMode})`),document.addEventListener("configUpdated",(e=>{this.isAutomodeEnabled="auto"===window.CONFIG?.operationMode,logger.debug(`ResponseManager detected mode change: Auto=${this.isAutomodeEnabled} (operationMode: ${window.CONFIG?.operationMode})`)}))}setAutoMode(e){this.isAutomodeEnabled=e,logger.log("Automatic mode "+(e?"activated":"deactivated")),e&&this.verifyOpenAIAvailability()}verifyOpenAIAvailability(){if(!window.openaiManager)return logger.error("OpenAI Manager is not available. Automatic mode will not work."),s("OpenAI Manager is not available. Automatic mode will not work.","error"),!1;const e="function"==typeof window.openaiManager.isReady?window.openaiManager.isReady():!!window.openaiManager.apiKey;return e?(e&&!window.openaiManager.isInitialized&&(window.openaiManager.isInitialized=!0,logger.debug("isInitialized=true has been corrected since the API key is present")),logger.log("OpenAI Manager is ready for automatic responses."),!0):(logger.error("OpenAI Manager does not have an API key configured. Automatic mode will not work correctly."),s("OpenAI does not have an API key configured. Configure it in the options.","error"),!1)}async processAutoResponse(e,t){if(this.processingChat||e===this.lastChatId)return logger.debug(`Skipping chat ${e} - already processed or in process`),!1;try{if(this.processingChat=!0,logger.debug(`Processing chat ${e} for automatic response`),!this.checkForUnrespondedMessages(t.messages))return logger.debug(`No unresponded messages in chat ${e}`),!1;let n;if("function"==typeof this.handleAutoMode?(logger.debug("Using handleAutoMode to generate automatic response"),n=await this.handleAutoMode(t.messages,t)):(logger.debug("Generating response with OpenAI Manager directly"),n=await window.openaiManager.generateResponse(t)),!n||!n.text&&"string"!=typeof n)throw new Error("A valid response was not received");const a=n.text||n;if(window.chatManager&&"function"==typeof window.chatManager.insertResponseInInputField)window.chatManager.insertResponseInInputField(a);else{logger.debug("chatManager.insertResponseInInputField not available, using alternative method");const e=document.querySelector(CONFIG.selectors.activeChat.messageInput);if(!e)throw new Error("Could not find the input field to insert the response");domUtils.insertTextIntoField(e,a)}return await this.simulateTypingAndSend(),this.lastChatId=e,this.lastResponseTime=Date.now(),logger.log(`Automatic response sent successfully to chat ${e}`),!0}catch(t){return logger.error(`Error in processAutoResponse for chat ${e}: ${t.message}`,{chatId:e},t),!1}finally{this.processingChat=!1}}checkForUnrespondedMessages(e){if(!e||0===e.length)return!1;const t=e.slice(-10);let n=0;for(let e=t.length-1;e>=0;e--){if(t[e].sentByUs)break;n++}return n>0}async simulateTypingAndSend(){try{const e=document.querySelector('div[aria-label="Press Enter to send"] button, button[data-testid="send-button"]');if(!e)return void logger.warn("Send button not found");const t=window.CONFIG?.humanSimulation?.autoSendDelay||2e3;logger.debug(`Sending automatic message in ${t/1e3} seconds...`),await new Promise((e=>setTimeout(e,t))),e.click(),logger.log("Automatic message sent")}catch(e){logger.error(`Error sending automatic message: ${e.message}`,{},e)}}};const humanSimulator=new class{constructor(){this.config=CONFIG.AI.humanSimulation,this.recentMessages=[],this.maxRecentMessages=10}async processMessageNaturally(e){try{await this.startTypingIndicator();const t=this.calculateTypingTime(e);if(await i(t),await this.stopTypingIndicator(),this.shouldSplitMessage(e))return await this.sendSplitMessage(e);{const t=document.querySelector(CONFIG.selectors.activeChat.messageInput);if(!t)throw new Error("Input field not found");return await this.insertTextNaturally(t,e),await this.sendViaEnter(t),this.recordMessageLength(e),!0}}catch(e){return logger.error(`Error processing message: ${e.message}`),await this.stopTypingIndicator(),!1}}async insertTextNaturally(e,t){if(!e||!t)return!1;try{e.focus(),e.innerText="",e.textContent="",document.execCommand&&(document.execCommand("selectAll",!1,null),document.execCommand("delete",!1,null)),e.dispatchEvent(new Event("input",{bubbles:!0})),await this.delay(200);let n=!1;if("true"===e.contentEditable&&(e.innerText=t,e.dispatchEvent(new Event("input",{bubbles:!0})),n=!0,logger.debug("Text inserted using contentEditable innerText method")),!n&&document.execCommand)try{document.execCommand("insertText",!1,t),n=!0,logger.debug("Text inserted using execCommand method")}catch(e){logger.debug(`execCommand failed: ${e.message}`)}if(!n&&"value"in e&&(e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),n=!0,logger.debug("Text inserted using value property method")),!n){for(;e.firstChild;)e.removeChild(e.firstChild);const a=document.createTextNode(t);e.appendChild(a),e.dispatchEvent(new Event("input",{bubbles:!0})),n=!0,logger.debug("Text inserted using DOM manipulation method")}return e.innerText&&""!==e.innerText.trim()?logger.debug(`Text verification: field contains "${e.innerText.substring(0,30)}..."`):(logger.warn("Text insertion succeeded but field appears empty"),e.textContent=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0}))),!0}catch(e){return logger.error(`Error in insertTextNaturally: ${e.message}`),!1}}createTypoVersion(e){if(e.length<10)return e;const t=Math.floor(Math.random()*(e.length-3)+1),n=Math.random();if(n<.33)return e.substring(0,t)+e[t]+e.substring(t);if(!(n<.66))return e.substring(0,t)+e.substring(t+1);{const n={a:"sqzw",b:"vghn",c:"xdfv",d:"serfcx",e:"wsrdf",f:"drtgv",g:"ftyhb",h:"gyujn",i:"ujko",j:"hyuikn",k:"jiol",l:"kop",m:"njk",n:"bhjm",o:"iklp",p:"ol",q:"wa",r:"edft",s:"awedxz",t:"rfgy",u:"yhji",v:"cfgb",w:"qase",x:"zsdc",y:"tghu",z:"asx"},a=e[t].toLowerCase();if(n[a]){const s=n[a][Math.floor(Math.random()*n[a].length)];return e.substring(0,t)+s+e.substring(t+1)}}return e}async sendViaEnter(e){try{e.focus();const t=new KeyboardEvent("keydown",{bubbles:!0,cancelable:!0,key:"Enter",code:"Enter",keyCode:13});return e.dispatchEvent(t),setTimeout((()=>{if(e.innerText&&""!==e.innerText.trim()){const e=document.querySelector(CONFIG.selectors.activeChat.sendButton);e&&e.click()}}),200),!0}catch(e){return logger.error(`Error sending message: ${e.message}`),!1}}shouldSplitMessage(e){return!!this.config.fragmentMessages&&(!!(e&&e.length>2*this.config.fragmentThreshold)||!!(e&&e.length>this.config.fragmentThreshold)&&Math.random()<.7)}async sendSplitMessage(e){try{const t=this.splitTextIntoFragments(e);for(let e=0;e<t.length;e++){if(e>0){const n=this.calculateFragmentInterval();await i(n),await this.startTypingIndicator(),await i(Math.min(30*t[e].length,1500)),await this.stopTypingIndicator()}const n=document.querySelector(CONFIG.selectors.activeChat.messageInput);if(!n)throw new Error("Input field not found");await this.insertTextNaturally(n,t[e]),await this.sendViaEnter(n)}return this.recordMessageLength(e),!0}catch(e){return logger.error(`Error sending split message: ${e.message}`),!1}}splitTextIntoFragments(e){if(!e)return[e];if(e.includes("\n\n"))return e.split(/\n\n+/).filter((e=>e.trim()));const t=e.match(/[^.!?]+[.!?]+/g)||[e],n=[];let a="",s=0;for(const e of t)a.length+e.length>this.config.fragmentThreshold||s>=2&&Math.random()<.5?(a&&n.push(a.trim()),a=e,s=1):(a+=e,s++);return a&&n.push(a.trim()),n.length>0?n:[e]}calculateFragmentInterval(){const e=this.config.fragmentDelay[0],t=this.config.fragmentDelay[1],n=Math.random()<.3?1e3+2e3*Math.random():0;return Math.floor(e+Math.random()*(t-e)+n)}calculateTypingTime(e){if(!e)return this.config.minResponseDelay;let t=e.length*(this.config.baseTypingSpeed/1e3);const n=Math.random()*this.config.typingVariation*e.length/100;return Math.max(this.config.minResponseDelay,Math.min(t+n,this.config.maxResponseDelay))}recordMessageLength(e){e&&(this.recentMessages.push(e),this.recentMessages.length>this.maxRecentMessages&&this.recentMessages.shift())}getAverageMessageLength(){if(0===this.recentMessages.length)return 50;return this.recentMessages.reduce(((e,t)=>e+t.length),0)/this.recentMessages.length}async startTypingIndicator(){try{const e=document.querySelector(CONFIG.selectors.activeChat.messageInput);return e?(e.focus(),!0):(logger.debug("Input field not found for typing indicator"),!1)}catch(e){return logger.debug(`Error activating indicator: ${e.message}`),!1}}async stopTypingIndicator(){try{const e=document.querySelector(CONFIG.selectors.activeChat.messageInput);return e&&e.innerText&&(e.innerText="",e.dispatchEvent(new Event("input",{bubbles:!0}))),!0}catch(e){return logger.debug(`Error deactivating indicator: ${e.message}`),!1}}};window.humanSimulator=humanSimulator;const chatManager=new class{constructor(){this.pendingChats=[],this.currentChatId=null,this.chatHistory=new Map,this.isProcessing=!1,this.conversationLogs=JSON.parse(localStorage.getItem("FB_CHAT_MONITOR_LOGS")||"[]"),this.lastProcessedMessageCount=0,this.manualChatChangeDetected=!1,this.activeChatObserver=null,this.lastScrollHeight=0,this.isProcessingChat=!1,this.respondedChats=new Set,this.isResponding=!1,this.typingState={isTyping:!1,intervalId:null,chatId:null},this._setupUrlChangeDetection()}_setupUrlChangeDetection(){this._lastUrl=window.location.href,setInterval((()=>{const e=window.location.href;this._lastUrl!==e&&(this._lastUrl=e,this._handleUrlChange(e))}),1e3)}_handleUrlChange(e){try{const t=e.match(/\/marketplace\/t\/(\d+)/);if(t&&t[1]){const e=t[1];e!==this.currentChatId&&(logger.debug(`Manual chat change detected to ID: ${e}`),this.currentChatId=e,logger.debug("Chat ID updated. The chat will be processed when Generate Response is clicked."))}}catch(e){logger.error("Error handling URL change",{},e)}}async scanForUnreadChats(){logger.log("Scanning for unread chats...");try{const e=domUtils.findElement(CONFIG.selectors.chatList.container);if(!e)return logger.error("Chat list container not found"),0;const t=domUtils.findAllElements(CONFIG.selectors.chatList.chatItem,e);logger.log(`Found ${t.length} chat elements`),this.pendingChats=[];for(const e of t)if(this.isUnreadChat(e)){const t=this.extractChatId(e),n=this.extractChatUsername(e),a=this.extractMessageTime(e);if(t&&/^\d+$/.test(t)){const s=this.convertTimeToMinutes(a);this.pendingChats.push({chatId:t,userName:n,messageTime:s,formattedTime:a,element:e}),logger.debug(`Chat added to queue: ${n} (${t}), time: ${a}`)}else logger.debug(`Chat ignored with non-numeric ID: ${t}`)}return this.pendingChats.sort(((e,t)=>t.messageTime-e.messageTime)),logger.log(`Total valid unread chats: ${this.pendingChats.length}`),this.pendingChats.length>0?logger.notify(`${this.pendingChats.length} unread chats found`,"success"):logger.notify("No unread chats found","info"),this.pendingChats.length}catch(e){return logger.error(`Error scanning chats: ${e.message}`),0}}isUnreadChat(e){try{const t=e.querySelector(CONFIG.selectors.chatList.unreadIndicator);if(t){if(!(t.textContent||"").includes("Marketplace ·"))return logger.debug("Unread chat detected with specific indicator"),!0}const n=Array.from(e.querySelectorAll(CONFIG.selectors.chatList.chatUserName.selector.join(", ")));for(const e of n){const t=window.getComputedStyle(e);if(t&&parseInt(t.fontWeight)>=600)return logger.debug("Unread chat detected by bold font style"),!0}return!1}catch(e){return logger.error(`Error evaluating unread chat: ${e.message}`),!1}}extractChatId(e){const t=e.getAttribute("href");if(t&&t.includes("/marketplace/t/")){const e=t.match(/\/marketplace\/t\/(\d+)\//);if(e&&e[1])return logger.debug(`ID extracted from href: ${e[1]}`),e[1]}const n=e.querySelectorAll('a[href*="/marketplace/t/"]');for(const e of n){const t=e.getAttribute("href").match(/\/marketplace\/t\/(\d+)\//);if(t&&t[1])return logger.debug(`ID extracted from secondary link: ${t[1]}`),t[1]}const a=e.getAttribute("data-testid");if(a&&/^\d+$/.test(a))return logger.debug(`ID extracted from data-testid: ${a}`),a;const s=`chat_${this.extractChatUsername(e).replace(/\s+/g,"_").toLowerCase()}`;return logger.debug(`ID generated as fallback: ${s}`),s}extractChatUsername(e){try{if(Array.isArray(CONFIG.selectors.chatList.chatUserName.selector)){const t=CONFIG.selectors.chatList.chatUserName.selector.join(", "),n=Array.from(e.querySelectorAll(t)),a=CONFIG.selectors.chatList.chatUserName.filter?CONFIG.selectors.chatList.chatUserName.filter(n):n;if(a&&a.length>0){const e=a[0].innerText;return e.split("·")[0].trim()||"Unknown User"}}else{const t=Array.isArray(CONFIG.selectors.chatList.chatUserName)?CONFIG.selectors.chatList.chatUserName.join(", "):CONFIG.selectors.chatList.chatUserName,n=Array.from(e.querySelectorAll(t)).filter((e=>{const t=e.innerText||"";return t.includes("·")&&!t.includes(":")}));if(n.length>0){const e=n[0].innerText;return e.split("·")[0].trim()||"Unknown User"}}const t=Array.from(e.querySelectorAll(CONFIG.selectors.chatList.chatUserName.selector.join(", ")))[0];return t?.innerText?.trim()||"Unknown User"}catch(e){return logger.error(`Error extracting username: ${e.message}`),"Unknown User"}}extractMessageTime(e){try{const t=domUtils.findElement(CONFIG.selectors.chatList.timestamp,e);return t?.innerText||"0m"}catch(e){return logger.error(`Error extracting message time: ${e.message}`),"0m"}}convertTimeToMinutes(e){if(!e)return 0;const t=e.match(/(\d+)([mhdsw])/);if(!t)return 0;const n=parseInt(t[1]);switch(t[2]){case"m":default:return n;case"h":return 60*n;case"d":return 60*n*24;case"w":return 60*n*24*7}}async openNextPendingChat(){if(0===this.pendingChats.length)return logger.log("No pending chats"),!1;this.pendingChats.sort(((e,t)=>t.messageTime-e.messageTime));const e=this.pendingChats.shift();logger.log(`Opening chat with ${e.userName} (${e.chatId})`);try{if(e.element&&"function"==typeof e.element.click){logger.log("Using direct click method to open chat"),e.element.scrollIntoView({behavior:"smooth",block:"center"}),logger.notify(`Opening chat: ${e.userName}`,"info"),await new Promise((e=>setTimeout(e,1e3))),e.element.click(),this.currentChatId=e.chatId,await new Promise((e=>setTimeout(e,4e3)));const t="auto"===window.CONFIG?.operationMode;return logger.debug(`Processing chat in ${t?"AUTO":"MANUAL"} mode (operationMode: ${window.CONFIG?.operationMode})`),await this.processCurrentChat(t),await this.markChatAsRead(),!0}if(/^\d+$/.test(e.chatId)){logger.log("Using direct URL navigation to open chat");const t=`https://www.messenger.com/marketplace/t/${e.chatId}/`;return logger.notify(`Navigating to: ${e.userName}`,"info"),window.location.href=t,await this.markChatAsRead(),!0}return logger.error("Could not open chat - neither by click nor by URL"),!1}catch(e){return logger.error(`Error opening chat: ${e.message}`),!1}}async generateResponseForCurrentChat(){if(!this.currentChatId)return logger.error("No active chat to generate response"),s("No active chat detected. Please select a chat first.","error"),!1;try{logger.debug("Generate Response button clicked - processing current chat"),await this.extractCurrentChatData();const e=this.chatHistory.get(this.currentChatId);if(!e||!e.messages||0===e.messages.length)return logger.error("Could not extract chat data"),s("Could not extract chat data. Please try again.","error"),!1;const t={chatId:this.currentChatId,role:e.isSeller?"seller":"buyer",messages:e.messages,productDetails:e.productDetails};return await this.handleResponse(t),!0}catch(e){return logger.error(`Error generating response: ${e.message}`),s(`Error generating response: ${e.message}`,"error"),!1}}async extractCurrentChatData(){if(!this.currentChatId)return logger.error("No active chat to extract data"),{success:!1,error:"No active chat"};logger.log(`Extracting data from chat ${this.currentChatId}`);try{const e=await domUtils.waitForElement(CONFIG.selectors.activeChat.container);let t=null;const n=productExtractor.extractProductIdFromCurrentChat(),a=this.extractProductLink(e);n&&(logger.log(`Product ID found: ${n}`),logger.debug(`Product link found: ${a}`),t=await productExtractor.getProductDetails(n,a));const s=await domUtils.waitForElement(CONFIG.selectors.activeChat.messageWrapper),i=domUtils.findElement(CONFIG.selectors.activeChat.scrollbar,s)||s;await domUtils.scrollToTop(i);const r=this.determineIfSeller(e);logger.log("Role in chat: "+(r?"seller":"buyer")),i.scrollTop=i.scrollHeight;const o=await this.extractChatHistory(s);logger.log(`Extracted ${o.length} messages from chat`);const l={messages:o,productDetails:t,isSeller:r,lastUpdated:new Date};return this.chatHistory.set(this.currentChatId,l),{success:!0,chatData:l}}catch(e){return logger.error(`Error extracting chat data: ${e.message}`),{success:!1,error:e}}}async processCurrentChat(e=!1){if(null==e&&(e="auto"===window.CONFIG?.operationMode,logger.debug("Auto-respond not specified, using global setting: "+(e?"AUTO":"MANUAL"))),e)try{logger.debug("AUTO mode detected - Preventively clearing input field");const e=document.querySelector(CONFIG.selectors.activeChat.messageInput);if(e){"true"===e.getAttribute("contenteditable")?(e.innerHTML="",e.textContent=""):e.value="";const t=new Event("input",{bubbles:!0});e.dispatchEvent(t)}}catch(e){logger.error(`Error in preventive cleaning: ${e.message}`)}if(e&&this.respondedChats.has(this.currentChatId))return logger.debug(`Auto-response already sent for chat ${this.currentChatId}, skipping.`),!0;if(e&&this.isResponding)return logger.debug(`Already processing response for chat ${this.currentChatId}, skipping new call.`),!0;this.isResponding=e;const t=await this.extractCurrentChatData();if(!t.success)return logger.error("Failed to extract chat data during processCurrentChat."),!1;if(e){logger.debug(`Automatic response enabled for chat ${this.currentChatId} (operationMode: ${window.CONFIG?.operationMode})`);const e=t.chatData;if(!e||!e.messages||0===e.messages.length)return logger.warn("No messages found in extracted data, cannot auto-respond."),!0;const n={chatId:this.currentChatId,role:e.isSeller?"seller":"buyer",messages:e.messages,productDetails:e.productDetails};try{return logger.log(`Generating automatic response as ${n.role} for chat ${this.currentChatId}`),await this.handleResponse(n),this.respondedChats.add(this.currentChatId),logger.log("Automatic response generated and sent successfully"),!0}catch(e){return logger.error(`Error during automatic response generation: ${e.message}`),!1}}else logger.debug(`Automatic response disabled for chat ${this.currentChatId}. Only data was extracted.`);return this.isResponding=!1,!0}extractProductLink(e){const t=domUtils.findElement(CONFIG.selectors.activeChat.productLink,e);return t?.href||null}getAudioTranscription(e){if(!e||!CONFIG.audioTranscription.enabled)return null;if("[Audio URL will be detected by Performance API]"===e)return null;if(!window.audioTranscriber)return logger.debug(`Audio transcriber not available for URL: ${e}`),null;try{const t=window.audioTranscriber.getTranscription(e);if(t)return logger.debug(`Transcription found for audio: ${e.substring(0,50)}...`),t}catch(e){logger.warn(`Error accessing audio transcription: ${e.message}`)}return null}async extractChatHistory(e){if(this.isProcessingChat)return logger.warn("Chat history extraction already in progress. Skipping."),[];if(!e)return logger.error("messagesWrapper element not provided to extractChatHistory."),[];this.isProcessingChat=!0,logger.debug("Starting chat history extraction (simplified)…");const t=[];let n=[];try{const a=window.CONFIG?.selectors?.activeChat||{messageWrapper:'div.x4k7w5x > div > div > div, div[role="main"] > div > div > div:last-child > div',messageRow:'div[role="row"]',senderAvatar:'img.x1rg5ohu[alt]:not([alt="Open photo"])'};if(n=domUtils.findAllElements(a.messageRow,e),logger.log(`Analyzing ${n.length} messages in the current DOM`),0===n.length)return logger.warn("No message rows found with selector:",a.messageRow),[];n.forEach(((e,n)=>{const a=Array.from(e.querySelectorAll('span[dir="auto"], div[dir="auto"]')),s=[...new Set(a.map((e=>e.textContent.trim())).filter((e=>e&&"enter"!==e.toLowerCase())))].join(" ").trim(),i=this.isDividerElement(e),r=!i&&this.isSystemMessage(s),o=!i&&!r&&!!this.detectQuotedMessage(e);let l=!1,c="UNKNOWN";i?c="DIVIDER 📅":r?c="SYSTEM 🤖":o?(l=this.isMessageSentByUs(e),c=l?"OWN REPLY 📣✅":"EXTERNAL REPLY 📣❌"):(l=this.isMessageSentByUs(e),c=l?"OWN ✅":"EXTERNAL ❌"),i||r?logger.debug(`#${n+1}: Skipped ${i?"DIVIDER":"SYSTEM"} message`):(t.push({id:`msg_${this.currentChatId}_${n}`,sentByUs:l,content:{text:s,type:c,media:{}}}),logger.debug(`#${n+1}: ${c} – ${s.substring(0,30)}${s.length>30?"…":""}`))})),this.lastProcessedMessageCount=t.length,logger.log(`Extraction completed: ${t.length} messages found`)}catch(e){logger.error("Error during chat history extraction:",{},e)}finally{this.isProcessingChat=!1}return t}isValidTimestamp(e){if(!e||"string"!=typeof e)return!1;const t=e.trim();if([/^\d{1,2}:\d{2}$/,/^[a-záéíóúüñ\s]+$/i,/^(Play|Reproducir|Pause|Pausar)$/i,/^Message replied to:/i,/^Message:/i].some((e=>e.test(t))))return!1;return[/\d{1,2}:\d{2}\s*(AM|PM)/i,/\d{1,2}\/\d{1,2}\/\d{2,4}/,/(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec|Ene|Feb|Mar|Abr|May|Jun|Jul|Ago|Sep|Oct|Nov|Dic)/i,/(Today|Yesterday|Hoy|Ayer)/i,/minutes? ago|hours? ago|minutes?|hours?/i,/sent at \d{1,2}:\d{2}\s*(AM|PM)?/i,/sent at \d{1,2}:\d{2}/i].some((e=>e.test(t)))}detectAndAddImageContent(e,t){try{const n=Array.isArray(CONFIG.selectors.activeChat.messageImageElement)?CONFIG.selectors.activeChat.messageImageElement.join(", "):CONFIG.selectors.activeChat.messageImageElement,a=e.querySelectorAll(n);if(a.length>0){const e=Array.from(a).filter((e=>{const t=e.src||"";return t&&!t.startsWith("data:")&&(e.width>30||!e.width)&&(e.height>30||!e.height)&&!t.includes("/emoji.")&&!t.includes("/avatar/")}));e.length>0&&(t.content.imageUrls=e.map((e=>e.src)),t.content.media.images=e.map((e=>({url:e.src,alt:e.alt||"",width:e.width||0,height:e.height||0}))),"unknown"===t.content.type&&(t.content.type="image"))}const s=e.querySelectorAll('div[style*="background-image"]');if(s.length>0)for(const e of s){const n=(e.getAttribute("style")||"").match(/background-image:\s*url\(['"]?(.*?)['"]?\)/i);if(n&&n[1]&&!n[1].startsWith("data:")){const a=n[1];t.content.imageUrls.includes(a)||(t.content.imageUrls.push(a),t.content.media.images.push({url:a,alt:"Background Image",width:e.clientWidth||0,height:e.clientHeight||0}),"unknown"===t.content.type&&(t.content.type="image"))}}}catch(e){logger.error(`Error detecting images: ${e.message}`,{},e)}}detectAndAddAudioContent(e,t){try{const n=Array.isArray(CONFIG.selectors.activeChat.messageAudioPlayButton)?CONFIG.selectors.activeChat.messageAudioPlayButton.join(", "):CONFIG.selectors.activeChat.messageAudioPlayButton,a=e.querySelector(n);if(a){const n=a.getAttribute("aria-label")||"";if(n.toLowerCase().includes("video"))return;const s=this.extractAudioDuration(e)||"",i=this.extractAudioUrl(e)||null;if(t.content.hasAudio=!0,t.content.audioUrl=i,t.content.media.audio={exists:!0,url:i,duration:s,label:n},"unknown"===t.content.type&&(t.content.type="audio"),i&&"function"==typeof this.getAudioTranscription){const e=this.getAudioTranscription(i);t.content.transcribedAudio=e||"[Audio Transcription Pending]"}}else{const n=e.querySelector("audio[src]");if(n){const e=n.src;if(t.content.hasAudio=!0,t.content.audioUrl=e,t.content.media.audio={exists:!0,url:e,duration:n.duration?`${Math.round(n.duration)}s`:"",label:"Audio message"},"unknown"===t.content.type&&(t.content.type="audio"),"function"==typeof this.getAudioTranscription){const n=this.getAudioTranscription(e);t.content.transcribedAudio=n||"[Audio Transcription Pending]"}}}}catch(e){logger.error(`Error detecting audio: ${e.message}`,{},e)}}extractAudioDuration(e){try{const t=['span[style*="color: rgba"]',"span.x193iq5w",'div[dir="auto"] > span'];for(const n of t){const t=e.querySelectorAll(n);for(const e of t){const t=e.textContent.trim();if(/^\d{1,2}:\d{2}$/.test(t))return t}}return null}catch(e){return logger.debug(`Error extracting audio duration: ${e.message}`),null}}extractAudioUrl(e){try{const t=e.querySelector("audio[src]");if(t&&t.src)return t.src;const n=e.querySelector('a[href*=".mp3"], a[href*=".m4a"], a[href*=".wav"], a[href*=".ogg"]');return n&&n.href?n.href:null}catch(e){return logger.debug(`Error extracting audio URL: ${e.message}`),null}}detectAndAddVideoContent(e,t){try{const n=e.querySelector('video, a[href*="video_redirect"]');if(n){if("VIDEO"===n.tagName){const e={exists:!0,url:n.src||null,type:"video",thumbnail:this.extractVideoThumbnail(n)||null,duration:n.duration?`${Math.round(n.duration)}s`:null};t.content.media.video=e,"unknown"===t.content.type&&(t.content.type="video")}else if("A"===n.tagName&&n.href){const e={exists:!0,url:n.href,type:"video_link",thumbnail:null,duration:null};t.content.media.video=e,"unknown"===t.content.type&&(t.content.type="video")}}else{const n=Array.isArray(CONFIG.selectors.activeChat.messageVideoElement)?CONFIG.selectors.activeChat.messageVideoElement.join(", "):CONFIG.selectors.activeChat.messageVideoElement,a=e.querySelector(n);if(a){const e=a.getAttribute("aria-label")||"Video Player",n={exists:!0,url:null,type:a.style.backgroundImage||a.querySelector('div[style*="background-image"]')?"video_thumbnail":"video_player",thumbnail:this.extractBackgroundImage(a),label:e};t.content.media.video=n,"unknown"===t.content.type&&(t.content.type="video")}}}catch(e){logger.error(`Error detecting video: ${e.message}`,{},e)}}extractBackgroundImage(e){try{const t=(e.getAttribute("style")||"").match(/background-image:\s*url\(['"]?(.*?)['"]?\)/i);if(t&&t[1])return t[1];const n=e.querySelector('div[style*="background-image"]');if(n){const e=(n.getAttribute("style")||"").match(/background-image:\s*url\(['"]?(.*?)['"]?\)/i);if(e&&e[1])return e[1]}return null}catch(e){return logger.debug(`Error extracting background image: ${e.message}`),null}}extractVideoThumbnail(e){try{if(e.poster)return e.poster;const t=e.querySelector('source[type^="video/"]');return t&&t.src?t.src.replace(/\.mp4$/,".jpg"):null}catch(e){return logger.debug(`Error extracting video thumbnail: ${e.message}`),null}}detectAndAddFileContent(e,t){try{const n=Array.isArray(CONFIG.selectors.activeChat.messageFileElement)?CONFIG.selectors.activeChat.messageFileElement.join(", "):CONFIG.selectors.activeChat.messageFileElement,a=Array.from(e.querySelectorAll(n));if(a.length>0){const e=[];a.forEach((t=>{const n=t.href||null,a=this.extractFileName(t),s=this.detectFileType(t,a);(n||a)&&e.push({url:n,name:a,type:s})})),e.length>0&&(t.content.media.files=e,"unknown"===t.content.type&&(t.content.type="file"))}}catch(e){logger.error(`Error detecting files: ${e.message}`,{},e)}}extractFileName(e){try{if(e.hasAttribute("download"))return e.getAttribute("download")||this.extractFileNameFromPath(e.href);const t=e.textContent?.trim();if(t&&t.includes(".")){const e=t.match(/[\w\s\-]+\.\w+/);if(e)return e[0]}if(e.hasAttribute("title"))return e.getAttribute("title");if(e.hasAttribute("aria-label")){const t=e.getAttribute("aria-label");if(t.includes("file")||t.includes("archivo")){const e=t.split(":");if(e.length>1)return e[1].trim()}return t}return e.href?this.extractFileNameFromPath(e.href):"Unnamed file"}catch(e){return logger.debug(`Error extracting file name: ${e.message}`),"Unnamed file"}}extractFileNameFromPath(e){if(!e)return"Unnamed file";try{const t=new URL(e).pathname.split("/"),n=t[t.length-1].split("?")[0];return decodeURIComponent(n)||"Unnamed file"}catch(t){const n=e.match(/\/([^\/\?]+)(?:\?|$)/);return n?decodeURIComponent(n[1]):"Unnamed file"}}detectFileType(e,t){try{if(!t)return"unknown";const e=t.split(".").pop().toLowerCase();return{pdf:"pdf",doc:"document",docx:"document",odt:"document",rtf:"document",xls:"spreadsheet",xlsx:"spreadsheet",ods:"spreadsheet",ppt:"presentation",pptx:"presentation",odp:"presentation",txt:"text",zip:"archive",rar:"archive","7z":"archive",jpg:"image",jpeg:"image",png:"image",gif:"image",bmp:"image",mp3:"audio",wav:"audio",ogg:"audio",m4a:"audio",mp4:"video",avi:"video",mov:"video",wmv:"video"}[e]||"unknown"}catch(e){return logger.debug(`Error detecting file type: ${e.message}`),"unknown"}}detectAndAddLocationContent(e,t){try{const n=Array.isArray(CONFIG.selectors.activeChat.messageLocationElement)?CONFIG.selectors.activeChat.messageLocationElement.join(", "):CONFIG.selectors.activeChat.messageLocationElement,a=e.querySelector(n);if(a){let e=null;if("A"===a.tagName&&a.href){const t=this.extractLocationLabel(a)||"Shared location",n=this.extractCoordinates(a.href);e={url:a.href,label:t,coordinates:n}}else{const t=this.extractLocationLabel(a)||"Shared location",n=a.querySelector('a[href*="maps"]'),s=n?n.href:null;e={url:s,label:t,coordinates:s?this.extractCoordinates(s):null}}e&&(t.content.media.location=e,"unknown"===t.content.type&&(t.content.type="location"))}}catch(e){logger.error(`Error detecting location: ${e.message}`,{},e)}}extractLocationLabel(e){try{if(e.hasAttribute("aria-label"))return e.getAttribute("aria-label").replace(/location|ubicación|shared/i,"").trim();const t=e.textContent?.trim();return t&&!t.startsWith("http")?t:null}catch(e){return logger.debug(`Error extracting location label: ${e.message}`),null}}extractCoordinates(e){if(!e)return null;try{if(e.includes("maps")){let t=e.match(/[?&]q=(-?\d+\.\d+),(-?\d+\.\d+)/i);if(t||(t=e.match(/@(-?\d+\.\d+),(-?\d+\.\d+)/i)),t)return{latitude:parseFloat(t[1]),longitude:parseFloat(t[2])}}return null}catch(e){return logger.debug(`Error extracting coordinates: ${e.message}`),null}}detectAndAddGifContent(e,t){try{const n=Array.isArray(CONFIG.selectors.activeChat.messageGifElement)?CONFIG.selectors.activeChat.messageGifElement.join(", "):CONFIG.selectors.activeChat.messageGifElement,a=e.querySelector(n);if(a){let n=null;if("IMG"===a.tagName){const t=a.src,s=t&&(t.includes("giphy.com")||t.includes("tenor.com")||t.endsWith(".gif"));n={url:t,type:!!e.querySelector('[data-testid="sticker"]')?"sticker":s?"gif":"animated_content",alt:a.alt||""}}else{const e=a.getAttribute("aria-label")||"GIF",t=a.querySelector("img");n={url:t?t.src:null,type:e.toLowerCase().includes("sticker")?"sticker":"gif",label:e}}n&&(t.content.media.gif=n,"unknown"===t.content.type&&(t.content.type="gif"))}}catch(e){logger.error(`Error detecting GIF/sticker: ${e.message}`,{},e)}}isSystemMessage(e){if(!e)return!1;const t=[/^(You|Tú|[A-Z][a-z]+) started this chat\.?( View (seller|buyer) profile)?$/i,/^([A-ZÁÉÍÓÚÑ][a-záéíóúñ]+) inició el chat\.?( Ver (perfil del vendedor|perfil del comprador))?$/i,/^You added .* to the group\.$/i,/^Agregaste a .* al grupo\.$/i,/^You removed .* from the group\.$/i,/^Eliminaste a .* del grupo\.$/i,/^.* (left|salió del) grupo\.$/i,/^You named the group .*$/i,/^Nombraste al grupo .*$/i,/^You changed the chat colors\.$/i,/^Cambiaste los colores del chat\.$/i,/^You set the nickname for .* to .*$/i,/^Definiste el apodo de .* como .*$/i,/^Changed the group photo\.$/i,/^Cambió la foto del grupo\.$/i,/cambió la foto del grupo\.$/i,/named the group .+\.$/i,/nombró al grupo .+\.$/i,/^[A-Z][a-z]+(?: [A-Z][a-z]+)? changed the group photo\.$/i,/^[A-Z][a-z]+(?: [A-Z][a-z]+)? named the group .+\.$/i,/^You sent (a )?(GIF|photo|video|attachment)\.$/i,/^Enviaste (un|una) (GIF|foto|video|adjunto)\.$/i,/^You shared a location\.$/i,/^Compartiste una ubicación\.$/i,/^Missed call$/i,/^You missed a call from .*$/i,/^Llamada perdida$/i,/^Llamada perdida de .*$/i,/^.* marked the listing as (Available|Pending)\.$/i,/^Marcó este artículo como (vendido|pendiente|disponible)\.?$/i,/^.* sold .+\.$/i,/^Vendió .+\.$/i,/^[A-Z][a-z]+ marked the listing as (Available|Pending)\.$/i,/^[A-Z][a-z]+ sold .+\.$/i,/^.* bumped their message:?$/i,/^Mensaje enviado$/i,/^Ver anuncios similares$/i,/^See similar listings$/i,/^Ver perfil del comprador$/i,/^View buyer profile$/i,/^Ver perfil del vendedor$/i,/^View seller profile$/i,/^Ver detalles del comprador$/i,/^View buyer details$/i,/detalles del comprador$/i,/buyer details$/i,/^Estás recibiendo muchos mensajes sobre este anuncio/i,/^You're receiving a lot of messages about this listing/i,/^Estás esperando tu respuesta sobre este anuncio\.\s*Ver anuncio$/i,/^You're waiting for a response about this listing\.\s*View listing$/i,/^Is getting a lot of messages about this listing/i,/^Is waiting for your response about this listing\.\s*View listing$/i,/^Beware of common scams using payment apps/i,/^[A-Z][a-z]+ is getting a lot of messages about this listing\.? See similar listings$/i,/^[A-Z][a-z]+ is waiting for your response about this listing\.? View listing$/i,/^You can now rate each other.*Rate [A-Z][a-z]+$/i,/^Ahora pueden calificarse.*Califica a [A-ZÁÉÍÓÚÑ][a-záéíóúñ]+$/i,/^Joined facebook in \d{4}$/i,/^Se unió a Facebook en \d{4}$/i,/se unió a Facebook en \d{4}/i,/^\d{1,2}\/\d{1,2}\/\d{2,4},\s*\d{1,2}:\d{2}(\u2009|\u202F)?\s*(AM|PM)?$/i,/^[A-Za-z]{3,9}\s+\d{1,2},\s+\d{4}(,\s*\d{1,2}:\d{2}\s*(AM|PM)?)?$/i,/·\s*.*\s*add name$/i].some((t=>t.test(e)));return t&&logger.debug(`[isSystemMessage] System message detected: "${e.substring(0,30)}..."`),t}isDividerElement(e){try{const t=e.innerText||"";if(e.classList&&(e.classList.contains("x1e56ztr")||e.classList.contains("x78zum5")||e.classList.contains("xh8yej3"))){const t=e.querySelector('div[dir="auto"], span[dir="auto"]');if(!t||t.textContent.length<5)return logger.debug(`[isDivider] Element with divider class and little/no text: ${e.className}`),!0}return/^(Today|Yesterday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday|Hoy|Ayer|Lunes|Martes|Miércoles|Jueves|Viernes|Sábado|Domingo)$/i.test(t)?(logger.debug(`[isDivider] Element with day text: ${t}`),!0):/^\d{1,2}\/\d{1,2}\/\d{2,4}$/.test(t)||/^\d{1,2}\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)(\w*)(\s+\d{2,4})?$/i.test(t)||/^\d{1,2}\s+(Ene|Feb|Mar|Abr|May|Jun|Jul|Ago|Sep|Oct|Nov|Dic)(\w*)(\s+\d{2,4})?$/i.test(t)?(logger.debug(`[isDivider] Element with date text: ${t}`),!0):("separator"===e.getAttribute("role")||"HR"===e.tagName||0===e.children.length&&"separator"===e.parentElement?.getAttribute("role"))&&(logger.debug("[isDivider] Element with separator role/tag"),!0)}catch(e){return logger.error(`Error in isDividerElement: ${e.message}`),!1}}detectQuotedMessage(e){try{const t=e.querySelector('div[data-testid="message-quote"]');if(!t)return null;const n=t.querySelector('span[data-testid="message-text"]'),a=n?n.innerText.trim():"";let s=null;const i=t.querySelector("span.x1ncwhqj, h4.xexx8yu");i&&(s=i.innerText.trim());let r=null;const o=t.querySelector(CONFIG.selectors.activeChat.messageTimestamp.join(", "));return o&&(r=o.getAttribute("aria-label")||o.getAttribute("data-tooltip-content")||o.innerText),{type:"reply",quotedText:a,originalSender:s,originalTimestamp:r}}catch(e){return logger.debug(`Error detecting quoted message: ${e.message}`),null}}extractMentions(e){try{const t=[];return e.querySelectorAll('a[href*="/user/"], span.xngnso2, span[data-hovercard]').forEach((e=>{const n=e.innerText.trim();let a=null;if(e.href){const t=e.href.match(/\/user\/(\d+)|\?id=(\d+)/);t&&(a=t[1]||t[2])}else if(e.getAttribute("data-hovercard")){const t=e.getAttribute("data-hovercard").match(/id=(\d+)/);t&&(a=t[1])}n&&t.push({name:n,id:a})})),t.length>0?t:null}catch(e){return logger.debug(`Error extracting mentions: ${e.message}`),null}}enhanceMessageContext(e,t){try{const n=this.detectQuotedMessage(e);n&&(t.context={...t.context||{},...n},t.content.type="unknown"===t.content.type?"reply":`${t.content.type}_reply`);const a=this.extractMentions(e);a&&(t.context={...t.context||{},mentions:a});const s=this.detectReactions(e);s&&(t.context={...t.context||{},reactions:s});const i=this.detectProductMention(e);i&&(t.context={...t.context||{},productMention:i})}catch(e){logger.debug(`Error enhancing message context: ${e.message}`)}}detectReactions(e){try{const t=e.querySelector('div.xq8finb, div.x6s0dn4.x78zum5.xl56j7k, div[role="toolbar"][aria-label*="reaction"]');if(!t)return null;const n=[];return t.querySelectorAll('img.emoji, span[aria-label*=":"], div[aria-label*="Reacted"]').forEach((e=>{let t="unknown",a="";if("IMG"===e.tagName)t="emoji",a=e.alt||e.getAttribute("aria-label")||"";else{const n=e.getAttribute("aria-label")||"";if(n.includes("Like"))t="like",a="👍";else if(n.includes("Love"))t="love",a="❤️";else if(n.match(/Reacted with/i)){t="emoji";const e=n.match(/Reacted with :([^:]+):/);a=e?e[1]:n.replace(/Reacted with\s*/i,"")}else a=n}a&&n.push({type:t,value:a})})),n.length>0?n:null}catch(e){return logger.debug(`Error detecting reactions: ${e.message}`),null}}detectProductMention(e){try{const t=e.querySelector('a[href*="/marketplace/item/"]');if(!t)return null;const n=t.href;let a=null;const s=n.match(/\/marketplace\/item\/(\d+)/);s&&(a=s[1]);let i="",r="";const o=t.querySelector('span[dir="auto"], div[dir="auto"]');o&&(i=o.innerText.trim());const l=e.querySelector('a[href*="/marketplace/item/"] img, div.x1ey2m1c img');return l&&l.src&&(r=l.src),{type:"product",productId:a,productUrl:n,title:i,imageUrl:r}}catch(e){return logger.debug(`Error detecting product mention: ${e.message}`),null}}detectSpecialSystemEvents(e){if(!e)return null;const t=[{pattern:/marked this item as (sold|pending|available)/i,type:"status_change",action:e=>e[1].toLowerCase()},{pattern:/changed the price from ([\d,\.]+) to ([\d,\.]+)/i,type:"price_change",action:e=>({oldPrice:e[1],newPrice:e[2]})},{pattern:/(canceled|completed) this sale/i,type:"sale_event",action:e=>e[1].toLowerCase()},{pattern:/requested more details about/i,type:"request",action:()=>"details_request"},{pattern:/marcó este artículo como (vendido|pendiente|disponible)/i,type:"status_change",action:e=>{const t=e[1].toLowerCase();return"vendido"===t?"sold":"pendiente"===t?"pending":"available"}}];for(const n of t){const t=e.match(n.pattern);if(t)return{type:n.type,action:n.action(t),originalText:e}}return null}async extractChatHistoryEnhanced(e){if(this.isProcessingChat)return logger.warn("Chat history extraction already in progress. Skipping."),[];if(!e)return logger.error("messagesWrapper element not provided to extractChatHistory."),[];this.isProcessingChat=!0,logger.debug("Starting enhanced chat history extraction...");const t=[];let n=[],a=null;try{if(n=domUtils.findAllElements(CONFIG.selectors.activeChat.messageRow,e),logger.debug(`Found ${n.length} message row elements`),0===n.length){const t=e.querySelectorAll('div[dir="auto"][role="none"]');if(!(t.length>0))throw new Error("No message elements found with main or fallback selectors");n=Array.from(t)}const s=20,i=Math.ceil(n.length/s);for(let e=0;e<i;e++){const r=e*s,o=Math.min(r+s,n.length),l=n.slice(r,o);logger.debug(`Processing batch ${e+1}/${i} (${l.length} messages)`);const c=await this.processBatchOfMessages(l,a,e);c.lastProcessed&&(a=c.lastProcessed),c.messages&&c.messages.length>0&&t.push(...c.messages),e<i-1&&await new Promise((e=>setTimeout(e,5)))}this.lastProcessedMessageCount=t.length,logger.log(`Enhanced extraction completed: ${t.length} messages processed in ${i} batches`),this.buildMessageReferences(t)}catch(e){logger.error("Error during enhanced chat history extraction:",{},e)}finally{this.isProcessingChat=!1}return t}async processBatchOfMessages(e,t,n){const a=[];let s=t;for(let t=0;t<e.length;t++){const i=e[t],r=i,o=r.outerHTML;if(o===s)continue;s=o;const l=domUtils.findElement(["div.x1cy8zhl",'div[data-testid*="message-container"]','span.x1lliihq.x1plvlek > div[dir="auto"]'],i)||i,c={id:`msg_${this.currentChatId}_${100*n+t}`,timestamp:null,sentByUs:!1,content:{text:"",type:"unknown",media:{images:[],audio:null,video:null,files:[],location:null,gif:null}},context:{}};try{c.sentByUs=this.isMessageSentByUs(r);const e=domUtils.findElement(CONFIG.selectors.activeChat.messageContent,l);let t="";e&&(t=(e.innerText||e.textContent||"").trim(),t=t.replace(/^(\d{1,2}\/\d{1,2}\/\d{2,4},\s*)?\d{1,2}:\d{2}\s*(?:AM|PM)?\s*:\s*/i,"").trim(),t=t.replace(/^(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+\d{1,2},\s+\d{4},\s*\d{1,2}:\d{2}\s*(?:AM|PM)?\s*:\s*/i,"").trim(),t=t.replace(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)\s+\d{1,2}:\d{2}\s*(?:AM|PM)?\s*:\s*/i,"").trim(),t=t.replace(/^Sent \d+d ago:\s*/i,"").trim(),t=t.replace(/^\d{1,2}\/\d{1,2}\/\d{2,4},?\s+\d{1,2}:\d{2}\s*(?:AM|PM)?\s*:\s*/i,"").trim());const n=this.isSystemMessage(t),s=this.isDividerElement(i);if(t&&!s)if(c.content.text=t,n){const e=this.detectSpecialSystemEvents(t);e?(c.content.type="system_event",c.context.systemEvent=e):c.content.type="system"}else c.content.type="text";this.enhanceMessageContext(l,c);const o=domUtils.findElement(CONFIG.selectors.activeChat.messageTimestamp,r);if(o){const e=o.getAttribute("data-tooltip-content")||o.getAttribute("aria-label")||o.innerText;this.isValidTimestamp(e)&&(c.timestamp=e)}this.detectAndAddImageContent(l,c),this.detectAndAddAudioContent(l,c),this.detectAndAddVideoContent(l,c),this.detectAndAddFileContent(l,c),this.detectAndAddLocationContent(l,c),this.detectAndAddGifContent(l,c),"unknown"===c.content.type&&(c.content.text?c.content.type="text":c.content.media.images.length>0?c.content.type="image":c.content.media.audio?c.content.type="audio":c.content.media.video?c.content.type="video":c.content.media.files.length>0?c.content.type="file":c.content.media.location?c.content.type="location":c.content.media.gif&&(c.content.type="gif")),"unknown"===c.content.type||s||a.push(c)}catch(e){logger.error(`Error processing message element in batch ${n}, item ${t}:`,{},e)}}return{messages:a,lastProcessed:s}}buildMessageReferences(e){if(e&&0!==e.length)try{const t=new Map;for(let n=0;n<e.length;n++){const a=e[n];if(a.content.text){const e=a.content.text.substring(0,50).toLowerCase();t.has(e)||t.set(e,[]),t.get(e).push({index:n,id:a.id})}}for(let n=0;n<e.length;n++){const a=e[n];if(a.context&&"reply"===a.context.type&&a.context.quotedText){const s=a.context.quotedText.substring(0,50).toLowerCase();if(t.has(s)){const i=t.get(s).filter((e=>e.index<n));if(i.length>0){const t=i.reverse()[0];a.context.referencesMessageId=t.id;const n=e[t.index];n&&(n.context=n.context||{},n.context.referencedBy=n.context.referencedBy||[],n.context.referencedBy.push(a.id))}}}}logger.debug(`Message references built for ${e.length} messages`)}catch(e){logger.error("Error building message references:",{},e)}}determineIfSeller(e){try{for(const t of CONFIG.selectors.activeChat.sellerIndicators)if(t.includes(":contains")){const n=t.match(/:contains\("(.+?)"\)/)[1];if(Array.from(e.querySelectorAll("*")).filter((e=>e.textContent&&e.textContent.includes(n))).length>0)return logger.debug(`Seller indicator found: ${n}`),!0}else{if(e.querySelectorAll(t).length>0)return logger.debug(`Seller indicator found: ${t}`),!0}for(const t of CONFIG.selectors.activeChat.buyerIndicators)if(t.includes(":contains")){const n=t.match(/:contains\("(.+?)"\)/)[1];if(Array.from(e.querySelectorAll("*")).filter((e=>e.textContent&&e.textContent.includes(n))).length>0)return logger.debug(`Buyer indicator found: ${n}`),!1}else{if(e.querySelectorAll(t).length>0)return logger.debug(`Buyer indicator found: ${t}`),!1}logger.debug("No definitive role indicators found, using alternative heuristic");return!!e.querySelector('a[href*="/marketplace/item/"]')&&(logger.debug("Product link found, likely a buyer"),!1)}catch(e){return logger.error(`Error determining seller/buyer role: ${e.message}`,{},e),!1}}isMessageSentByUs(e){const t="row"===e?.getAttribute("role")?e:e?.closest('div[role="row"]');if(!t)return logger.debug("[isMessageSentByUs] Could not find the div[role='row'] container. Assuming foreign message."),!1;try{if(t.classList.contains("x1ja2u2z"))return logger.debug("[isMessageSentByUs] CLASS INDICATOR: Row has 'x1ja2u2z'. It's own."),!0;if(t.classList.contains("x1yc453h"))return logger.debug("[isMessageSentByUs] CLASS INDICATOR: Row has 'x1yc453h'. It's foreign."),!1;logger.debug("[isMessageSentByUs] CLASS INDICATOR: No conclusive class detected in the row.");const e=t.firstElementChild;if("gridcell"===e?.getAttribute("role")&&"messages_table"===e.getAttribute("data-scope"))return logger.debug("[isMessageSentByUs] GRIDCELL INDICATOR: First gridcell has data-scope='messages_table'. It's own."),!0;logger.debug("[isMessageSentByUs] GRIDCELL INDICATOR: First gridcell does not have data-scope='messages_table'.");try{const e=window.getComputedStyle(t).getPropertyValue("justify-content");if("flex-end"===e)return logger.debug("[isMessageSentByUs] ALIGNMENT INDICATOR: justify-content is 'flex-end'. It's own."),!0;if("flex-start"===e)return logger.debug("[isMessageSentByUs] ALIGNMENT INDICATOR: justify-content is 'flex-start'. It's foreign."),!1;logger.debug(`[isMessageSentByUs] ALIGNMENT INDICATOR: justify-content is '${e}'. Not conclusive.`)}catch(e){logger.debug(`[isMessageSentByUs] ALIGNMENT INDICATOR: Error getting style: ${e.message}`)}if(Array.from(t.querySelectorAll("[aria-label]")).some((e=>{const t=e.getAttribute("aria-label");return t&&/you sent|enviaste/i.test(t)})))return logger.debug("[isMessageSentByUs] ARIA INDICATOR: Found 'you sent' in aria-label. It's own."),!0;logger.debug("[isMessageSentByUs] ARIA INDICATOR: No sending text found in aria-label.");if(domUtils.findElement(CONFIG.selectors.activeChat.senderAvatar,t))return logger.debug("[isMessageSentByUs] AVATAR INDICATOR: Avatar found in the row. It's foreign."),!1;logger.debug("[isMessageSentByUs] AVATAR INDICATOR: No avatar found in the row. Could be own.");const n=t.querySelector("h5 > span");return n&&/you sent|enviaste/i.test(n.textContent||"")?(logger.debug(`[isMessageSentByUs] TEXTUAL INDICATOR (H5): Found '${n.textContent.trim()}'. It's own.`),!0):(logger.warn("[isMessageSentByUs] Could not determine the sender with certainty after all checks. Assuming foreign message."),!1)}catch(e){return logger.error(`[isMessageSentByUs] General error processing the row: ${e.message}`,{html:t.outerHTML.substring(0,200)},e),!1}}async handleResponse(e){try{if(logger.log("[ChatManager] Initiating handleResponse..."),!e||!e.messages||0===e.messages.length)throw logger.error("[ChatManager] Invalid chat context or no messages."),new Error("Invalid chat context or no messages");const t="seller"===e.role?"seller":"buyer";logger.log(`[ChatManager] Role: ${t}, Total messages for context: ${e.messages.length}`);const n=window.CONFIG?.operationMode||"manual";logger.log(`[ChatManager] Configured operation mode (for sending): ${n}`);const a=window.openaiManager;let i=!1;if("object"==typeof a&&"function"==typeof a.generateResponse&&"function"==typeof a.isReady&&(i=a.isReady()),logger.debug(`[ChatManager] OpenAI Assistant Service (via window.openaiManager) Available: ${i}`),a&&"function"==typeof a.isReady?logger.debug(`[ChatManager] window.openaiManager details: apiKey=${!!a.apiKey}, isInitialized=${a.isInitialized}, isReady=${a.isReady()}`):a&&logger.debug(`[ChatManager] window.openaiManager details: apiKey=${!!a.apiKey}, isInitialized=${a.isInitialized}, isReady method not found.`),i){logger.log("[ChatManager] Using OpenAI Assistant..."),console.log("[ChatManager] Payload to assistant →",e),s("Consulting the OpenAI Assistant...","info");const t=await a.generateResponse(e),n="string"==typeof t?t:t.toString()||"No response received";return this.insertResponseInInputField(n),s("Response inserted. Review and send.","info"),await this.markChatAsRead(),{text:n}}{logger.warn("[ChatManager] No AI services available (window.openaiManager not configured or not ready).");const n=`You are in a conversation as ${t}.\nProduct: ${e.productDetails?`${e.productDetails.title} (${e.productDetails.price})`:"No product information"}\nNo AI services configured. Please check options.`;return s(n,"info"),a?logger.debug(n+`\n[ChatManager] Debug: window.openaiManager ready state: ${a.isReady?a.isReady():"isReady method missing"}, isInitialized: ${a.isInitialized}`):logger.debug(n+"\n[ChatManager] Debug: window.openaiManager is not an object."),{text:n,error:!0,refusalReason:"No AI service configured"}}}catch(e){throw logger.error(`[ChatManager] Critical error in handleResponse: ${e.message}`,{},e),e.message.includes("API Error:")||e.message.includes("parsing issue")||e.message.includes("unsafe")||e.message.includes("Could not generate a valid structured response")||s(`Error generating response: ${e.message}`,"error"),e}}insertResponseInInputField(e){try{const t=document.querySelector(CONFIG.selectors.activeChat.messageInput);if(!t)return logger.error("Message input field not found"),!1;const n="auto"===window.CONFIG?.operationMode;return logger.debug("Operation mode when inserting response: "+(n?"AUTO":"MANUAL")),setTimeout((()=>{window.openaiManager&&"function"==typeof window.openaiManager.clearInputField&&(window.openaiManager.clearInputField(),logger.debug("First cleaning phase completed with openaiManager")),this.forceCleanInputField(t),logger.debug("Second direct cleaning phase completed");const a="true"===t.getAttribute("contenteditable")?(t.textContent||"").trim():(t.value||"").trim();if(a&&(logger.warn(`Field is NOT empty after two cleaning attempts. Current content: "${a.substring(0,20)}..."`),this.emergencyCleanField(t),n))return logger.debug("AUTO mode detected, applying additional pause to ensure complete cleaning"),setTimeout((()=>{this.insertTextAndPotentiallySend(t,e,n)}),500),!0;setTimeout((()=>{this.insertTextAndPotentiallySend(t,e,n)}),100)}),n?300:0),!0}catch(e){return logger.error(`Error inserting response in input field: ${e.message}`),!1}}insertTextAndPotentiallySend(e,t,n){try{if(logger.debug("Inserting text in input field"),domUtils.insertTextIntoField(e,t),CONFIG.autoSendMessages&&n){logger.debug("Automatic sending activated in AUTO mode, sending message...");const n=CONFIG.sendMessageDelay||2e3;logger.debug(`Waiting ${n}ms before sending so that Facebook processes the text...`),setTimeout((()=>{const n="true"===e.getAttribute("contenteditable")?e.textContent||"":e.value||"";n.trim()===t.trim()?(logger.debug("Text verified, sending message..."),this.sendMessage(!0)):logger.warn(`The final text (${n.length} chars) does not match the expected one (${t.length} chars), aborting automatic sending`)}),n)}else CONFIG.autoSendMessages?n||logger.debug(`MANUAL mode detected (operationMode: ${window.CONFIG?.operationMode})`):logger.debug("Automatic sending deactivated (autoSendMessages: false)")}catch(e){logger.error(`Error in insertTextAndPotentiallySend: ${e.message}`)}}sendMessage(e=!1){try{logger.debug(`Initiating message sending attempt (${e?"after inserting text":"direct"})`);const t=[...CONFIG.selectors.activeChat.sendButton,'div[aria-label="Press enter to send"]','div[aria-label="Pulsa Intro para enviar"]','div[role="button"][tabindex="0"][style*="transform: translateY(0px)"]','div.xjbqb8w:not([style*="opacity: 0"])','div.x1i10hfl[role="button"]:not(.x1hc1fzr)'];logger.debug(`Searching for send button with ${t.length} selectors...`);const n=domUtils.findElement(t);if(n){const e=n.getBoundingClientRect(),t=window.getComputedStyle(n);e.width>0&&e.height>0&&"hidden"!==t.visibility&&"none"!==t.display&&"0"!==t.opacity?(logger.debug(`Send button found and visible (${e.width}x${e.height}), clicking...`),setTimeout((()=>{try{return n.click(),logger.log("Message sent by clicking on the button"),this.markChatAsRead(),!0}catch(e){logger.warn(`Error when doing normal click: ${e.message}, trying simulated event...`);try{return n.dispatchEvent(new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window})),logger.log("Message sent using simulated click event"),this.markChatAsRead(),!0}catch(e){logger.error(`Error simulating click event: ${e.message}`)}}}),100)):logger.warn("Send button found but NOT visible/enabled. Using alternative method.")}else logger.debug("Send button not found, trying with Enter key...");const a=document.querySelector(CONFIG.selectors.activeChat.messageInput);if(a){if(logger.debug("Simulating Enter key in the input field..."),domUtils.simulateKeyPress(a,"Enter",13))return logger.log("Message sent simulating Enter key with domUtils.simulateKeyPress"),this.markChatAsRead(),!0;a.focus();const t=new KeyboardEvent("keydown",{key:"Enter",code:"Enter",keyCode:13,which:13,bubbles:!0,cancelable:!0});if(a.dispatchEvent(t))return logger.log("Message sent simulating Enter key with KeyboardEvent"),this.markChatAsRead(),!0;logger.warn("The event was not sent correctly");try{if(document.execCommand("insertText",!1,"\n"))return logger.log("Message sent using execCommand insertText"),this.markChatAsRead(),!0}catch(e){logger.error(`Error using execCommand: ${e.message}`)}if(!e)return logger.debug("First attempt failed, scheduling retry after 1 second..."),setTimeout((()=>this.sendMessage(!0)),1e3),!0}return logger.error("Could not send the message after all attempts"),!1}catch(e){return logger.error(`Error sending message: ${e.message}`,{},e),!1}}forceCleanInputField(e){try{if(!e)return;if("true"===e.getAttribute("contenteditable")){e.innerHTML="",e.textContent="";try{const t=window.getSelection(),n=document.createRange();n.selectNodeContents(e),t.removeAllRanges(),t.addRange(n),document.execCommand("delete",!1,null)}catch(e){logger.debug(`Error using selection to clean: ${e.message}`)}}else e.value="";["input","change","keyup"].forEach((t=>{const n=new Event(t,{bubbles:!0});e.dispatchEvent(n)}))}catch(e){logger.debug(`Error in forced cleaning: ${e.message}`)}}emergencyCleanField(e){try{if(e.parentNode){const t=e.cloneNode(!1);e.parentNode.replaceChild(t,e);[new KeyboardEvent("keydown",{key:"Control",keyCode:17,bubbles:!0}),new KeyboardEvent("keydown",{key:"a",keyCode:65,bubbles:!0}),new KeyboardEvent("keyup",{key:"a",keyCode:65,bubbles:!0}),new KeyboardEvent("keyup",{key:"Control",keyCode:17,bubbles:!0}),new KeyboardEvent("keydown",{key:"Delete",keyCode:46,bubbles:!0}),new KeyboardEvent("keyup",{key:"Delete",keyCode:46,bubbles:!0})].forEach((e=>t.dispatchEvent(e))),logger.debug("Emergency cleaning applied (node replacement)")}else logger.warn("Could not apply emergency cleaning: the field has no parent node")}catch(e){logger.debug(`Error in emergency cleaning: ${e.message}`)}}sendMessage(){try{const e=domUtils.findElement(CONFIG.selectors.activeChat.sendButton);if(e)return logger.debug("Send button found, clicking..."),e.click(),logger.log("Message sent by clicking on the button"),!0;const t=document.querySelector(CONFIG.selectors.activeChat.messageInput);if(t){if(logger.debug("Simulating Enter key in the input field..."),domUtils.simulateKeyPress(t,"Enter",13))return logger.log("Message sent simulating Enter key with simulateKeyPress"),!0;t.focus();const e=new KeyboardEvent("keydown",{key:"Enter",code:"Enter",keyCode:13,which:13,bubbles:!0,cancelable:!0});if(t.dispatchEvent(e))return logger.log("Message sent simulating Enter key"),!0;logger.warn("The keydown event was not processed by the input field");try{return document.execCommand("insertText",!1,"\n"),logger.log("Message sent using execCommand"),!0}catch(e){logger.debug(`execCommand failed: ${e.message}`)}}return logger.error("Could not send the message - send button or input field not found"),!1}catch(e){return logger.error(`Error sending message: ${e.message}`,{},e),!1}}async processChatAndAutoRespond(e){try{logger.log(`Extracting data from chat ${e}`);if(!("auto"===window.CONFIG?.operationMode))return logger.debug(`Auto-response deactivated for chat ${e}. The current mode is: ${window.CONFIG?.operationMode}`),!1;logger.log(`Automatic mode activated (operationMode: ${window.CONFIG?.operationMode}), processing automatic response...`);const t=await this.extractChatData(e);if(!t.success)return logger.error(`Error extracting chat data for automatic response: ${t.error||"Unknown error"}`),!1;if(logger.debug(`AUTO mode activated (${window.CONFIG?.operationMode}), processing automatic response`),!window.responseManager)return logger.error("responseManager not found to process automatic response"),!1;if(!window.openaiManager)return logger.error("openaiManager not found to process automatic response"),!1;if(!("function"==typeof window.openaiManager.isReady?window.openaiManager.isReady():window.openaiManager.apiKey&&window.openaiManager.isInitialized))return logger.error("OpenAI Manager is not ready to process automatic response"),!1;const n=await window.responseManager.processAutoResponse(e,t.chatData);return logger.log("Result of processAutoResponse: "+(n?"success":"failed")),n}catch(e){return logger.error(`Error processing chat for automatic response: ${e.message}`,{},e),s(`Error processing automatic response: ${e.message}`,"error"),!1}}async markChatAsRead(e=null){const t=e||this.currentChatId;if(!t)return logger.error("No chat ID to mark as read"),!1;logger.log(`Attempting to mark chat as read: ${t}`);try{const e=['div[aria-label="Marcar como leído"]','div[aria-label="Mark as read"]','div[aria-label*="read"][role="button"]','div.xuk3077[role="row"] div[aria-label*="unread"]','div.x78zum5[role="row"] div.xzg4506:not(:empty)','div[role="grid"] div[role="row"] div.xzg4506:not(:empty)'];let n=null;if(document.querySelector(`[data-thread-id="${t}"]`)||document.querySelector(`[href*="${t}"]`))for(const t of e)if(n=document.querySelector(t),n){logger.debug(`Found unread message indicator with selector: ${t}`);break}if(n&&(logger.debug('Simulating click on "mark as read" indicator'),this.simulateCompatibleMouseEvents(n),await new Promise((e=>setTimeout(e,1e3))),!document.querySelector(e.join(", "))))return logger.log("Chat marked as read successfully (indicator disappeared)"),!0;try{const e=document.querySelectorAll(`[data-thread-id="${t}"], [href*="${t}"]`);for(const t of e){const e=Object.keys(t).find((e=>e.startsWith("__reactFiber$")));if(e){const n=t[e];if(n){const e=n.return?.stateNode;if(e&&"function"==typeof e.markRead)return logger.debug("Found Facebook internal markRead function, attempting to use"),e.markRead(),logger.log("Chat marked as read using Facebook internal API"),!0}}}}catch(e){logger.debug(`Error attempting to use internal API: ${e.message}`)}if(this.currentChatId===t){const e=domUtils.findElement(CONFIG.selectors.activeChat.container);if(e)return e.scrollTop=e.scrollHeight,await new Promise((e=>setTimeout(e,1500))),logger.debug("Chat marked as read by scrolling to most recent messages"),!0}return logger.warn(`Could not explicitly mark chat ${t} as read, but sending response may have done it automatically`),!0}catch(e){return logger.error(`Error marking chat as read: ${e.message}`),!1}}};window.chatManager=chatManager;const y={};let b;function w(e){try{if(!e)return null;const t=[/marketplace\/item\/(\d+)/i,/marketplace\/item\.php\?id=(\d+)/i,/item\/(\d+)/i];for(const n of t){const t=e.match(n);if(t&&t[1])return t[1]}return null}catch(e){return console.error("[ProductExtractorPOC] Error extracting product ID from URL",e),null}}function v(e){return e&&"object"==typeof e?Object.entries(e).reduce(((e,[t,n])=>{if(null==n)return e;if("string"==typeof n){const a=n.trim();if(!a)return e;e[t]=a}else Array.isArray(n)&&n.length>0?e[t]=n:"number"!=typeof n||isNaN(n)?"boolean"==typeof n&&(e[t]=n):e[t]=n;return e}),{}):{}}function I(e,t){return new Promise(((n,a)=>{if("function"!=typeof GM_xmlhttpRequest)return console.error("[ProductExtractorPOC] GM_xmlhttpRequest not available."),a(new Error("GM_xmlhttpRequest not available"));GM_xmlhttpRequest({method:"GET",url:t,headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"},timeout:15e3,onload:function(s){if(s.status>=200&&s.status<300){try{const e=new Blob([s.responseText],{type:"text/html"});URL.createObjectURL(e)}catch(e){}const a=function(e,t,n){console.log("[ProductExtractorPOC] Initiating extraction from inline JSON...");const a=e.querySelectorAll("script");let s=null,i=null;for(const e of a){const t=e.textContent;if(!t)continue;const n='"adp_MarketplacePDPContainerQueryRelayPreloader_',a='"adp_MarketplacePDPC2CMediaViewerWithImagesQueryRelayPreloader_';let r=-1,o=!1;if(s||(r=t.indexOf(n),-1!==r&&(o=!0)),-1!==r||i||(r=t.indexOf(a),-1!==r&&(o=!1)),-1!==r)try{const e=t.indexOf('"',r+1);if(-1===e)continue;const n=t.indexOf(",",e);if(-1===n)continue;const a=t.indexOf("{",n);if(-1===a)continue;let l=1,c=a+1;for(;c<t.length&&l>0;){const e=t[c];if("{"===e)l++;else if("}"===e)l--;else if('"'===e)for(c++;c<t.length;){if("\\"===t[c])c++;else if('"'===t[c])break;c++}c++}if(0===l){const e=c-1,n=t.substring(a,e+1);try{const e=JSON.parse(n);if(o?e?.__bbox?.result?.data?.viewer?.marketplace_product_details_page?.target&&(s=e):e?.__bbox?.result?.data?.viewer?.marketplace_product_details_page?.target?.listing_photos&&(i=e),s&&i)break}catch(e){}}}catch(e){}}if(!s)return console.error("[ProductExtractorPOC] Main JSON data with expected structure not found."),null;try{const e=s.__bbox.result.data.viewer.marketplace_product_details_page,a=e.target,r=e.marketplace_listing_renderable_target,o=a.marketplace_listing_seller,l=a.location?.reverse_geocode_detailed;let c=[],d=null;if(i?.__bbox?.result?.data?.node?.all_listing_photos?.edges)c=i.__bbox.result.data.node.all_listing_photos.edges.map((e=>e?.node?.image?.uri)).filter(Boolean);else if(i?.__bbox?.result?.data?.viewer?.marketplace_product_details_page?.target?.listing_photos){const e=i.__bbox.result.data.viewer.marketplace_product_details_page.target.listing_photos;e&&Array.isArray(e)&&(c=e.map((e=>e?.image?.uri)).filter(Boolean))}else a?.listing_photos&&Array.isArray(a.listing_photos)&&(c=a.listing_photos.map((e=>e?.image?.uri)).filter(Boolean));const u=a?.primary_listing_photo?.listing_image?.uri||r?.primary_listing_photo?.image?.uri;if(u?(c.includes(u)||c.unshift(u),d=c[0]):c.length>0&&(d=c[0]),c.length>=2)try{const e=new URL(c[0]),t=new URL(c[1]);e.pathname===t.pathname&&e.searchParams.get("stp")!==t.searchParams.get("stp")&&(c.shift(),c.length>0&&(d=c[0]))}catch(e){}return!d&&c.length>0&&(d=c[0]),v({source:"inline_json_poc",productId:n,title:a?.marketplace_listing_title||r?.marketplace_listing_title||"",description:a?.redacted_description?.text||r?.description?.text||"",price:a?.formatted_price?.text||r?.formatted_price?.text||"",currency:a?.listing_price?.currency||r?.currency||"",amount:a?.listing_price?.amount?.toString()||r?.price?.amount_with_offset?.toString()||"",url:a?.story?.url||r?.story?.url||t,listingId:a?.id||r?.id||n,creationTime:a?.creation_time||null,locationText:a?.location_text?.text||"",storyText:a?.story?.translated_message_for_viewer?.text||"",mileage:a?.mileage||null,transmission:a?.transmission||"",exteriorColor:a?.exterior_color||"",interiorColor:a?.interior_color||"",nhtsaSafetyRating:a?.nhtsa_safety_rating||null,fuelType:a?.fuel_type||"",cityMpg:a?.city_mpg||null,highwayMpg:a?.highway_mpg||null,combinedMpg:a?.combined_mpg||null,owners:a?.owners||null,isPaidOff:a?.is_paid_off||!1,cleanTitle:a?.clean_title||!1,hasDamage:a?.has_damage||!1,image:d||"",allImages:c,sellerName:o?.name||"",sellerId:o?.id||"",sellerProfilePic:o?.profile_picture?.uri||"",sellerJoinTimestamp:o?.join_time||null,categoryName:a?.marketplace_listing_category_name||r?.category_name||"",categorySlug:a?.marketplace_listing_category?.slug||r?.marketplace_listing_category?.slug||"",isSold:a?.is_sold||r?.is_sold||!1,isLive:a?.is_live||r?.is_live||!1,deliveryTypes:a?.delivery_types||r?.delivery_types||[],city:l?.city_name||l?.city||r?.location?.reverse_geocode_detailed?.city_name||"",state:l?.region_name||l?.state||r?.location?.reverse_geocode_detailed?.region_name||"",postalCode:l?.postal_code||r?.location?.reverse_geocode_detailed?.postal_code||"",latitude:a?.location?.latitude||r?.location?.latitude||null,longitude:a?.location?.longitude||r?.location?.longitude||null,pageTypename:e?.__typename||"",productDetailsType:e?.product_details_type||"",pageId:e?.id||"",listingRenderableTargetTypename:r?.__typename||"",listingRenderableTargetSweepstake:r?.sweepstake_enabled||!1,listingRenderableTargetId:r?.id||"",seoVirtualCategory:r?.seo_virtual_category||"",personalizationInfo:r?.personalization_info||"",isShippingOffered:r?.is_shipping_offered||a?.is_shipping_offered||!1,inventoryType:a?.listing_inventory_type||r?.listing_inventory_type||"",boostedMarketplaceListing:a?.product_item?.boosted_marketplace_listing||r?.product_item?.boosted_marketplace_listing||null,promotedListing:a?.product_item?.promoted_listing||r?.product_item?.promoted_listing||null,originGroup:a?.origin_group||r?.origin_group||null,loggingId:a?.logging_id||r?.logging_id||"",messagingEnabled:a?.messaging_enabled||r?.messaging_enabled||!1,canShare:a?.can_share||r?.can_share||!1,shareUri:a?.share_uri||r?.share_uri||"",rebuyOrderReceipt:a?.rebuy_order_receipt||r?.rebuy_order_receipt||null,activeOrder:a?.active_order||r?.active_order||null,orderSummaries:a?.order_summaries||r?.order_summaries||[],storyActors:(a?.story?.actors||r?.story?.actors)?.map((e=>({id:e.id,name:e.name})))||[],sellerUserProfileId:o?.marketplace_user_profile?.id||"",crossPostSyncMetadata:a?.cross_post_sync_metadata||r?.cross_post_sync_metadata||null,customTitle:a?.custom_title_text?.text||a?.custom_title||r?.custom_title_text?.text||"",hasChildren:a?.has_children||r?.has_children||!1,hiddenFromFriends:a?.hidden_from_friends||r?.hidden_from_friends||"VISIBLE_TO_EVERYONE",canSellerChangeAvailability:a?.can_seller_change_availability||r?.can_seller_change_availability||!1,isOnMarketplace:a?.is_on_marketplace||r?.is_on_marketplace||!1,listingIsRejected:a?.listing_is_rejected||r?.listing_is_rejected||!1,listingPriceWithOffset:a?.listing_price?.amount_with_offset?.toString()||r?.price?.amount_with_offset?.toString()||"",crossPostIds:(a?.cross_post_info?.all_listings||r?.cross_post_info?.all_listings)?.map((e=>e.id))||[],productItemId:a?.product_item?.id||r?.product_item?.id||"",defaultVariantListingId:a?.default_variant_listing?.id||r?.default_variant_listing?.id||"",primaryMpEntId:a?.primary_mp_ent?.id||r?.primary_mp_ent?.id||"",energyEfficiencyClassEu:a?.energy_efficiency_class_eu||r?.energy_efficiency_class_eu||"",shippingEligible:a?.c2c_shipping_eligible||r?.c2c_shipping_eligible||!1,shouldHidePdpShippingContent:a?.should_hide_pdp_shipping_content||r?.should_hide_pdp_shipping_content||!1,shippingProfile:a?.shipping_profile||r?.shipping_profile||null,inventoryCount:a?.inventory_count||r?.inventory_count||null,paymentTimePeriod:a?.payment_time_period||null,isPending:a?.is_pending||r?.is_pending||!1,isDraft:a?.is_draft||r?.is_draft||!1,isCheckoutEnabled:a?.is_checkout_enabled||r?.is_checkout_enabled||!1,canSellerEdit:a?.can_seller_edit||r?.can_seller_edit||!1,realEstateListingAgentId:a?.real_estate_listing_agent?.id||r?.real_estate_listing_agent?.id||"",listedById:a?.listed_by?.id||r?.listed_by?.id||"",marketplaceLeadGenForm:a?.marketplace_lead_gen_form||r?.marketplace_lead_gen_form||null,sellerUserId:o?.user_id||"",c2cOrdersShipped:o?.marketplace_user_profile?.c2c_orders_shipped||null,sellerVerifiedBadge:o?.marketplace_should_display_verified_badge||!1,sellerRatingsFiveStarAverage:o?.marketplace_ratings_stats_by_role?.seller_stats?.five_star_ratings_average||null,sellerRatingsTotalCount:o?.marketplace_ratings_stats_by_role?.seller_stats?.five_star_total_rating_count_by_role||null,sellerRatingsArePrivate:o?.marketplace_ratings_stats_by_role?.seller_ratings_are_private||!1,viewerInDMA:e?.viewer?.marketplace_actor_with_integrity_status?.marketplace_user_in_dma||!1,viewerLoanPaymentOptions:e?.viewer?.marketplace_settings?.loan_payment_options||null,additionalFeesDescription:a?.additional_fees_description?.text||r?.additional_fees_description?.text||"",unitAreaInfo:a?.unit_area_info||null,unitRoomInfo:a?.unit_room_info||null,walkScoreInfo:a?.walk_score_info||null,transitScoreInfo:a?.transit_score_info||null,bikeScoreInfo:a?.bike_score_info||null,nearbySchools:a?.nearby_schools||[],nearbyTransits:a?.nearby_transits||[]})}catch(e){return console.error("[ProductExtractorPOC] Error processing combined JSON data:",e,e.stack),null}}((new DOMParser).parseFromString(s.responseText,"text/html"),t,e);n(a||v({source:"inline_json_poc_failed",productId:e,id:e,title:"Extraction Failed (POC)",url:t,extractedFrom:"extraction-failure-poc"}))}else console.error(`[ProductExtractorPOC] GM_xmlhttpRequest HTTP Error: ${s.status} for ${t}`),a(new Error(`HTTP Error: ${s.status}`))},onerror:function(t){console.error("[ProductExtractorPOC] GM_xmlhttpRequest network error for product "+e,t),a(t)},ontimeout:function(){console.error("[ProductExtractorPOC] GM_xmlhttpRequest timeout for product "+e),a(new Error("Request timeout"))}})}))}function initialize(e){e&&e.storageUtils?(b=e.storageUtils,function(){if(b)try{const e=b.get("PRODUCT_CACHE",{});Object.assign(y,e),console.log(`[ProductExtractorPOC] Loaded ${Object.keys(y).length} cached products from storage`)}catch(e){console.error("[ProductExtractorPOC] Error loading product cache",e)}else console.warn("[ProductExtractorPOC] storageUtilsInstance not initialized. Cache loading skipped.")}(),console.log("[ProductExtractorPOC] Initialized with storageUtils.")):console.warn("[ProductExtractorPOC] Initialization failed: storageUtils not provided.")}setInterval((()=>{if(b)try{b.set("PRODUCT_CACHE",y)}catch(e){console.error("[ProductExtractorPOC] Error saving product cache",e)}}),6e4),window.productExtractor={initialize:initialize,getProductDetails:async function(e,t=null){if(!e)throw console.error("[ProductExtractorPOC] Product ID is required for getProductDetails."),new Error("Product ID is required");if(t||(t=`https://www.facebook.com/marketplace/item/${e}/`),y[e])return y[e];try{const n=await I(e,t);return n.id=e,y[e]=n,n}catch(n){console.error(`[ProductExtractorPOC] Error in getProductDetails for ${e}:`,n);const a=v({source:"error_in_getProductDetails_poc",productId:e,id:e,title:"Get Details Failed (POC)",url:t,extractedFrom:"error-poc-fetch"});return y[e]=a,a}},extractProductIdFromUrl:w,extractProductIdFromCurrentChat:function(){try{const e=document.querySelectorAll('a[href*="/marketplace/item/"]');if(e.length>0)return w(e[0].href);const t=document.querySelectorAll('div[role="row"] div[dir="auto"] a');for(const e of t)if(e.href&&e.href.includes("/marketplace/item/")){const t=w(e.href);if(t)return t}return null}catch(e){return console.error("[ProductExtractorPOC] Error extracting product ID from current chat:",e),null}},inspectProduct:function(e){if(!e){const t=document.querySelector('a[href*="/marketplace/item/"]');t&&(e=w(t.href))}return e&&y[e]?(console.log("--- MANUAL PRODUCT INSPECTION (POC Style Cache) ---"),console.log(JSON.stringify(y[e],null,2)),console.log("--- END INSPECTION ---"),y[e]):(console.error("[ProductExtractorPOC] No product with ID "+e+" in cache to inspect, or productId is missing."),null)},filterRelevantFields:v,getRelevantProductSummary:function(e){if(!e||"object"!=typeof e)return"";const t=v(e);if(0===Object.keys(t).length)return"";if(t.categorySlug&&t.categorySlug.includes("property")||t.categoryName&&t.categoryName.toLowerCase().includes("rental")){const e=[];return t.title&&e.push(`Title: ${t.title}`),t.price&&e.push(`Price: ${t.price}`),t.categoryName?e.push(`Category: ${t.categoryName}`):"REAL_ESTATE"===t.productDetailsType&&e.push("Category: Rentals"),t.creationTime&&e.push(`Published: ${new Date(1e3*t.creationTime).toLocaleDateString()}`),t.locationText&&e.push(`Location: ${t.locationText}`),(t.city||t.state)&&e.push(`Location: ${t.city||""}${t.city&&t.state?", ":""}${t.state||""}`),t.unitRoomInfo&&e.push(`Unit Details: ${t.unitRoomInfo}`),t.unitAreaInfo&&e.push(`Area Info: ${t.unitAreaInfo}`),t.paymentTimePeriod&&e.push(`Payment Period: ${t.paymentTimePeriod}`),t.description&&e.push(`Description: ${t.description}`),t.storyText&&e.push(`Details: ${t.storyText}`),t.translatedDescription&&e.push(`Translated Description: ${t.translatedDescription}`),t.walkScoreInfo&&e.push(`Walk Score: ${t.walkScoreInfo?.score||""} (${t.walkScoreInfo?.description||""})`),t.transitScoreInfo&&e.push(`Transit Score: ${t.transitScoreInfo?.score||""} (${t.transitScoreInfo?.description||""})`),t.bikeScoreInfo&&e.push(`Bike Score: ${t.bikeScoreInfo?.score||""} (${t.bikeScoreInfo?.description||""})`),Array.isArray(t.nearbySchools)&&t.nearbySchools.length>0&&(e.push("Nearby Schools:"),t.nearbySchools.forEach((t=>{t.name&&e.push(`  - ${t.name}${t.rating?` (${t.rating}/10)`:""}${t.distance?`, ${t.distance}`:""}`)}))),t.sellerName&&e.push(`Seller: ${t.sellerName}`),null!=t.sellerFiveStarAvg&&e.push(`Average Rating: ${t.sellerFiveStarAvg}`),null!=t.sellerFiveStarCount&&e.push(`Total 5-Star Ratings: ${t.sellerFiveStarCount}`),t.sellerVerifiedBadge&&e.push("Verified Seller: Yes"),t.sellerJoinTimestamp&&e.push(`On Facebook Since: ${new Date(1e3*t.sellerJoinTimestamp).getFullYear()}`),t.url&&e.push(`URL: ${t.url}`),e.join("\n")}if(t.categorySlug&&t.categorySlug.includes("vehicles")||t.categoryName&&t.categoryName.toLowerCase().includes("vehicle")||t.pageTypename&&t.pageTypename.toLowerCase().includes("vehicle")){const e=[];if(t.title&&e.push(`Title: ${t.title}`),t.price&&e.push(`Price: ${t.price}`),t.condition&&e.push(`Condition: ${t.condition}`),t.creationTime&&e.push(`Published: ${new Date(1e3*t.creationTime).toLocaleDateString()}`),t.locationText&&e.push(`Area: ${t.locationText}`),(t.city||t.state)&&e.push(`Location: ${t.city||""}${t.city&&t.state?", ":""}${t.state||""}`),t.description&&e.push(`Description: ${t.description}`),t.translatedDescription&&e.push(`Translated Description: ${t.translatedDescription}`),t.mileage&&e.push(`Mileage: ${t.mileage}`),t.transmission&&e.push(`Transmission: ${t.transmission}`),t.exteriorColor&&e.push(`Exterior Color: ${t.exteriorColor}`),t.interiorColor&&e.push(`Interior Color: ${t.interiorColor}`),t.fuelType&&e.push(`Fuel Type: ${t.fuelType}`),t.cityMpg||t.highwayMpg||t.combinedMpg){let n=[];t.cityMpg&&n.push(`City: ${t.cityMpg}`),t.highwayMpg&&n.push(`Highway: ${t.highwayMpg}`),t.combinedMpg&&n.push(`Combined: ${t.combinedMpg}`),e.push(`MPG: ${n.join(" · ")}`)}return t.owners&&e.push(`Owners: ${t.owners}`),t.nhtsaSafetyRating&&e.push(`NHTSA Safety Rating: ${t.nhtsaSafetyRating}`),void 0!==t.isPaidOff&&e.push("Paid Off: "+(t.isPaidOff?"Yes":"No")),void 0!==t.cleanTitle&&e.push("Clean Title: "+(t.cleanTitle?"Yes":"No")),void 0!==t.hasDamage&&e.push("Significant Damage: "+(t.hasDamage?"Yes":"No")),t.sellerName&&e.push(`Seller: ${t.sellerName}`),null!=t.sellerFiveStarAvg&&e.push(`Average Rating: ${t.sellerFiveStarAvg}`),null!=t.sellerFiveStarCount&&e.push(`Total 5-Star Ratings: ${t.sellerFiveStarCount}`),t.sellerVerifiedBadge&&e.push("Verified Seller: Yes"),t.sellerJoinTimestamp&&e.push(`On Facebook Since: ${new Date(1e3*t.sellerJoinTimestamp).getFullYear()}`),t.url&&e.push(`URL: ${t.url}`),e.join("\n")}const n=[];t.title&&n.push(`Title: ${t.title}`),t.price&&n.push(`Price: ${t.price}`),t.categoryName&&n.push(`Category: ${t.categoryName}`);let a="";return t.locationText?a=t.locationText:t.city&&t.state?a=`${t.city}, ${t.state}`:t.city?a=t.city:t.state&&(a=t.state),a&&n.push(`Location: ${a}`),t.description&&n.push(`Description: ${t.description}`),t.translatedDescription&&n.push(`Translated Description: ${t.translatedDescription}`),t.sellerName&&n.push(`Seller: ${t.sellerName}`),null!=t.sellerFiveStarAvg&&n.push(`Average Rating: ${t.sellerFiveStarAvg}`),null!=t.sellerFiveStarCount&&n.push(`Total 5-Star Ratings: ${t.sellerFiveStarCount}`),t.sellerVerifiedBadge&&n.push("Verified Seller: Yes"),t.sellerJoinTimestamp&&n.push(`On Facebook Since: ${new Date(1e3*t.sellerJoinTimestamp).getFullYear()}`),t.url&&n.push(`URL: ${t.url}`),n.join("\n")}},console.log("[ProductExtractorPOC] Module loaded. Call productExtractor.initialize({storageUtils: yourStorageUtils}) from main script.");window.OpenAIApiClient=class{constructor(e=null){this.apiKey=e,this.baseUrl="https://api.openai.com/v1",this.betaHeader="assistants=v2"}setApiKey(e){this.apiKey=e}_createHeaders(e=!1){if(!this.apiKey)throw new Error("API key not configured");const t={Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"};return e&&(t["OpenAI-Beta"]=this.betaHeader),t}async _fetchWithErrorHandling(e,t){const n=`${this.baseUrl}${e}`;try{const a=await fetch(n,t);if(!a.ok){let t;try{const e=await a.json();t=e.error?.message||a.statusText}catch(e){t=a.statusText}throw new Error(`Error in request to ${e}: ${t} (${a.status})`)}return await a.json()}catch(t){throw t.message.includes("Error in request")||(t.message=`Error communicating with ${e}: ${t.message}`),t}}async validateApiKey(){if(!this.apiKey)return!1;try{const e=await fetch(`${this.baseUrl}/models`,{method:"GET",headers:this._createHeaders(!1)});if(e.ok)return logger.log("API key validated successfully"),!0;{const t=await e.json();return logger.error(`API key validation failed: ${t.error?.message||"Unknown error"}`),!1}}catch(e){return logger.error(`Error validating API key: ${e.message}`),!1}}async createThread(){return this._fetchWithErrorHandling("/threads",{method:"POST",headers:this._createHeaders(!0),body:JSON.stringify({})})}async addMessage(e,t){return this._fetchWithErrorHandling(`/threads/${e}/messages`,{method:"POST",headers:this._createHeaders(!0),body:JSON.stringify(t)})}async listMessages(e,t={}){const n=new URLSearchParams(t).toString(),a=`/threads/${e}/messages${n?`?${n}`:""}`;return this._fetchWithErrorHandling(a,{method:"GET",headers:this._createHeaders(!0)})}async createOrUpdateAssistant(e,t){return e?this._fetchWithErrorHandling(`/assistants/${e}`,{method:"PATCH",headers:this._createHeaders(!0),body:JSON.stringify(t)}):this._fetchWithErrorHandling("/assistants",{method:"POST",headers:this._createHeaders(!0),body:JSON.stringify(t)})}async getAssistant(e){return this._fetchWithErrorHandling(`/assistants/${e}`,{method:"GET",headers:this._createHeaders(!0)})}async listAssistants(e={}){const t=new URLSearchParams(e).toString(),n="/assistants"+(t?`?${t}`:"");return this._fetchWithErrorHandling(n,{method:"GET",headers:this._createHeaders(!0)})}async createRun(e,t){return this._fetchWithErrorHandling(`/threads/${e}/runs`,{method:"POST",headers:this._createHeaders(!0),body:JSON.stringify(t)})}async getRun(e,t){return this._fetchWithErrorHandling(`/threads/${e}/runs/${t}`,{method:"GET",headers:this._createHeaders(!0)})}async isImageAccessible(e){if(window.ImageFilterUtils)return await window.ImageFilterUtils.isImageAccessible(e);try{const t=e.includes("fbcdn.net")||e.includes("facebook.com")||e.includes("fbsbx.com")?3e3:5e3,n=new AbortController,a=setTimeout((()=>n.abort()),t),s=await fetch(e,{method:"HEAD",signal:n.signal,mode:"no-cors"});return clearTimeout(a),"opaque"===s.type||s.ok}catch(t){return logger.debug(`Image not accessible at ${e}: ${t.message}`),!1}}async uploadFile(e,t="image.jpg"){if(!this.apiKey)throw new Error("API key not configured");let n;if("string"==typeof e)try{if(window.ImageFilterUtils&&window.ImageFilterUtils.isProblematicFacebookImage(e))throw new Error(`Image rejected by the centralized filter: ${e}`);if(e.includes("fbcdn.net")||e.includes("facebook.com")){if(!await this.isImageAccessible(e))throw new Error(`Facebook image URL not accessible or filtered: ${e}`)}const t=new AbortController,a=setTimeout((()=>t.abort()),5e3),s=await fetch(e,{signal:t.signal,credentials:"omit"});if(clearTimeout(a),!s.ok)throw new Error(`Download error: ${s.status} ${s.statusText}`);n=await s.blob()}catch(t){throw e.includes("fbcdn.net")||e.includes("facebook.com")?new Error(`Could not access Facebook image: ${t.message}`):new Error(`Error downloading image: ${t.message}`)}else{if(!(e instanceof Blob))throw new Error("Invalid input format for uploadFile");n=e}const a=new FormData;a.append("file",n,t),a.append("purpose","assistants");try{const e=await fetch(`${this.baseUrl}/files`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`},body:a});if(!e.ok){const t=await e.text();throw new Error(`Error uploading file: ${t}`)}return await e.json()}catch(e){throw logger.error(`Error uploading file: ${e.message}`),e}}};class A{static async prepareMessageContent(e){if(!e||!e.messages||!Array.isArray(e.messages))return logger.error("Invalid context for message preparation"),[];try{e.productDetails&&window.ImageFilterUtils&&(e.productDetails=window.ImageFilterUtils.preprocessProductDetails(e.productDetails)),e.messages=e.messages.map((e=>{if(e.content)if("string"==typeof e.content){const t=e.content;e.content={text:t,media:{images:[]}}}else e.content.media?e.content.media.images||(e.content.media.images=[]):e.content.media={images:[]};else e.content={text:"",media:{images:[]}};return e}));const t=this.organizeMessagesByRole(e.messages);let n=[];if(e.productDetails){const t=[],a=window.productExtractor.getRelevantProductSummary(e.productDetails);if(t.push({type:"text",text:"PRODUCT DETAILS:\n"+a}),Array.isArray(e.productDetails.allImages)&&e.productDetails.allImages.length>0){let n=e.productDetails.allImages;window.ImageFilterUtils&&(n=window.ImageFilterUtils.filterImageUrls(n));const a=[];for(const e of n.slice(0,6))e&&"string"==typeof e&&""!==e.trim()&&(window.ImageFilterUtils&&window.ImageFilterUtils.isProblematicFacebookImage(e)||a.push({type:"image_url",image_url:{url:e}}));a.length>0&&t.push(...a)}n.push({role:"user",content:t})}const a=this.filterTrivialMessages(t);for(const e of a){const t=this.prepareMessageContentItems(e);if(0!==t.length){if(!t.some((e=>"text"===e.type))){const e=[...new Set(t.map((e=>e.type)))];t.unshift({type:"text",text:1===e.length?`[Content of type ${e[0]}]`:`[Multimedia content: ${e.join(", ")}]`})}if(t.length>10){logger.debug(`Message content exceeds 10 items (${t.length}), splitting into chunks`);for(let a=0;a<t.length;a+=10){const s=t.slice(a,Math.min(a+10,t.length)),i=0===a;if(s.some((e=>"text"===e.type))&&i||"text"===s[0].type||(s.unshift({type:"text",text:"assistant"===e.role?i?"Response:":"[Continuation of response]":i?"Message:":"[Continuation of message]"}),s.length>10&&s.pop()),!i&&s.some((e=>"text"===e.type))){const e=s.findIndex((e=>"text"===e.type));if(e>=0){const t="[Continuation] ";s[e]={...s[e],text:t+s[e].text}}}if(!(a+10>=t.length)){const e=[...s].reverse().findIndex((e=>"text"===e.type));if(e>=0){const t=s.length-1-e,n=" [Continues...]";s[t]={...s[t],text:s[t].text+n}}}n.push({role:e.role||"user",content:s})}}else n.push({role:e.role||"user",content:t})}}n.forEach(((e,t)=>{e.content&&Array.isArray(e.content)&&e.content.length>0?e.content.forEach(((e,n)=>{"text"!==e.type||e.text&&"string"==typeof e.text||logger.warn(`Message #${t}, content item #${n} has invalid text.`),"image_url"!==e.type||e.image_url&&e.image_url.url||logger.warn(`Message #${t}, content item #${n} has invalid image_url.`)})):logger.warn(`Message #${t} has an invalid content array. Role: ${e.role}`)})),logger.debug("=== EXACT MESSAGE SENT TO OPENAI ==="),logger.debug("1. Context Role:",e.role),logger.debug("2. Messages:",JSON.stringify(n)),logger.debug(`3. Total messages: ${n.length}, with chunking applied`);const s=n.map(((e,t)=>`Msg #${t+1}: role=${e.role}, items=${e.content.length}, types=[${[...new Set(e.content.map((e=>e.type)))].join(",")}]`));return logger.debug(`Message chunks summary:\n${s.join("\n")}`),console.log("OPENAI_PAYLOAD →",n),window.ImageFilterUtils&&(n=window.ImageFilterUtils.filterImagesInOpenAIMessages(n)),n}catch(e){return logger.error(`Error preparing message content: ${e.message}`,{},e),[]}}static filterTrivialMessages(e){if(!Array.isArray(e)||0===e.length)return[];const t=[/^(👍|👌|✅|🙏|😊)$/],n=e.filter((e=>{if(!e.content||"object"!=typeof e.content||!e.content.text)return!0;const n="string"==typeof e.content.text?e.content.text.trim():e.content.text;if(e.content.imageUrls&&e.content.imageUrls.length>0)return!0;if(e.content.media&&Object.values(e.content.media).some((e=>null!==e&&e.length>0)))return!0;for(const e of t)if(e.test(n))return!1;return!0}));return logger.debug(`Filtered out ${e.length-n.length} trivial messages`),n}static prepareMessageContentItems(e){if(!e)return[{type:"text",text:"No content"}];if(!e.content)return[{type:"text",text:"No content"}];if(Array.isArray(e.content)){const t=e.content.map((e=>"image_url"===e.type&&void 0!==e.image_url?.url&&"string"==typeof e.image_url.url&&""!==e.image_url.url.trim()||"text"===e.type&&"string"==typeof e.text&&""!==e.text.trim()?e:null)).filter((e=>null!==e));return t.length?t:[{type:"text",text:"No valid content"}]}if("string"==typeof e.content){return[{type:"text",text:e.content.trim()||"No content"}]}if("object"==typeof e.content&&null!==e.content){const t=[];return e.content.text&&"string"==typeof e.content.text&&""!==e.content.text.trim()&&t.push({type:"text",text:e.content.text.trim()}),e.content.imageUrls&&Array.isArray(e.content.imageUrls)&&e.content.imageUrls.filter((e=>e&&"string"==typeof e&&""!==e.trim())).forEach((e=>{t.push({type:"image_url",image_url:{url:e}})})),e.content.media&&Array.isArray(e.content.media.images)&&e.content.media.images.filter((e=>e&&e.url&&"string"==typeof e.url&&""!==e.url.trim())).forEach((e=>{t.push({type:"image_url",image_url:{url:e.url}})})),0===t.length?t.push({type:"text",text:"No valid content"}):t.some((e=>"text"===e.type))||t.unshift({type:"text",text:"Multimedia content:"}),t}return[{type:"text",text:"Unrecognized content"}]}static organizeMessagesByRole(e){if(!Array.isArray(e)||0===e.length)return[];try{const t=[...e];t.sort(((e,t)=>{if(e.timestamp&&t.timestamp)return new Date(e.timestamp)-new Date(t.timestamp);if(e.timestamp)return-1;if(t.timestamp)return 1;if(e.id&&t.id&&e.id.includes("_")&&t.id.includes("_")){const n=parseInt(e.id.split("_").pop()),a=parseInt(t.id.split("_").pop());if(!isNaN(n)&&!isNaN(a))return n-a}return 0}));for(let e=0;e<t.length;e++){const n=t[e];n.content?"string"==typeof n.content&&(n.content={text:n.content}):n.content={text:""},"boolean"==typeof n.sentByUs?n.role=n.sentByUs?"assistant":"user":n.role&&["user","assistant","system"].includes(n.role)||(n.role=e%2==0?"user":"assistant")}return logger.debug(`Messages organized: ${t.length} messages with proper roles`),t}catch(t){return logger.error(`Error organizing messages: ${t.message}`),[...e]}}static filterProblemImageUrls(e){return window.ImageFilterUtils?window.ImageFilterUtils.filterImageUrls(e):Array.isArray(e)?e.filter((e=>{if(!e||"string"!=typeof e)return!1;if(e.includes("fbcdn.net")||e.includes("facebook.com")||e.includes("fbsbx.com")){const t=e.includes("s50x50")||e.includes("_t.")||e.includes("_s.")||e.includes("p50x50")||e.includes("_xs")||e.includes("_xxs"),n=e.includes("/profile/")||e.includes("profile-pic")||e.includes("profile_pic")||e.includes("/avatar/");return!(t||n)}return!0})):[]}}window.MessageUtils=A;async function C(e,t,n){if(!t)throw new Error("Valid threadId is required");if(!Array.isArray(e)||0===e.length)return console.warn("No messages to send to the thread"),!1;let a=null,s=null;if("string"==typeof n)s=n;else{if(!n||"object"!=typeof n)throw new Error("Valid apiKey or apiClient is required");a=n}const i="https://api.openai.com/v1",r=s?{Authorization:`Bearer ${s}`,"Content-Type":"application/json","OpenAI-Beta":"assistants=v2"}:null;try{const n="[MessageChunker]";console.log(`${n} Sending ${e.length} messages to thread ${t}`);for(let s=0;s<e.length;s++){const o=e[s];if(o.role&&o.content)if("system"!==o.role){if(Array.isArray(o.content)&&o.content.length>10){console.debug(`${n} Splitting message #${s+1} with ${o.content.length} elements into blocks of 10`);const e=[];for(let t=0;t<o.content.length;t+=10)e.push(o.content.slice(t,t+10));for(let l=0;l<e.length;l++){const c=e[l],d=0===l;if(c.length>0&&"text"===c[0].type){const t=d?"":"[Continuación] ",n=l<e.length-1?" [Continúa...]":"";(t||n)&&(c[0]={...c[0],text:t+c[0].text+n})}if(a)await a.addMessage(t,{role:o.role,content:c});else{const e=await fetch(`${i}/threads/${t}/messages`,{method:"POST",headers:r,body:JSON.stringify({role:o.role,content:c})});if(!e.ok){const t=await e.json();throw new Error(`API Error (${e.status}): ${t.error?.message||e.statusText}`)}}console.debug(`${n} Sent block ${l+1}/${e.length} of message #${s+1}`)}}else{if(a)await a.addMessage(t,{role:o.role,content:o.content});else{const e=await fetch(`${i}/threads/${t}/messages`,{method:"POST",headers:r,body:JSON.stringify({role:o.role,content:o.content})});if(!e.ok){const t=await e.json();throw new Error(`API Error (${e.status}): ${t.error?.message||e.statusText}`)}}console.debug(`${n} Sent complete message #${s+1}`)}s<e.length-1&&await new Promise((e=>setTimeout(e,150)))}else console.debug(`${n} Message #${s+1} (system) skipped`);else console.warn(`${n} Invalid message #${s+1}, skipped`)}return console.log(`${n} All messages sent successfully to thread ${t}`),!0}catch(e){throw console.error(`Error sending messages: ${e.message}`),e}}window.TimestampUtils=class{static convertFacebookTimestampToMs(e){if(!e||"string"!=typeof e)return null;try{new Date;const t={Sun:0,Mon:1,Tue:2,Wed:3,Thu:4,Fri:5,Sat:6,Dom:0,Lun:1,Mar:2,"Mié":3,Mie:3,Jue:4,Vie:5,"Sáb":6,Sab:6},n=e.match(/(\w{3})\s+(\d{1,2}):(\d{2})\s*(AM|PM)?/i);if(n){const a=t[n[1]];let s=parseInt(n[2]);const i=parseInt(n[3]),r="pm"===n[4]?.toLowerCase();if(void 0===a)return this.parseAlternateFormats(e);r&&s<12&&(s+=12),r||12!==s||(s=0);const o=new Date;o.setHours(s,i,0,0);const l=o.getDay();if(l!==a){let e=a-l;e>0&&(e-=7),o.setDate(o.getDate()+e)}return o.getTime()}return this.parseAlternateFormats(e)}catch(e){return logger.debug(`Error converting FB timestamp: ${e.message}`),null}}static parseAlternateFormats(e){try{const t=new Date,n=e.match(/(\d{1,2})\/(\d{1,2})\/(\d{2,4}),?\s*(\d{1,2}):(\d{2})(?:\s*(AM|PM))?/i);if(n){const e=parseInt(n[1]),t=parseInt(n[2])-1;let a=parseInt(n[3]);a<100&&(a+=a<50?2e3:1900);let s=parseInt(n[4]);const i=parseInt(n[5]);"pm"===n[6]?.toLowerCase()&&s<12&&(s+=12),"am"===n[6]?.toLowerCase()&&12===s&&(s=0);return new Date(a,t,e,s,i,0,0).getTime()}const a=e.match(/(Yesterday|Ayer)(?:\s+at)?\s+(\d{1,2}):(\d{2})(?:\s*(AM|PM))?/i);if(a){let e=parseInt(a[2]);const n=parseInt(a[3]),s="pm"===a[4]?.toLowerCase();s&&e<12&&(e+=12),s||12!==e||(e=0);const i=new Date(t);return i.setDate(i.getDate()-1),i.setHours(e,n,0,0),i.getTime()}const s=e.match(/(Today|Hoy)(?:\s+at)?\s+(\d{1,2}):(\d{2})(?:\s*(AM|PM))?/i);if(s){let e=parseInt(s[2]);const n=parseInt(s[3]),a="pm"===s[4]?.toLowerCase();a&&e<12&&(e+=12),a||12!==e||(e=0);const i=new Date(t);return i.setHours(e,n,0,0),i.getTime()}const i=e.match(/^(\d{1,2}):(\d{2})(?:\s*(AM|PM))?$/i);if(i){let e=parseInt(i[1]);const n=parseInt(i[2]),a="pm"===i[3]?.toLowerCase();a&&e<12&&(e+=12),a||12!==e||(e=0);const s=new Date(t);return s.setHours(e,n,0,0),s.getTime()}const r=e.match(/(\d+)\s+(minutes?|hours?|mins?|hrs?|minutos?|horas?)\s+ago/i);if(r){const e=parseInt(r[1]),n=r[2].toLowerCase();let a=6e4;return(n.startsWith("hour")||n.startsWith("hr")||n.startsWith("hora"))&&(a=36e5),t.getTime()-e*a}const o=e.match(/(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+(\d{1,2})(?:,?\s+(\d{4}))?(?:,?\s+(\d{1,2}):(\d{2})(?:\s*(AM|PM))?)?/i);if(o){const e={Jan:0,Feb:1,Mar:2,Apr:3,May:4,Jun:5,Jul:6,Aug:7,Sep:8,Oct:9,Nov:10,Dec:11}[o[1]],n=parseInt(o[2]),a=o[3]?parseInt(o[3]):t.getFullYear();if(o[4]&&o[5]){let t=parseInt(o[4]);const s=parseInt(o[5]),i="pm"===o[6]?.toLowerCase();return i&&t<12&&(t+=12),i||12!==t||(t=0),new Date(a,e,n,t,s,0,0).getTime()}return new Date(a,e,n).getTime()}return logger.debug(`Could not parse timestamp format: ${e}`),null}catch(e){return logger.debug(`Error in parseAlternateFormats: ${e.message}`),null}}static areTimestampsEquivalent(e,t,n=6e4){if(!e||!t)return!1;if(e===t)return!0;const a=this.convertFacebookTimestampToMs(e),s=this.convertFacebookTimestampToMs(t);return!(!a||!s)&&Math.abs(a-s)<=n}static isTimestampNewer(e,t){if(!e||!t)return!1;const n=this.convertFacebookTimestampToMs(e),a=this.convertFacebookTimestampToMs(t);return!(!n||!a)&&n>a}static findMessageByTimestamp(e,t){if(!(e&&Array.isArray(e)&&t&&t.timestamp))return-1;if(t.messageId&&t.content){const n=e.findIndex((e=>e.id===t.messageId&&e.content?.text===t.content));if(-1!==n)return n}const n=this.convertFacebookTimestampToMs(t.timestamp);if(!n)return-1;const a=e.map(((e,t)=>({index:t,timestampMs:this.convertFacebookTimestampToMs(e.timestamp)}))).filter((e=>null!==e.timestampMs));if(0===a.length)return-1;a.sort(((e,t)=>Math.abs(e.timestampMs-n)-Math.abs(t.timestampMs-n)));const s=a[0];return Math.abs(s.timestampMs-n)>9e5?-1:s.index}},window.sendConversationInChunks=C,window.MessageChunker={sendConversationInChunks:C};window.ThreadMessageHandler=class{static prepareMessagesBasedOnThreadType(e,t){const n=CONFIG.newThreads||{};CONFIG.existingThreads;if(e.productDetails&&window.ImageFilterUtils&&(e.productDetails=window.ImageFilterUtils.preprocessProductDetails(e.productDetails)),t.isNew){const t=e.messages.slice(-n.maxMessages);return t.forEach((e=>{e.content.media?.images&&e.content.media.images.length>n.maxProductImages&&(e.content.media.images=e.content.media.images.slice(0,n.maxProductImages))})),t.forEach((e=>{e.content.media.images?.forEach((e=>{e.quality=n.imageDetail}))})),A.prepareMessageContent({...e,messages:t})}{const a=e.messages,s=t.lastPosition||{};let i=-1;s.messageId&&(i=a.findIndex((e=>e.id===s.messageId))),i<0&&s.timestamp&&(i=a.findIndex((e=>e.timestamp===s.timestamp)));let r=i>=0?i+1:Math.max(0,a.length-n.maxMessages);const o=a.slice(r);o.forEach((e=>{if(e.content)if("string"==typeof e.content){const t=e.content;e.content={text:t,media:{images:[]}}}else e.content.media?e.content.media.images||(e.content.media.images=[]):e.content.media={images:[]};else e.content={text:"",media:{images:[]}};window.ImageFilterUtils&&e.content.media&&Array.isArray(e.content.media.images)&&(e.content.media.images=e.content.media.images.filter((e=>{if(!e||!e.url)return!1;const t=!window.ImageFilterUtils.isProblematicFacebookImage(e.url);return t||logger.debug(`Filtered problematic image in message: ${e.url}`),t}))),e.content.media.images&&e.content.media.images.length>n.maxProductImages&&(e.content.media.images=e.content.media.images.slice(0,n.maxProductImages)),Array.isArray(e.content.media.images)&&e.content.media.images.forEach((e=>{e&&(e.quality=n.imageDetail)}))}));const l=A.prepareMessageContent({...e,messages:o});return window.ImageFilterUtils?window.ImageFilterUtils.filterImagesInOpenAIMessages(l):l}}static async prepareNewThreadMessages(e){try{const t=window.CONFIG?.threadSystem?.newThreads||{maxMessages:50,maxProductImages:5,imageDetail:"high"};logger.debug(`Preparing new thread with limits: maxMessages=${t.maxMessages}, maxProductImages=${t.maxProductImages}`);const n=e.messages.slice(-t.maxMessages);e.productDetails&&(e.productDetails.images&&Array.isArray(e.productDetails.images)&&(e.productDetails.images=e.productDetails.images.slice(0,t.maxProductImages),logger.debug(`Limited product images to ${e.productDetails.images.length}`)),e.productDetails.allImages&&Array.isArray(e.productDetails.allImages)&&(e.productDetails.allImages=e.productDetails.allImages.slice(0,t.maxProductImages),logger.debug(`Limited allImages to ${e.productDetails.allImages.length}`)),"low"===t.imageDetail&&this._reduceImageQuality(e.productDetails));const a={...e,messages:n};return await window.MessageUtils.prepareMessageContent(a)}catch(e){throw logger.error(`Error preparing new thread messages: ${e.message}`,{},e),e}}static async prepareContinuationMessages(e,t){try{if(!t||!t.messageId&&!t.timestamp)return logger.debug("No valid last position found, treating as new thread"),await this.prepareNewThreadMessages(e);const n=window.CONFIG?.threadSystem?.existingThreads||{ignoreOlderThan:864e5,onlyNewConversations:!1};if(t.date&&n.ignoreOlderThan>0){const a=Date.now()-t.date;if(a>n.ignoreOlderThan)return logger.log(`Last message is too old (${Math.round(a/1e3/60)} minutes), ignoring history`),await this.prepareNewThreadMessages(e)}const a=this.analyzeConversation(e.messages);if(a.messageCount>100)return await this.prepareOptimizedContinuation(e,t,a);const s=this.findLastProcessedMessageIndex(e.messages,t);if(-1===s){logger.debug("Could not find last message by ID, trying timestamp match");const n=window.TimestampUtils.findMessageByTimestamp(e.messages,t);return-1!==n?(logger.debug(`Found match by timestamp at index ${n}`),await this.formatMessagesFromIndex(e,n+1)):(logger.warn("Could not find continuation point, using standard preparation with context hint"),e.messages.unshift({role:"system",content:`Note: This is a continuation of a previous conversation. Last message context was: "${t.content||"Unknown"}"`}),await this.prepareNewThreadMessages(e))}return logger.debug(`Found exact message match at index ${s}`),await this.formatMessagesFromIndex(e,s+1)}catch(t){return logger.error(`Error preparing continuation messages: ${t.message}`,{},t),await this.prepareNewThreadMessages(e)}}static async prepareOptimizedContinuation(e,t,n){try{if(logger.debug(`Using optimized continuation for large conversation (${n.messageCount} messages)`),n.lastKnownPosition>0){const t=e.messages.length-n.lastKnownPosition;if(t>0&&t<=50)return logger.debug(`Using ${t} new messages since last known position`),await this.formatMessagesFromIndex(e,n.lastKnownPosition)}const t=this.createConversationSummary(e.messages,n),a=e.messages.slice(-30),s={...e,messages:[...t,...a]};return logger.debug(`Created optimized context with summary + ${a.length} recent messages`),await window.MessageUtils.prepareMessageContent(s)}catch(t){return logger.error(`Error in optimized continuation: ${t.message}`,{},t),await this.formatMessagesFromIndex(e,Math.max(0,e.messages.length-50))}}static createConversationSummary(e,t){const n={role:"system",content:"CONVERSATIONAL CONTEXT: "};let a="";for(let t=0;t<Math.min(10,e.length);t++){const n=e[t];if(n.content&&"object"==typeof n.content&&n.content.text){const e=n.content.text.toLowerCase();if(e.includes("product")||e.includes("price")||e.includes("selling")){a=n.content.text;break}}}return a&&(n.content+=`\nProduct discussed: ${a}\n\n`),n.content+=`This is a continuation of a conversation with ${t.messageCount} previous messages`,t.hasPriceNegotiation&&(n.content+=". There has been price negotiation"),t.hasAgreement?n.content+=". The parties appear to have reached some agreement":n.content+=". The conversation is ongoing with no final agreement yet",t.lastMessage&&(n.content+=`.\n\nLast message context: "${t.lastMessage}"`),[n]}static analyzeConversation(e){const t={messageCount:e.length,lastKnownPosition:-1,hasPriceNegotiation:!1,hasAgreement:!1,lastMessage:"",participantCount:0},n=new Set,a=[/price|precio|pay|pagar|\$|€|cost|costo|worth|vale/i,/discount|descuento|offer|oferta|lower|cheaper|barato|cheap/i],s=[/agree|agreed|acuerdo|deal|trato|accept|acepto/i,/sounds good|me parece bien|perfect|perfecto/i,/when can|we meet|nos encontramos|pickup|recoger/i];for(let i=0;i<e.length;i++){const r=e[i];void 0!==r.sentByUs?n.add(r.sentByUs?"me":"them"):r.role&&n.add(r.role);let o="";"string"==typeof r.content?o=r.content:r.content&&r.content.text&&(o="string"==typeof r.content.text?r.content.text:JSON.stringify(r.content.text)),!t.hasPriceNegotiation&&o&&(t.hasPriceNegotiation=a.some((e=>e.test(o)))),!t.hasAgreement&&o&&(t.hasAgreement=s.some((e=>e.test(o)))),o&&i===e.length-1&&(t.lastMessage=o.substring(0,100),t.lastMessage.length<o.length&&(t.lastMessage+="...")),r.id&&r.id.startsWith("msg_")&&(t.lastKnownPosition=i)}return t.participantCount=n.size,t}static findLastProcessedMessageIndex(e,t){if(!t||!t.messageId||!t.content)return-1;const n=e.findIndex((e=>e.id===t.messageId&&(e.content?.text===t.content||"string"==typeof e.content&&e.content===t.content)));if(-1!==n)return n;const a=e.findIndex((e=>e.id===t.messageId));if(-1!==a)return a;if(t.content){const n=e.findIndex((e=>(e.content?.text||("string"==typeof e.content?e.content:""))===t.content));if(-1!==n)return n}return-1}static async formatMessagesFromIndex(e,t){try{if(t<0||t>=e.messages.length)return logger.warn(`Invalid start index (${t}) for formatMessagesFromIndex`),await this.prepareNewThreadMessages(e);const n=e.messages.slice(t);0===n.length&&(logger.warn("No new messages found after the last processed point"),t>0&&n.push(e.messages[t-1]),0===n.length&&n.push({role:"system",content:"Continue the previous conversation. User may have questions about the last message."})),logger.log(`Preparing ${n.length} new messages from index ${t}`);let a=!1;if(n.length>5&&t>10&&(a=!0),a){const a=e.messages.slice(0,t),s=this.analyzeConversation(a),i=this.createConversationSummary(a,s);n.unshift(...i),logger.debug("Added conversation summary for context continuity")}const s={...e,messages:n,isContinuation:!0};return e.productDetails&&(s.productDetails={title:e.productDetails.title,price:e.productDetails.price}),await window.MessageUtils.prepareMessageContent(s)}catch(t){return logger.error(`Error formatting messages from index: ${t.message}`,{},t),await this.prepareNewThreadMessages(e)}}static _reduceImageQuality(e){try{const t=e=>{if(!e||"string"!=typeof e)return e;if(e.includes("fbcdn.net")||e.includes("fbsbx.com")){let t=e.replace(/&oh=.*?(&|$)/,"$1").replace(/&oe=.*?(&|$)/,"$1");return t.includes("&q=")||(t+=(t.includes("?")?"&":"?")+"q=70"),t}return e};e.images&&Array.isArray(e.images)&&(e.images=e.images.map(t)),e.allImages&&Array.isArray(e.allImages)&&(e.allImages=e.allImages.map(t)),e.imageUrls&&Array.isArray(e.imageUrls)&&(e.imageUrls=e.imageUrls.map(t))}catch(e){logger.debug(`Error reducing image quality: ${e.message}`)}}};window.ThreadManager=class{constructor(e){this.apiClient=e,this.activeThreads=new Map,this.threadTTL=72e5,this.threadInfoStorageKey="OPENAI_THREAD_INFO",this.threadInfoCache=new Map,this.loadSavedThreads(),this.loadThreadInfo(),setInterval((()=>this.cleanupOldThreads()),9e5)}loadSavedThreads(){try{const e=storageUtils.get("OPENAI_ACTIVE_THREADS",{});Object.entries(e).forEach((([e,t])=>{t&&t.id&&this.activeThreads.set(e,{id:t.id,lastUsed:t.lastUsed||Date.now()})})),logger.debug(`Loaded ${this.activeThreads.size} saved threads from storage`)}catch(e){logger.error("Error loading saved threads:",e)}}saveThreads(){try{const e={};this.activeThreads.forEach(((t,n)=>{e[n]={id:t.id,lastUsed:t.lastUsed}})),storageUtils.set("OPENAI_ACTIVE_THREADS",e)}catch(e){logger.error("Error saving threads:",e)}}loadThreadInfo(){try{const e=storageUtils.get(this.threadInfoStorageKey,{});Object.entries(e).forEach((([e,t])=>{t&&this.threadInfoCache.set(e,t)})),logger.debug(`Loaded extended info for ${this.threadInfoCache.size} threads`)}catch(e){logger.error("Error loading thread extended info:",e)}}persistThreadInfo(){try{const e={};this.threadInfoCache.forEach(((t,n)=>{e[n]=t})),storageUtils.set(this.threadInfoStorageKey,e),logger.debug(`Saved extended info for ${this.threadInfoCache.size} threads`)}catch(e){logger.error("Error saving thread extended info:",e)}}async getOrCreateThread(e){const t=CONFIG.existingThreads||{},n=this.threadInfoCache.get(e);n&&n.lastProcessedDate&&Date.now()-n.lastProcessedDate>t.ignoreOlderThan&&(logger.debug(`Thread ${e} older than ignoreOlderThan, resetting`),this.threadInfoCache.delete(e),this.persistThreadInfo(),this.activeThreads.delete(e),this.saveThreads());const a=this.activeThreads.get(e);if(a&&Date.now()-a.lastUsed<this.threadTTL)return console.log(`🧵 Reusing existing thread: ${a.id} for chat: ${e}`),logger.debug(`Reusing existing thread ${a.id} for chat ${e}`),a.lastUsed=Date.now(),this.saveThreads(),{id:a.id,isNew:!1};const s=this.getThreadInfoFromStorage(e),i=this.activeThreads.get(e);if(s&&i&&Date.now()-i.lastUsed<this.threadTTL)return logger.debug(`Using existing thread ${i.id} for chat ${e}`),i.lastUsed=Date.now(),this.saveThreads(),{isNew:!1,threadId:i.id,lastPosition:{messageId:s.lastProcessedMessageId,timestamp:s.lastProcessedTimestamp,date:s.lastProcessedDate,content:s.lastMessageContent}};if(s&&s.threadId)try{return await this.apiClient.listMessages(s.threadId,{limit:1}),logger.debug(`Reactivating thread ${s.threadId} for chat ${e}`),this.activeThreads.set(e,{id:s.threadId,lastUsed:Date.now()}),this.saveThreads(),{isNew:!1,threadId:s.threadId,lastPosition:{messageId:s.lastProcessedMessageId,timestamp:s.lastProcessedTimestamp,date:s.lastProcessedDate,content:s.lastMessageContent}}}catch(t){logger.warn(`Thread ${s.threadId} for chat ${e} is no longer valid. Creating a new one.`)}try{const t=(await this.apiClient.createThread()).id;return console.log(`🧵 New thread created: ${t} for chat: ${e}`),logger.log(`Created new thread ${t} for chat ${e}`),this.activeThreads.set(e,{id:t,lastUsed:Date.now()}),this.saveThreads(),this.saveThreadInfo(e,t,{createdAt:Date.now(),updatedAt:Date.now()}),{isNew:!0,threadId:t,lastPosition:null}}catch(e){throw logger.error(`Error creating thread: ${e.message}`),e}}async processChat(e){return logger.debug(`processChat called for chat ${e} (alias for getOrCreateThread)`),await this.getOrCreateThread(e)}getThreadInfoFromStorage(e){return this.threadInfoCache.get(e)||null}saveThreadInfo(e,t=null,n={}){const a=this.threadInfoCache.get(e)||{chatId:e,createdAt:Date.now()};t&&(a.threadId=t);const s={...a,...n,updatedAt:Date.now()};return this.threadInfoCache.set(e,s),this.persistThreadInfo(),s}updateLastProcessedMessage(e,t){const n={...this.getThreadInfoFromStorage(e)||{chatId:e,threadId:(this.activeThreads.get(e)||{}).id,createdAt:Date.now()},lastProcessedMessageId:t.id,lastProcessedTimestamp:t.timestamp||null,lastProcessedDate:Date.now(),lastMessageContent:t.content?.text||("string"==typeof t.content?t.content:""),updatedAt:Date.now()};this.saveThreadInfo(e,n.threadId,n);const a=this.activeThreads.get(e);a&&(a.lastUsed=Date.now(),this.saveThreads()),logger.debug(`Updated last processed message for chat ${e}: ${t.id}`)}logActiveThreads(){if(console.log(`🧵 === ACTIVE THREADS (${this.activeThreads.size}) ===`),0===this.activeThreads.size)return void console.log("No active threads at the moment");const e=[];this.activeThreads.forEach(((t,n)=>{const a=Math.round((Date.now()-t.lastUsed)/1e3);e.push({chatId:n,threadId:t.id,lastUsed:new Date(t.lastUsed).toLocaleTimeString(),secondsAgo:a,expires:Math.round((this.threadTTL-(Date.now()-t.lastUsed))/1e3)})})),console.table(e)}cleanupOldThreads(){const e=this.activeThreads.size;console.log(`🧵 Starting cleanup of threads (${e} active)`);const t=Date.now();let n=0;for(const[e,a]of this.activeThreads.entries())t-a.lastUsed>this.threadTTL&&(this.activeThreads.delete(e),n++);if(n>0){logger.debug(`Cleaned up ${n} expired threads`),this.saveThreads();let e=0;for(const t of this.threadInfoCache.keys())if(!this.activeThreads.has(t)){const n=this.threadInfoCache.get(t);Date.now()-(n.updatedAt||n.createdAt)>2592e6&&(this.threadInfoCache.delete(t),e++)}e>0&&(logger.debug(`Cleaned up extended info for ${e} old threads`),this.persistThreadInfo())}else{const e=this.activeThreads.size;console.log(`🧵 No expired threads found for deletion (${e} active)`)}}async sendConversationInChunks(e,t,n=null){if(!t)throw new Error("A valid threadId is required to send messages");if(!Array.isArray(e)||0===e.length)return logger.warn("No messages to send to the thread"),!1;const a=n?new window.OpenAIApiClient(n):this.apiClient;if(!a)throw new Error("API client not initialized");logger.debug(`Sending conversation split into blocks to thread ${t} (${e.length} messages)`);try{return await window.MessageChunker.sendConversationInChunks(e,t,a)}catch(e){throw logger.error(`Error sending conversation in blocks: ${e.message}`,{},e),e}}async addMessageToThread(e,t,n=!1){try{let a;if(t.productDetails&&window.ImageFilterUtils&&(t.productDetails=window.ImageFilterUtils.preprocessProductDetails(t.productDetails)),t.preparedMessages?a=t.preparedMessages:window.ThreadMessageHandler&&t.threadInfo?(a=await window.ThreadMessageHandler.prepareMessagesBasedOnThreadType(t,t.threadInfo),logger.debug("Using ThreadMessageHandler with thread type information")):a=await window.MessageUtils.prepareMessageContent(t),window.ImageFilterUtils&&(a=window.ImageFilterUtils.filterImagesInOpenAIMessages(a)),!e)throw new Error("Invalid threadId");if(!a||!a.length)throw new Error("No message content to add");if(a.some((e=>Array.isArray(e.content)&&e.content.length>10)))return logger.debug("Detected extensive content, using block sending method"),await this.sendConversationInChunks(a,e);for(let t=0;t<a.length;t++){const s=a[t];if("system"===s.role)continue;if(!Array.isArray(s.content)||0===s.content.length){logger.warn(`Message #${t+1} has invalid content structure. Skipping.`);continue}if(!n&&"image_url"===s.content[0].type&&s.content[0].image_url&&s.content[0].image_url.url){const n=s.content[0].image_url.url;if(n.includes("fbcdn.net")||n.includes("facebook.com")||n.includes("fbsbx.com")){if(/\/s\d+x\d+\/|\/p\d+x\d+\/|\/profile\/|profile[-_]pic|\/avatar\/|_t\.|_s\.|_xs|_xxs/.test(n)){if(logger.warn(`Skipping problematic Facebook image URL: ${n}`),1===s.content.length){await this.apiClient.addMessage(e,{role:s.role,content:[{type:"text",text:"Se intentó compartir una imagen, pero no se pudo procesar correctamente."}]}),logger.debug(`Added explanatory text for skipped image in message #${t+1}`);continue}await this.apiClient.addMessage(e,{role:s.role,content:s.content.slice(1)}),logger.debug(`Filtered out problematic image from message #${t+1} and sent remaining content`);continue}}try{logger.debug(`Attempting to upload image: ${n}`);const a=await this.apiClient.uploadFile(n,"image.jpg");await this.apiClient.addMessage(e,{role:s.role,content:[{type:"image_file",image_file:{file_id:a}}]}),logger.debug(`Image uploaded and sent as file ${a} for message #${t+1}`);continue}catch(e){logger.error(`Image upload error for message #${t+1}: ${e.message}. Trying with URL.`)}}try{await this.apiClient.addMessage(e,{role:s.role,content:s.content}),logger.debug(`Added message #${t+1} with role ${s.role} to thread ${e}`)}catch(n){throw logger.error(`Error adding message #${t+1} to thread ${e}: ${n.message}`),n}}return!0}catch(t){throw logger.error(`Error in addMessageToThread (threadId: ${e}): ${t.message}`),t}}async runAssistant(e,t){try{console.log(`🧵 Running assistant: ${t} on thread: ${e}`),logger.log(`Running assistant ${t} on thread ${e}`);const n=await this.apiClient.createRun(e,{assistant_id:t});logger.debug(`Started run ${n.id} on thread ${e}`),await this.pollRunUntilComplete(e,n.id);const a=await this.apiClient.listMessages(e,{limit:1,order:"desc"}),s=a.data&&a.data.length>0?a.data[0]:null;if(!s||"assistant"!==s.role)throw logger.error("No assistant message found as the latest message."),new Error("No assistant message found as the latest message in the thread.");if(s.content&&s.content.length>0){const e=s.content.find((e=>"text"===e.type));if(e&&e.text&&"string"==typeof e.text.value)return logger.debug("Retrieved assistant's message content"),e.text.value}throw logger.error("No text content found in assistant message."),new Error("No text content found in assistant message or content is not in expected format.")}catch(e){throw logger.error(`Error running assistant: ${e.message}`),e}}async pollRunUntilComplete(e,t){let n=0;return logger.debug(`Starting polling for run ${t} on thread ${e}`),new Promise((async(a,s)=>{const i=async()=>{try{if(n++,n>60)return logger.error(`Polling timed out for run ${t} after 60 attempts.`),void s(new Error(`Polling timed out for run ${t}`));const r=await this.apiClient.getRun(e,t);switch(logger.debug(`Run ${t} status: ${r.status} (Attempt: ${n})`),r.status){case"queued":case"in_progress":case"requires_action":setTimeout(i,1e3);break;case"completed":logger.log(`Run ${t} completed successfully.`),a();break;case"failed":logger.error(`Run ${t} failed. Reason: ${r.last_error?.message||"Unknown error"}`),s(new Error(`Run failed: ${r.last_error?.message||"Unknown error"}`));break;case"cancelled":logger.warn(`Run ${t} was cancelled.`),s(new Error("Run was cancelled"));break;case"expired":logger.error(`Run ${t} expired.`),s(new Error("Run expired"));break;default:logger.error(`Unknown run status for ${t}: ${r.status}`),s(new Error(`Unknown run status: ${r.status}`))}}catch(e){if(logger.error(`Error during polling for run ${t}: ${e.message}`),n<5)return logger.warn(`Retrying due to polling error. Attempt ${n}/5.`),void setTimeout(i,1e3*n);s(e)}};i()}))}};class x{constructor(){this.initialized=!1,this.threadManager=null,this.messageUtils=null,this.initialize()}initialize(){try{const e=this.verifyDependencies();if(!e.success)throw new Error(e.error||"Failed to verify dependencies");return this.threadManager=e.threadManager,this.messageUtils=e.messageUtils,this.messageChunker=e.messageChunker,this.threadManager&&!this.threadManager.processChat&&(this.threadManager.processChat=this.threadManager.getOrCreateThread),this.initialized=!0,logger.log("ChatThreadSystem initialized successfully"),!0}catch(e){return logger.error(`Error initializing ChatThreadSystem: ${e.message}`,{},e),!1}}verifyDependencies(){try{let e=null;if(window.openaiManager&&window.openaiManager.apiClient)e=window.openaiManager.apiClient,logger.debug("API client obtained from openaiManager");else if(window.OpenAIApiClient&&window.openaiManager&&window.openaiManager.apiKey)e=new window.OpenAIApiClient(window.openaiManager.apiKey),logger.debug("Created new API client with apiKey from openaiManager");else if(!e&&window.OpenAIApiClient){const t=window.CONFIG?.AI?.apiKey||storageUtils.get("FB_CHAT_MONITOR_OPENAI_KEY","");t&&(e=new window.OpenAIApiClient(t),logger.debug("Created API client with apiKey from CONFIG or storage"))}if(!e)return{success:!1,error:"Could not obtain or create a valid API client"};let t=null;if(window.openaiManager&&window.openaiManager.threadManager?(t=window.openaiManager.threadManager,logger.debug("ThreadManager obtained from openaiManager")):window.ThreadManager&&(t=new window.ThreadManager(e),logger.debug("Created new ThreadManager")),!t)return{success:!1,error:"Could not obtain or create ThreadManager"};!t.processChat&&t.getOrCreateThread&&(t.processChat=t.getOrCreateThread,logger.debug("Added processChat alias to ThreadManager"));const n=window.MessageUtils||null;return{success:!0,apiClient:e,threadManager:t,messageUtils:n,messageChunker:window.MessageChunker||null}}catch(e){return logger.error(`Error verifying dependencies: ${e.message}`),{success:!1,error:`Error verifying dependencies: ${e.message}`}}}loadSavedThreads(){try{const e=storageUtils.get(this.config.storageKey,{threads:{},users:{}});e.threads&&Object.entries(e.threads).forEach((([e,t])=>{t&&t.threadId&&this.threads.set(e,{threadId:t.threadId,lastUsed:t.lastUsed||Date.now(),metadata:t.metadata||{}})})),e.users&&Object.entries(e.users).forEach((([e,t])=>{Array.isArray(t)&&this.users.set(e,t)})),this.statistics.activeThreads=this.threads.size,this.statistics.totalThreadsCreated=e.statistics?.totalThreadsCreated||this.threads.size,logger.debug(`ChatThreadSystem: Loaded ${this.threads.size} saved threads`)}catch(e){logger.error(`Error loading saved threads: ${e.message}`,{},e)}}saveThreads(){try{const e={};this.threads.forEach(((t,n)=>{e[n]={threadId:t.threadId,lastUsed:t.lastUsed,metadata:t.metadata||{}}}));const t={};this.users.forEach(((e,n)=>{t[n]=e})),storageUtils.set(this.config.storageKey,{threads:e,users:t,statistics:{totalThreadsCreated:this.statistics.totalThreadsCreated,lastSaved:Date.now()}}),logger.debug(`ChatThreadSystem: ${this.threads.size} threads saved successfully`)}catch(e){logger.error(`Error saving threads: ${e.message}`,{},e)}}setupPeriodicCleanup(){setInterval((()=>this.cleanupOldThreads()),9e5),logger.debug("ChatThreadSystem: Periodic cleanup configured")}cleanupOldThreads(){logger.debug("ChatThreadSystem: Starting cleanup of old threads...");const e=Date.now();let t=0;for(const[n,a]of this.threads.entries())if(e-a.lastUsed>this.config.threadTTL){this.threads.delete(n);for(const[e,t]of this.users.entries()){const a=t.filter((e=>e!==n));a.length!==t.length&&this.users.set(e,a)}t++}t>0?(this.statistics.activeThreads=this.threads.size,this.saveThreads(),logger.log(`ChatThreadSystem: ${t} old threads deleted`)):logger.debug("ChatThreadSystem: No threads found to delete")}async getOrCreateThread(e,t=null){const n=this.threads.get(e);if(n&&Date.now()-n.lastUsed<this.config.threadTTL)return n.lastUsed=Date.now(),this.saveThreads(),logger.debug(`ChatThreadSystem: Reusing existing thread ${n.threadId} for chat ${e}`),{threadId:n.threadId,isNew:!1,metadata:n.metadata||{}};try{const n=(await this.threadManager.getOrCreateThread(e)).id;if(this.threads.set(e,{threadId:n,lastUsed:Date.now(),metadata:{createdAt:Date.now(),userId:t}}),t){this.users.has(t)||this.users.set(t,[]);const n=this.users.get(t);n.includes(e)||(n.push(e),this.users.set(t,n),this.pruneUserThreads(t))}return this.statistics.totalThreadsCreated++,this.statistics.activeThreads=this.threads.size,this.saveThreads(),logger.log(`ChatThreadSystem: New thread ${n} created for chat ${e}`),{threadId:n,isNew:!0,metadata:{createdAt:Date.now(),userId:t}}}catch(t){throw logger.error(`Error creating thread for chat ${e}: ${t.message}`,{},t),t}}pruneUserThreads(e){const t=this.users.get(e);if(!t||t.length<=this.config.maxThreadsPerUser)return;const n=t.map((e=>{const t=this.threads.get(e);return{chatId:e,lastUsed:t?t.lastUsed:0}}));n.sort(((e,t)=>e.lastUsed-t.lastUsed));const a=n.length-this.config.maxThreadsPerUser;if(a>0){const s=n.slice(0,a).map((e=>e.chatId));this.users.set(e,t.filter((e=>!s.includes(e)))),logger.debug(`ChatThreadSystem: Deleted ${a} old threads for user ${e}`)}}async sendConversationToThread(e,t){try{const{threadId:n}=await this.getOrCreateThread(e,t.userId);if(!n)throw new Error("Could not obtain a valid thread ID");const a=await window.MessageUtils.prepareMessageContent(t);if(!a||!a.length)throw new Error("Could not prepare valid messages from the context");let s;if(logger.debug(`ChatThreadSystem: Sending ${a.length} messages to thread ${n}`),s=this.threadManager&&"function"==typeof this.threadManager.sendConversationInChunks?await this.threadManager.sendConversationInChunks(a,n):window.MessageChunker?await window.MessageChunker.sendConversationInChunks(a,n,this.apiClient):await window.sendConversationInChunks(a,n,this.apiClient),s){this.statistics.messagesProcessed+=a.length;const t=this.threads.get(e);t&&(t.lastUsed=Date.now(),this.saveThreads()),logger.log(`ChatThreadSystem: Conversation sent successfully to thread ${n}`)}else logger.error(`ChatThreadSystem: Error sending conversation to thread ${n}`);return s}catch(e){throw logger.error(`Error sending conversation: ${e.message}`,{},e),e}}async runAssistant(e,t){try{if(!e)throw new Error("chatId is required");if(!t)throw new Error("assistantId is required");const n=this.threads.get(e);if(!n||!n.threadId)throw new Error(`There is no active thread for chat ${e}`);const a=n.threadId;logger.log(`ChatThreadSystem: Running assistant ${t} on thread ${a}`);const s=await this.threadManager.runAssistant(a,t);return n.lastUsed=Date.now(),this.saveThreads(),s}catch(e){throw logger.error(`Error running assistant: ${e.message}`,{},e),e}}async generateResponse(e){try{if(!e||!e.chatId)throw new Error("A context with chatId is required");const t=e.chatId,n=e.role||"default";let a;if(await this.sendConversationToThread(t,e),window.openaiManager&&"function"==typeof window.openaiManager.getAssistantIdForRole)a=window.openaiManager.getAssistantIdForRole(n);else{const e=window.CONFIG?.AI?.assistants||{};a=e[n]?.id||e.default?.id}if(!a)throw new Error(`No valid assistantId found for role "${n}"`);return await this.runAssistant(t,a)}catch(e){throw logger.error(`Error generating response: ${e.message}`,{},e),e}}getStatistics(){const e={...this.statistics,currentActiveThreads:this.threads.size,uniqueUsers:this.users.size,threadsPerUser:{}};return this.users.forEach(((t,n)=>{e.threadsPerUser[n]=t.length})),e}removeThread(e){if(!this.threads.has(e))return!1;const t=this.threads.get(e);this.threads.delete(e);for(const[t,n]of this.users.entries()){const a=n.filter((t=>t!==e));a.length!==n.length&&this.users.set(t,a)}return this.statistics.activeThreads=this.threads.size,this.saveThreads(),logger.log(`ChatThreadSystem: Thread ${t.threadId} deleted for chat ${e}`),!0}}(()=>{try{const e=new x;window.chatThreadSystem=e,e.initialized||setTimeout((()=>{e.initialized||(logger.debug("Retrying ChatThreadSystem initialization..."),e.initialize())}),2e3)}catch(e){logger.error(`Error creating ChatThreadSystem: ${e.message}`)}})();class OpenAIManager{constructor(){this.apiKey=storageUtils.get("FB_CHAT_MONITOR_OPENAI_KEY","")||"",this.model="gpt-4o",this.isInitialized=!1,this.assistants={seller:storageUtils.get("FB_CHAT_MONITOR_SELLER_ASSISTANT_ID",""),buyer:storageUtils.get("FB_CHAT_MONITOR_BUYER_ASSISTANT_ID",""),default:storageUtils.get("FB_CHAT_MONITOR_DEFAULT_ASSISTANT_ID","")},this.metrics={totalCalls:0,successfulCalls:0,failedCalls:0,totalTokensUsed:0,avgResponseTime:0,totalResponseTime:0},this.apiClient=null,this.threadManager=null,this.threadMessageHandler=null,this.timestampUtils=null}initialize(e=null){try{return e&&(this.apiKey=e,CONFIG.AI.apiKey=e,storageUtils.set("FB_CHAT_MONITOR_OPENAI_KEY",e),CONFIG.audioTranscription&&(CONFIG.audioTranscription.apiKey=e)),this.model="gpt-4o",CONFIG.AI.model="gpt-4o",this.apiKey?(this.apiClient=new window.OpenAIApiClient(this.apiKey),this.threadManager=new window.ThreadManager(this.apiClient),window.ThreadMessageHandler&&(this.threadMessageHandler=window.ThreadMessageHandler,logger.debug("ThreadMessageHandler utility detected and connected")),window.TimestampUtils&&(this.timestampUtils=window.TimestampUtils,logger.debug("TimestampUtils utility detected and connected")),window.MessageChunker&&(this.messageChunker=window.MessageChunker,logger.debug("MessageChunker utility detected and connected")),logger.debug("OpenAI components initialized successfully"),this.isInitialized=!0):(this.isInitialized=!1,logger.debug("initialize(): No API key, setting isInitialized=false")),logger.log("OpenAI Manager initialized: "+(this.isInitialized?"SUCCESS":"FAILED - No API Key")),this.schedulePeriodicChecks(),this.isInitialized}catch(e){return logger.error(`Error initializing OpenAI Manager: ${e.message}`),!1}}loadConfig(e=null){return logger.debug("loadConfig() called - redirecting to initialize()"),this.initialize(e)}async setApiKey(e){this.apiKey=e,CONFIG.AI.apiKey=e,storageUtils.set("FB_CHAT_MONITOR_OPENAI_KEY",e);const t=await this.validateApiKey();return this.isInitialized=t,t&&(this.apiClient=new window.OpenAIApiClient(this.apiKey),this.threadManager=new window.ThreadManager(this.apiClient)),t}verifyServiceState(){if(logger.log("Verifying OpenAI service status..."),this!==window.openaiManager&&(logger.warn("Incorrect openaiManager instance, correcting reference..."),Object.assign(this,window.openaiManager)),!this.isInitialized||!this.apiKey)if(logger.debug("OpenAI Manager is not initialized, attempting to recover state"),CONFIG?.AI?.apiKey)logger.debug("Using API key from CONFIG to initialize OpenAI Manager"),this.apiKey=CONFIG.AI.apiKey,this.isInitialized=!0;else{const e=storageUtils.get("FB_CHAT_MONITOR_OPENAI_KEY","");e&&(logger.debug("Using API key from localStorage to initialize OpenAI Manager"),this.apiKey=e,this.isInitialized=!0)}this.isInitialized&&this.apiKey&&(this.apiClient||(logger.debug("API client not initialized, creating instance"),this.apiClient=new window.OpenAIApiClient(this.apiKey)),this.threadManager||(logger.debug("Thread manager not initialized, creating instance"),this.threadManager=new window.ThreadManager(this.apiClient)));const e=!!this.apiKey;return e&&!this.isInitialized&&(this.isInitialized=!0,logger.debug("Correcting isInitialized to TRUE because we have apiKey")),logger.log("Final status of OpenAI Manager: "+(e?"AVAILABLE":"NOT AVAILABLE")),logger.debug(`Details: apiKey exists=${!!this.apiKey}, isInitialized=${this.isInitialized}, isReady()=${e}`),e}schedulePeriodicChecks(){setInterval((()=>this.verifyServiceState()),6e4),logger.debug("Periodic service checks scheduled")}isReady(){return!!this.apiKey&&(this.isInitialized||(this.isInitialized=!0,logger.debug("Auto-corrected isInitialized to true since API key exists")),this.apiClient||(this.apiClient=new window.OpenAIApiClient(this.apiKey)),this.threadManager||(this.threadManager=new window.ThreadManager(this.apiClient)),!0)}async validateApiKey(){if(!this.apiKey)return!1;try{if(this.apiClient)return await this.apiClient.validateApiKey();const e=await fetch("https://api.openai.com/v1/models",{method:"GET",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"}});if(e.ok)return logger.log("API key validated successfully"),!0;{const t=await e.json();return logger.error(`API key validation failed: ${t.error?.message||"Unknown error"}`),!1}}catch(e){return logger.error(`API key validation error: ${e.message}`),!1}}async prepareMessageContent(e){return window.MessageUtils.prepareMessageContent(e)}async prepareMessagesByThreadType(e,t){try{return this.threadMessageHandler?await this.threadMessageHandler.prepareMessagesBasedOnThreadType(e,t):await this.prepareMessageContent(e)}catch(t){return logger.error(`Error preparing messages by thread type: ${t.message}`),await this.prepareMessageContent(e)}}async generateResponse(e){try{if(!this.isReady())throw new Error("OpenAI API not ready");const t=e?.role||"buyer";if(logger.log(`Generating response as ${t} using OpenAI Assistants API`),!this.apiClient||!this.threadManager){if(!await this.initialize())throw new Error("Could not initialize OpenAI API")}if(window.ImageFilterUtils?(logger.debug("Applying deep image filtering to the context before sending"),e.productDetails&&(e.productDetails=window.ImageFilterUtils.preprocessProductDetails(e.productDetails),logger.debug("Product details filtered")),Array.isArray(e.messages)&&(e.messages=e.messages.map((e=>(e.content&&e.content.media&&Array.isArray(e.content.media.images)&&(e.content.media.images=e.content.media.images.filter((e=>{if(!e||!e.url)return!1;const t=!window.ImageFilterUtils.isProblematicFacebookImage(e.url);return t||logger.debug(`Filtered problematic image URL in message: ${e.url}`),t}))),e.content&&Array.isArray(e.content.imageUrls)&&(e.content.imageUrls=window.ImageFilterUtils.filterImageUrls(e.content.imageUrls)),e))),logger.debug(`${e.messages.length} messages processed with image filtering`)),e=window.ImageFilterUtils.deepFilterImages(e,((e,t)=>{t&&logger.debug(`Filtered problematic URL in deep filtering: ${e}`)})),logger.debug("Deep image filtering completed")):logger.warn("ImageFilterUtils not available. Deep image filtering will not be applied."),!this.threadManager||"function"!=typeof this.threadManager.processChat){if(!this.threadManager||"function"!=typeof this.threadManager.getOrCreateThread)throw new Error("ThreadManager missing required methods");logger.warn("ThreadManager missing processChat method, adding alias for getOrCreateThread"),this.threadManager.processChat=this.threadManager.getOrCreateThread}const n=this.getAssistantIdForRole(t),a=e.chatId||"default_chat",s=await this.threadManager.processChat(a),i=s.threadId||s.id;if(e.threadInfo=s,logger.debug(`Thread info: isNew=${s.isNew}, has lastPosition: ${!!s.lastPosition}`),this.threadMessageHandler&&e.threadInfo&&(e.preparedMessages=await this.prepareMessagesByThreadType(e,e.threadInfo),logger.debug("Messages prepared using thread type optimization")),window.ImageFilterUtils&&e.preparedMessages&&(e.preparedMessages=window.ImageFilterUtils.filterImagesInOpenAIMessages(e.preparedMessages),logger.debug("Applied final filtering to prepared messages")),await this.threadManager.addMessageToThread(i,e),e.messages&&e.messages.length>0){const t=e.messages[e.messages.length-1];this.threadManager.updateLastProcessedMessage(a,t)}return await this.threadManager.runAssistant(i,n)}catch(e){throw logger.error(`Error generating response: ${e.message}`),e}}clearInputField(){try{const e=document.querySelector(CONFIG.selectors.activeChat.messageInput);if(!e)return logger.error("Message input field to clear not found"),!1;const t="true"===e.getAttribute("contenteditable"),n=t?(e.textContent||"").trim():(e.value||"").trim();if(!n)return logger.debug("Field is already empty, no cleaning needed"),!0;logger.debug(`Field has previous content (${n.length} chars): "${n.substring(0,30)}..."`);const a=document.activeElement;if(t){e.innerHTML="",e.textContent="",e.focus(),document.execCommand("selectAll",!1,null),document.execCommand("delete",!1,null);const t=document.createRange();t.selectNodeContents(e);const n=window.getSelection();n.removeAllRanges(),n.addRange(t),n.deleteFromDocument(),setTimeout((()=>{e.textContent="",e.innerHTML=""}),0)}else"INPUT"!==e.tagName&&"TEXTAREA"!==e.tagName||(e.value="",e.setAttribute("value",""));if(["input","change","keyup","keydown"].forEach((t=>{e.dispatchEvent(new Event(t,{bubbles:!0}))})),setTimeout((()=>{const n=t?(e.textContent||"").trim():(e.value||"").trim();if(n){logger.warn(`Cleaning not effective, remaining content: "${n.substring(0,30)}..."`);try{if(t){e.innerHTML="";const t=e.parentNode;if(t){const n=e.cloneNode(!1);t.replaceChild(n,e),n.dispatchEvent(new Event("input",{bubbles:!0}))}}else"INPUT"!==e.tagName&&"TEXTAREA"!==e.tagName||(Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype,"value").set.call(e,""),e.dispatchEvent(new Event("input",{bubbles:!0})))}catch(e){logger.debug(`Error in emergency cleaning: ${e.message}`)}}else logger.debug("Verification: Field clean after process")}),50),a!==e&&a)try{a.focus()}catch(e){}return logger.debug("Aggressive cleaning of the input field completed"),!0}catch(e){return logger.error(`Error in clearInputField: ${e.message}`,{},e),!1}}getAssistantIdForRole(e){let t=this.assistants[e];return t||(t=this.assistants.default,logger.debug(`No assistant for role ${e}, using default assistant`)),t||("seller"===e&&CONFIG.AI?.assistants?.seller?.id?t=CONFIG.AI.assistants.seller.id:"buyer"===e&&CONFIG.AI?.assistants?.buyer?.id&&(t=CONFIG.AI.assistants.buyer.id)),t}setAssistantForRole(e,t){if(!["seller","buyer","default"].includes(e))throw new Error(`Invalid role: ${e}`);this.assistants[e]=t,storageUtils.set(`FB_CHAT_MONITOR_${e.toUpperCase()}_ASSISTANT_ID`,t),logger.log(`Set assistant ${t} for role ${e}`)}async createOrUpdateAssistant(e,t,n){if(!this.isInitialized&&!this.apiKey)throw logger.error("API key not initialized. Cannot create or update assistant."),new Error("API key not initialized");let a=this.assistants[e];const s=this.model||"gpt-4o";try{this.apiClient||(this.apiClient=new window.OpenAIApiClient(this.apiKey));const i={name:t,instructions:n,model:s};let r;return a?(logger.debug(`Updating assistant ${a} for role ${e} with model ${s}.`),r=await this.apiClient.createOrUpdateAssistant(a,i)):(logger.debug(`Creating new assistant for role ${e} with model ${s}.`),r=await this.apiClient.createOrUpdateAssistant(null,i)),a=r.id,this.assistants[e]=a,storageUtils.set(`FB_CHAT_MONITOR_${e.toUpperCase()}_ASSISTANT_ID`,a),logger.log(`Assistant ${a} ${a===r.id?"updated":"created"} successfully for role ${e}.`),a}catch(e){throw e.message?e:new Error(`Unexpected error during assistant ${a?"update":"creation"}: ${String(e)}`)}}async listAssistants(){try{this.apiClient||(this.apiClient=new window.OpenAIApiClient(this.apiKey));return(await this.apiClient.listAssistants()).data||[]}catch(e){throw logger.error(`Error listing assistants: ${e.message}`),e}}getMetrics(){const e=this.threadManager?this.threadManager.activeThreads.size:0;return this.threadManager&&this.threadManager.logActiveThreads(),{...this.metrics,activeThreads:e,averageResponseTime:this.metrics.successfulCalls?this.metrics.totalResponseTime/this.metrics.successfulCalls:0}}async sendConversation(e,t){try{if(!this.isReady())throw new Error("OpenAI API not initialized");if(e.some((e=>Array.isArray(e.content)&&e.content.length>10))){if(this.threadManager)return await this.threadManager.sendConversationInChunks(e,t);if(window.MessageChunker)return await window.MessageChunker.sendConversationInChunks(e,t,this.apiClient||this.apiKey);if("function"==typeof window.sendConversationInChunks)return await window.sendConversationInChunks(e,t,this.apiKey);throw new Error("No chunking mechanism available")}for(const n of e)"system"!==n.role&&await this.apiClient.addMessage(t,n);return!0}catch(e){throw logger.error(`Error sending conversation: ${e.message}`),e}}}const openAIManager=new OpenAIManager;window.openaiManager=openAIManager,console.log("[OpenAI Manager] Instance exposed globally as window.openaiManager"),window.openaiManager&&window.openaiManager.isReady||(console.warn("[OpenAI Manager] OpenAI Manager not available or missing necessary methods, reinstalling..."),window.openaiManager=openAIManager,"function"!=typeof window.openaiManager.initialize&&(console.error("[OpenAI Manager] CRITICAL ERROR! The initialize method is not available after reinstalling"),window.openaiManager.initialize=function(e=null){return openAIManager.initialize(e)}),"function"!=typeof window.openaiManager.isReady&&(window.openaiManager.isReady=function(){return!!window.openaiManager.apiKey}),"function"!=typeof window.openaiManager.verifyServiceState&&(window.openaiManager.verifyServiceState=function(){return openAIManager.verifyServiceState()})),CONFIG?.AI?.apiKey&&!window.openaiManager.apiKey&&(window.openaiManager.apiKey=CONFIG.AI.apiKey,window.openaiManager.isInitialized=!0),console.log("[OpenAI Manager] Status after global verification:",`apiKey=${!!window.openaiManager.apiKey}`,`isInitialized=${window.openaiManager.isInitialized}`,`isReady=${"function"==typeof window.openaiManager.isReady?window.openaiManager.isReady():"method not available"}`),window.addEventListener("DOMContentLoaded",(function(){setTimeout((()=>{window.openaiManager||(console.error("[OpenAI Manager] Error: openaiManager not detected in window after DOMContentLoaded. Reinstalling..."),window.openaiManager=openAIManager),window.openaiManager.isReady()&&"function"==typeof window.openaiManager.listAssistants&&(console.log("[OpenAI Manager] Starting automatic loading of assistants..."),window.openaiManager.listAssistants().then((e=>{console.log(`[OpenAI Manager] ${e.length} assistants found automatically`),window.updateAssistantsList&&window.updateAssistantsList(e)})).catch((e=>{console.warn("[OpenAI Manager] Error loading assistants automatically:",e.message)})))}),1e3)}));const assistantManagerUI=new class{constructor(){this.initialized=!1}initialize(){this.initialized||(this.createStyles(),this.createPanel(),this.attachEvents(),this.initialized=!0,logger.debug("Assistant Manager UI initialized"))}createStyles(){const e=document.createElement("style");e.textContent="\n          .assistant-manager-panel {\n            position: fixed;\n            right: 20px;\n            top: 60px;\n            width: 300px;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.2);\n            overflow: hidden;\n            z-index: 9999;\n            font-family: Arial, sans-serif;\n            transition: all 0.3s ease;\n          }\n\n          .assistant-manager-header {\n            background: #1877f2;\n            color: white;\n            padding: 10px 15px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            cursor: pointer;\n          }\n\n          .assistant-manager-content {\n            padding: 15px;\n            max-height: 400px;\n            overflow-y: auto;\n          }\n\n          .assistant-manager-field {\n            margin-bottom: 15px;\n          }\n\n          .assistant-manager-field label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            font-size: 14px;\n          }\n\n          .assistant-manager-field input,\n          .assistant-manager-field textarea {\n            width: 100%;\n            padding: 8px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            font-size: 14px;\n          }\n\n          .assistant-manager-field textarea {\n            height: 80px;\n            resize: vertical;\n          }\n\n          .assistant-manager-tabs {\n            display: flex;\n            border-bottom: 1px solid #ddd;\n          }\n\n          .assistant-manager-tab {\n            padding: 8px 15px;\n            cursor: pointer;\n            border-bottom: 2px solid transparent;\n          }\n\n          .assistant-manager-tab.active {\n            border-bottom: 2px solid #1877f2;\n            font-weight: bold;\n          }\n\n          .assistant-manager-tab-content {\n            display: none;\n            padding-top: 10px;\n          }\n\n          .assistant-manager-tab-content.active {\n            display: block;\n          }\n\n          .assistant-manager-button {\n            background: #1877f2;\n            color: white;\n            border: none;\n            padding: 8px 15px;\n            border-radius: 4px;\n            cursor: pointer;\n            margin-top: 5px;\n          }\n\n          .assistant-manager-button:hover {\n            background: #166fe5;\n          }\n\n          .assistant-manager-status {\n            margin-top: 10px;\n            padding: 8px;\n            border-radius: 4px;\n            font-size: 14px;\n          }\n\n          .assistant-manager-status.success {\n            background: #e6f7e6;\n            color: #25a025;\n          }\n\n          .assistant-manager-status.error {\n            background: #ffebeb;\n            color: #e60000;\n          }\n\n          .assistant-manager-toggle {\n            position: fixed;\n            right: 20px;\n            top: 20px;\n            background: #1877f2;\n            color: white;\n            border: none;\n            width: 40px;\n            height: 40px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            cursor: pointer;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n            z-index: 9999;\n            font-size: 20px;\n          }\n\n          .hidden {\n            display: none;\n          }\n        ",document.head.appendChild(e)}createPanel(){const e=document.createElement("button");e.className="assistant-manager-toggle",e.innerHTML="🤖",e.title="Manage Assistants",document.body.appendChild(e);const t=document.createElement("div");t.className="assistant-manager-panel hidden";const n=document.createElement("div");n.className="assistant-manager-header",n.innerHTML='<span>Assistant Management</span><span id="assistant-close">✕</span>',t.appendChild(n);const a=document.createElement("div");a.className="assistant-manager-content";const s=document.createElement("div");s.className="assistant-manager-field",s.innerHTML=`\n          <label for="openai-api-key">OpenAI API Key:</label>\n          <input type="password" id="openai-api-key" placeholder="sk-..." value="${CONFIG.AI.apiKey||""}">\n          <button id="save-api-key" class="assistant-manager-button">Save</button>\n        `,a.appendChild(s);const i=document.createElement("div");i.className="assistant-manager-tabs",i.innerHTML='\n          <div class="assistant-manager-tab active" data-tab="seller">Seller</div>\n          <div class="assistant-manager-tab" data-tab="buyer">Buyer</div>\n        ',a.appendChild(i);const r=document.createElement("div"),o=document.createElement("div");o.className="assistant-manager-tab-content active",o.id="tab-seller",o.innerHTML=`\n          <div class="assistant-manager-field">\n            <label for="seller-assistant-name">Name:</label>\n            <input type="text" id="seller-assistant-name" value="${CONFIG.AI.assistants.seller.name||""}">\n          </div>\n          <div class="assistant-manager-field">\n            <label for="seller-assistant-instructions">Instructions:</label>\n            <textarea id="seller-assistant-instructions">${CONFIG.AI.assistants.seller.instructions||""}</textarea>\n          </div>\n          <button id="save-seller-assistant" class="assistant-manager-button">Save Assistant</button>\n          <div id="seller-assistant-status" class="assistant-manager-status hidden"></div>\n        `,r.appendChild(o);const l=document.createElement("div");l.className="assistant-manager-tab-content",l.id="tab-buyer",l.innerHTML=`\n          <div class="assistant-manager-field">\n            <label for="buyer-assistant-name">Name:</label>\n            <input type="text" id="buyer-assistant-name" value="${CONFIG.AI.assistants.buyer.name||""}">\n          </div>\n          <div class="assistant-manager-field">\n            <label for="buyer-assistant-instructions">Instructions:</label>\n            <textarea id="buyer-assistant-instructions">${CONFIG.AI.assistants.buyer.instructions||""}</textarea>\n          </div>\n          <button id="save-buyer-assistant" class="assistant-manager-button">Save Assistant</button>\n          <div id="buyer-assistant-status" class="assistant-manager-status hidden"></div>\n        `,r.appendChild(l),a.appendChild(r),t.appendChild(a),document.body.appendChild(t),this.panel=t,this.toggleButton=e}attachEvents(){this.toggleButton.addEventListener("click",(()=>this.panel.classList.toggle("hidden"))),document.getElementById("assistant-close").addEventListener("click",(()=>this.panel.classList.add("hidden"))),document.querySelectorAll(".assistant-manager-tab").forEach((e=>{e.addEventListener("click",(()=>{document.querySelectorAll(".assistant-manager-tab").forEach((e=>e.classList.remove("active"))),document.querySelectorAll(".assistant-manager-tab-content").forEach((e=>e.classList.remove("active"))),e.classList.add("active"),document.getElementById(`tab-${e.dataset.tab}`).classList.add("active")}))})),document.getElementById("save-api-key").addEventListener("click",(async()=>{const e=document.getElementById("openai-api-key").value.trim();if(e)try{CONFIG.AI.apiKey=e,localStorage.setItem("FB_CHAT_MONITOR_OPENAI_KEY",e);const t=this.openAIInitialized=openAIManager.initialize(e);this.showStatus(t?"success":"error",t?"API Key saved":"Invalid API Key")}catch(e){this.showStatus("error",`Error: ${e.message}`)}else this.showStatus("error","Please enter a valid API Key")})),document.getElementById("save-seller-assistant").addEventListener("click",(()=>this.saveAssistant("seller"))),document.getElementById("save-buyer-assistant").addEventListener("click",(()=>this.saveAssistant("buyer")))}async saveAssistant(e){const t=document.getElementById(`${e}-assistant-name`).value.trim(),n=document.getElementById(`${e}-assistant-instructions`).value.trim(),a=document.getElementById(`${e}-assistant-status`);if(t&&n)if(CONFIG.AI.apiKey){this.showStatus("info","Saving assistant...",a);try{const s=await openAIManager.createOrUpdateAssistant(e,t,n);CONFIG.AI.assistants[e]={id:s,name:t,instructions:n},localStorage.setItem(`FB_CHAT_MONITOR_${e.toUpperCase()}_ASSISTANT_ID`,s),this.showStatus("success",`Assistant "${t}" saved`,a)}catch(e){this.showStatus("error",`Error: ${e.message}`,a)}}else this.showStatus("error","Set API Key first",a);else this.showStatus("error","Complete all fields",a)}showStatus(e,t,n=null){const a=n||document.querySelector(".assistant-manager-status");a&&(a.textContent=t,a.className=`assistant-manager-status ${e}`,a.classList.remove("hidden"),setTimeout((()=>a.classList.add("hidden")),5e3))}};window.assistantManagerUI=assistantManagerUI;const M={isControlPanelVisible:!1,activeTab:"dashboard",floatingButton:null,controlPanel:null,statusIndicator:null,floatingResponseButton:null};function T(){M.floatingButton=function(){const e=document.createElement("div");e.id="fb-chat-monitor-button",e.style.position="fixed",e.style.top="20px",e.style.right="60px",e.style.bottom="auto",e.style.left="auto",e.style.padding="10px 15px",e.style.backgroundColor="#4267B2",e.style.color="white",e.style.borderRadius="5px",e.style.boxShadow="0 2px 5px rgba(0,0,0,0.2)",e.style.cursor="pointer",e.style.zIndex="9999",e.style.display="flex",e.style.alignItems="center",e.style.transition="all 0.3s ease",e.style.fontFamily="Arial, sans-serif";const t=document.createElement("div");t.id="fb-chat-monitor-status-dot",t.style.width="10px",t.style.height="10px",t.style.backgroundColor="#4CAF50",t.style.borderRadius="50%",t.style.marginRight="8px",e.appendChild(t);const n=document.createElement("span");return n.textContent="FB Chat Monitor",e.appendChild(n),e.addEventListener("mouseover",(function(){this.style.backgroundColor="#365899"})),e.addEventListener("mouseout",(function(){this.style.backgroundColor="#4267B2"})),e.addEventListener("click",E),document.body.appendChild(e),M.statusIndicator=t,e}(),function(){const e="\n        .fb-chat-monitor-panel {\n          position: fixed;\n          bottom: 80px;\n          right: 20px;\n          width: 380px;\n          max-width: 90vw;\n          background-color: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 20px rgba(0,0,0,0.2);\n          z-index: 9998;\n          font-family: Arial, sans-serif;\n          display: flex;\n          flex-direction: column;\n          max-height: calc(100vh - 100px);\n          transition: all 0.3s ease;\n          overflow: hidden;\n        }\n\n        .fb-chat-monitor-panel-header {\n          padding: 15px;\n          background-color: #4267B2;\n          color: white;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          border-radius: 8px 8px 0 0;\n        }\n\n        .fb-chat-monitor-panel-header h2 {\n          margin: 0;\n          font-size: 16px;\n          font-weight: 600;\n        }\n\n        .fb-chat-monitor-close {\n          background: none;\n          border: none;\n          color: white;\n          font-size: 20px;\n          cursor: pointer;\n          padding: 0;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 24px;\n          height: 24px;\n        }\n\n        .fb-chat-monitor-panel-tabs {\n          display: flex;\n          border-bottom: 1px solid #ddd;\n          background-color: #f5f5f5;\n        }\n\n        .fb-chat-monitor-tab {\n          padding: 10px 15px;\n          cursor: pointer;\n          position: relative;\n          flex: 1;\n          text-align: center;\n          color: #666;\n          font-size: 14px;\n          transition: all 0.2s ease;\n        }\n\n        .fb-chat-monitor-tab:hover {\n          background-color: rgba(66, 103, 178, 0.05);\n        }\n\n        .fb-chat-monitor-tab.active {\n          color: #4267B2;\n          font-weight: bold;\n        }\n\n        .fb-chat-monitor-tab.active::after {\n          content: '';\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          width: 100%;\n          height: 3px;\n          background-color: #4267B2;\n        }\n\n        .fb-chat-monitor-panel-content {\n          flex: 1;\n          overflow-y: auto;\n          padding: 15px;\n        }\n\n        .fb-chat-monitor-tab-content {\n          display: none;\n          animation: fadeIn 0.3s ease;\n        }\n\n        .fb-chat-monitor-tab-content.active {\n          display: block;\n        }\n\n        .fb-chat-monitor-status-section {\n          display: flex;\n          align-items: center;\n          margin-bottom: 15px;\n          padding-bottom: 10px;\n          border-bottom: 1px solid #eee;\n        }\n\n        .fb-chat-monitor-status-indicator {\n          width: 12px;\n          height: 12px;\n          border-radius: 50%;\n          margin-right: 10px;\n        }\n\n        .fb-chat-monitor-status-text {\n          flex: 1;\n        }\n\n        .fb-chat-monitor-stats-grid {\n          display: grid;\n          grid-template-columns: repeat(2, 1fr);\n          gap: 10px;\n          margin-bottom: 15px;\n        }\n\n        .fb-chat-monitor-stat-item {\n          background-color: #f9f9f9;\n          border-radius: 6px;\n          padding: 10px;\n          text-align: center;\n        }\n\n        .fb-chat-monitor-stat-value {\n          font-size: 18px;\n          font-weight: bold;\n          color: #4267B2;\n          margin-bottom: 5px;\n        }\n\n        .fb-chat-monitor-stat-label {\n          font-size: 12px;\n          color: #666;\n        }\n\n        .fb-chat-monitor-form-group {\n          margin-bottom: 15px;\n        }\n\n        .fb-chat-monitor-form-group label {\n          display: block;\n          font-size: 14px;\n          margin-bottom: 5px;\n          color: #444;\n        }\n\n        .fb-chat-monitor-form-group input,\n        .fb-chat-monitor-form-group select {\n          width: 100%;\n          padding: 8px;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          font-size: 14px;\n        }\n\n        .fb-chat-monitor-radio-group {\n          margin: 10px 0;\n        }\n\n        .fb-chat-monitor-radio-option {\n          display: flex;\n          align-items: center;\n          margin-bottom: 8px;\n        }\n\n        .fb-chat-monitor-radio-option input {\n          margin-right: 8px;\n          width: auto;\n        }\n\n        .fb-chat-monitor-radio-label {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .fb-chat-monitor-radio-label span:first-child {\n          font-weight: 500;\n        }\n\n        .fb-chat-monitor-radio-label span:last-child {\n          font-size: 12px;\n          color: #666;\n        }\n\n        .fb-chat-monitor-button {\n          padding: 8px 12px;\n          background-color: #4267B2;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.2s;\n          margin-right: 8px;\n          margin-bottom: 8px;\n        }\n\n        .fb-chat-monitor-button:hover {\n          background-color: #365899;\n        }\n\n        .fb-chat-monitor-button-secondary {\n          background-color: #eaeaea;\n          color: #333;\n        }\n\n        .fb-chat-monitor-button-secondary:hover {\n          background-color: #d5d5d5;\n        }\n\n        .fb-chat-monitor-button-danger {\n          background-color: #f44336;\n        }\n\n        .fb-chat-monitor-button-danger:hover {\n          background-color: #d32f2f;\n        }\n\n        .fb-chat-monitor-button-success {\n          background-color: #4CAF50;\n        }\n\n        .fb-chat-monitor-button-success:hover {\n          background-color: #388E3C;\n        }\n\n        .fb-chat-monitor-logs-container {\n          border: 1px solid #eee;\n          border-radius: 4px;\n          max-height: 200px;\n          overflow-y: auto;\n          font-size: 12px;\n          font-family: monospace;\n        }\n\n        .fb-chat-monitor-log-entry {\n          padding: 5px 8px;\n          border-bottom: 1px solid #f0f0f0;\n        }\n\n        .fb-chat-monitor-log-entry:last-child {\n          border-bottom: none;\n        }\n\n        .fb-chat-monitor-log-INFO {\n          color: #2196F3;\n        }\n\n        .fb-chat-monitor-log-ERROR {\n          color: #f44336;\n          font-weight: bold;\n        }\n\n        .fb-chat-monitor-log-WARN {\n          color: #ff9800;\n        }\n\n        .fb-chat-monitor-log-time {\n          color: #666;\n          margin-right: 5px;\n        }\n\n        .fb-chat-monitor-history-container {\n          width: 100%;\n          border-collapse: collapse;\n          margin-top: 10px;\n          font-size: 13px;\n        }\n\n        .fb-chat-monitor-history-container th {\n          background-color: #f5f5f5;\n          text-align: left;\n          padding: 8px;\n          border-bottom: 2px solid #ddd;\n        }\n\n        .fb-chat-monitor-history-container td {\n          padding: 8px;\n          border-bottom: 1px solid #eee;\n        }\n\n        .fb-chat-monitor-history-container tr:hover {\n          background-color: #f9f9f9;\n          cursor: pointer;\n        }\n\n        .fb-chat-monitor-badge {\n          display: inline-block;\n          padding: 3px 6px;\n          border-radius: 10px;\n          font-size: 11px;\n          color: white;\n          margin-right: 5px;\n        }\n\n        .fb-chat-monitor-badge-auto {\n          background-color: #4CAF50;\n        }\n\n        .fb-chat-monitor-badge-manual {\n          background-color: #2196F3;\n        }\n\n        .fb-chat-monitor-badge-generate {\n          background-color: #ff9800;\n        }\n\n        .fb-chat-monitor-badge-sent {\n          background-color: #4CAF50;\n        }\n\n        .fb-chat-monitor-badge-notsent {\n          background-color: #f44336;\n        }\n\n        @keyframes fadeIn {\n          from { opacity: 0; }\n          to { opacity: 1; }\n        }\n\n        /* Tooltip styles */\n        .fb-chat-monitor-tooltip {\n          position: relative;\n          display: inline-block;\n        }\n\n        .fb-chat-monitor-tooltip .fb-chat-monitor-tooltiptext {\n          visibility: hidden;\n          width: 200px;\n          background-color: rgba(0, 0, 0, 0.8);\n          color: #fff;\n          text-align: center;\n          border-radius: 6px;\n          padding: 5px;\n          position: absolute;\n          z-index: 1;\n          bottom: 125%;\n          left: 50%;\n          transform: translateX(-50%);\n          opacity: 0;\n          transition: opacity 0.3s;\n          font-size: 12px;\n        }\n\n        .fb-chat-monitor-tooltip:hover .fb-chat-monitor-tooltiptext {\n          visibility: visible;\n          opacity: 1;\n        }\n      ";domUtils.injectStyles(e)}();const e=storageUtils.get("UI_STATE",{});e.activeTab&&(M.activeTab=e.activeTab),logger.debug("UI initialized"),M.floatingResponseButton=function(){const e=document.createElement("button");return e.id="fbChatMonitorQuickResponse",e.classList.add("fb-chat-monitor-floating-button"),e.textContent="✨ Generate Response",e.style.position="fixed",e.style.bottom="20px",e.style.right="20px",e.style.zIndex="9998",e.style.padding="8px 12px",e.style.backgroundColor="#1877f2",e.style.color="white",e.style.border="none",e.style.borderRadius="5px",e.style.fontSize="13px",e.style.cursor="pointer",e.style.fontWeight="bold",e.style.boxShadow="0 2px 4px rgba(0,0,0,0.2)",e.style.display="none",e.addEventListener("mouseenter",(()=>{e.style.backgroundColor="#166fe5"})),e.addEventListener("mouseleave",(()=>{e.style.backgroundColor="#1877f2"})),e.addEventListener("click",(e=>{e.stopPropagation(),window.chatManager&&"function"==typeof window.chatManager.generateResponseForCurrentChat?window.chatManager.generateResponseForCurrentChat():(console.error("chatManager not available or generateResponseForCurrentChat method not found"),s("Error: Could not generate response. Try opening the full panel.","error"))})),e}(),document.body.appendChild(M.floatingResponseButton),setInterval(B,2e3)}function E(){if(M.controlPanel)return M.controlPanel.remove(),M.controlPanel=null,M.isControlPanelVisible=!1,M.isControlPanelMinimized=!1,void B();M.controlPanel=function(){const e=document.createElement("div");e.id="fbChatMonitorPanel",e.className="fb-chat-monitor-panel";const t=document.getElementById("fbChatMonitorButton");if(e.style.position="fixed",e.style.width="390px",e.style.padding="10px",e.style.backgroundColor="#fff",e.style.boxShadow="0 2px 10px rgba(0, 0, 0, 0.2)",e.style.borderRadius="8px",e.style.zIndex="9999",e.style.display="block",t){const n=t.getBoundingClientRect();e.style.top=`${n.bottom+5}px`,e.style.right=window.innerWidth-n.right+"px"}else e.style.top="60px",e.style.right="20px";e.style.height="500px",e.style.overflowY="auto";const n=document.createElement("div");n.className="fb-chat-monitor-panel-header";const a=document.createElement("h2");a.textContent=`FB Chat Monitor v${CONFIG.version||"1.0"}`;const i=document.createElement("button");i.className="fb-chat-monitor-close",i.innerHTML="&times;",i.addEventListener("click",E),n.appendChild(a),n.appendChild(i),e.appendChild(n);const r=document.createElement("div");r.className="fb-chat-monitor-panel-tabs";[{id:"dashboard",label:"Dashboard"},{id:"assistants",label:"Assistants"},{id:"config",label:"Settings"},{id:"logs",label:"Logs"},{id:"history",label:"History"}].forEach((e=>{const t=document.createElement("div");t.className="fb-chat-monitor-tab "+(M.activeTab===e.id?"active":""),t.setAttribute("data-tab",e.id),t.textContent=e.label,t.addEventListener("click",(()=>{document.querySelectorAll(".fb-chat-monitor-tab").forEach((e=>{e.classList.remove("active")})),t.classList.add("active"),_(e.id),M.activeTab=e.id,storageUtils.set("UI_STATE",{activeTab:e.id})})),r.appendChild(t)})),e.appendChild(r);const o=document.createElement("div");o.className="fb-chat-monitor-panel-content";const l=document.createElement("div");l.className="fb-chat-monitor-tab-content",l.id="fb-chat-monitor-tab-dashboard",l.innerHTML='\n        <div class="fb-chat-monitor-form-group"\n             style="display:flex; justify-content:center; align-items:center; gap:8px; text-align:center;">\n          <label for="fb-chat-monitor-mode-toggle" style="margin:0;">\n            Auto Mode (Automatically send responses)\n          </label>\n          <select id="fb-chat-monitor-mode-toggle"\n                  style="width:auto; padding:4px 8px; text-align:center;\n                         background-color:#dc3545; color:white; border:none; border-radius:4px;">\n            <option value="on">ON</option>\n            <option value="off" selected>OFF</option>\n          </select>\n        </div>\n\n        <div class="fb-chat-monitor-stats-grid">\n          <div class="fb-chat-monitor-stat-item">\n            <div id="fb-chat-monitor-stat-processed" class="fb-chat-monitor-stat-value">0</div>\n            <div class="fb-chat-monitor-stat-label">Chats Processed</div>\n          </div>\n          <div class="fb-chat-monitor-stat-item">\n            <div id="fb-chat-monitor-stat-responses" class="fb-chat-monitor-stat-value">0</div>\n            <div class="fb-chat-monitor-stat-label">Responses Sent</div>\n          </div>\n          <div class="fb-chat-monitor-stat-item">\n            <div id="fb-chat-monitor-stat-uptime" class="fb-chat-monitor-stat-value">0m</div>\n            <div class="fb-chat-monitor-stat-label">Uptime</div>\n          </div>\n          <div class="fb-chat-monitor-stat-item">\n            <div id="fb-chat-monitor-stat-errors" class="fb-chat-monitor-stat-value">0</div>\n            <div class="fb-chat-monitor-stat-label">Errors</div>\n          </div>\n        </div>\n\n        <div class="fb-chat-monitor-form-group" style="text-align:center;">\n          <button\n            id="fb-chat-monitor-generate-response"\n            class="fb-chat-monitor-button"\n            disabled\n          >\n            Generate Response\n          </button>\n        </div>\n      ',o.appendChild(l);const c=document.createElement("div");c.className="fb-chat-monitor-tab-content",c.id="fb-chat-monitor-tab-assistants",c.innerHTML=`\n        <div class="fb-chat-monitor-form-group">\n          <label for="fb-chat-monitor-openai-key">OpenAI API Key</label>\n          <input type="password" id="fb-chat-monitor-openai-key" placeholder="sk-..." value="${CONFIG.AI.apiKey||""}">\n          <button id="fb-chat-monitor-save-api-key" class="fb-chat-monitor-button" style="margin-top: 8px;">Save API Key</button>\n        </div>\n\n        <div class="fb-chat-monitor-form-group">\n          <h4 style="margin-top: 20px; margin-bottom: 10px;">Seller Assistant</h4>\n          <div id="fb-chat-monitor-seller-assistant-container">\n            <label for="fb-chat-monitor-seller-assistant">Select Seller Assistant</label>\n            <select id="fb-chat-monitor-seller-assistant">\n              <option value="">Loading assistants...</option>\n            </select>\n            <small style="display:block; margin-top:5px; color:#666;">Used when you're selling an item</small>\n          </div>\n        </div>\n\n        <div class="fb-chat-monitor-form-group">\n          <h4 style="margin-top: 20px; margin-bottom: 10px;">Buyer Assistant</h4>\n          <div id="fb-chat-monitor-buyer-assistant-container">\n            <label for="fb-chat-monitor-buyer-assistant">Select Buyer Assistant</label>\n            <select id="fb-chat-monitor-buyer-assistant">\n              <option value="">Loading assistants...</option>\n            </select>\n            <small style="display:block; margin-top:5px; color:#666;">Used when you're buying an item</small>\n          </div>\n        </div>\n\n        <div>\n          <button id="fb-chat-monitor-refresh-assistants" class="fb-chat-monitor-button">Refresh Assistants</button>\n        </div>\n      `,o.appendChild(c);const d=document.createElement("div");d.className="fb-chat-monitor-tab-content",d.id="fb-chat-monitor-tab-config",d.innerHTML=`\n        <div class="fb-chat-monitor-form-group">\n          <h4 style="margin-top: 0; margin-bottom: 10px;">Monitoring Settings</h4>\n\n          <label for="fb-chat-monitor-scan-interval">Scan interval (seconds)</label>\n          <input type="number" id="fb-chat-monitor-scan-interval" min="5" max="300" value="${Math.floor((CONFIG.scanInterval||3e4)/1e3)}">\n          <small style="display:block; margin-top:5px; color:#666;">How often to check for new messages</small>\n        </div>\n\n        <div class="fb-chat-monitor-form-group">\n          <h4 style="margin-top: 20px; margin-bottom: 10px;">Human Simulation</h4>\n\n          <label for="fb-chat-monitor-typing-speed">Typing speed (characters per second)</label>\n          <input type="number" id="fb-chat-monitor-typing-speed" min="1" max="20" value="${CONFIG.AI?.humanSimulation?.baseTypingSpeed||5}">\n          <small style="display:block; margin-top:5px; color:#666;">Higher values = faster typing</small>\n        </div>\n\n        <div>\n          <button id="fb-chat-monitor-save-config" class="fb-chat-monitor-button">Save Settings</button>\n          <button id="fb-chat-monitor-reset-config" class="fb-chat-monitor-button fb-chat-monitor-button-danger">Reset to Defaults</button>\n        </div>\n      `,o.appendChild(d);const u=document.createElement("div");u.className="fb-chat-monitor-tab-content",u.id="fb-chat-monitor-tab-logs",u.innerHTML='\n        <div class="fb-chat-monitor-form-group" style="display:flex; justify-content:space-between; align-items:center;">\n          <div>\n            <label for="fb-chat-monitor-log-level">Log Level</label>\n            <select id="fb-chat-monitor-log-level">\n              <option value="all">All Logs</option>\n              <option value="error">Errors Only</option>\n              <option value="warn">Warnings & Errors</option>\n              <option value="info">Info & Above</option>\n            </select>\n          </div>\n          <div>\n            <button id="fb-chat-monitor-refresh-logs" class="fb-chat-monitor-button fb-chat-monitor-button-secondary">Refresh</button>\n            <button id="fb-chat-monitor-clear-logs" class="fb-chat-monitor-button fb-chat-monitor-button-danger">Clear Logs</button>\n          </div>\n        </div>\n\n        <div class="fb-chat-monitor-logs-container" id="fb-chat-monitor-logs-list">\n          <div class="fb-chat-monitor-log-entry">\n            <span class="fb-chat-monitor-log-time">Loading logs...</span>\n          </div>\n        </div>\n\n        <div style="margin-top: 15px;">\n          <button id="fb-chat-monitor-export-logs" class="fb-chat-monitor-button">Export Logs</button>\n        </div>\n      ',o.appendChild(u);const g=document.createElement("div");return g.className="fb-chat-monitor-tab-content",g.id="fb-chat-monitor-tab-history",g.innerHTML='\n        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">\n          <h4 style="margin: 0;">Conversation History</h4>\n          <div>\n            <button id="fb-chat-monitor-refresh-history" class="fb-chat-monitor-button fb-chat-monitor-button-secondary">Refresh</button>\n            <button id="fb-chat-monitor-clear-history" class="fb-chat-monitor-button fb-chat-monitor-button-danger">Clear</button>\n          </div>\n        </div>\n\n        <div id="fb-chat-monitor-history-container" style="max-height: 300px; overflow-y: auto;">\n          <table class="fb-chat-monitor-history-container">\n            <thead>\n              <tr>\n                <th>Time</th>\n                <th>Mode</th>\n                <th>Content</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody id="fb-chat-monitor-history-list">\n              <tr>\n                <td colspan="4" style="text-align: center;">Loading history...</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div style="margin-top: 15px;">\n          <button id="fb-chat-monitor-export-history" class="fb-chat-monitor-button">Export History</button>\n        </div>\n      ',o.appendChild(g),e.appendChild(o),document.body.appendChild(e),function(){const e=[{value:"on",text:"ON",color:"#28a745"},{value:"off",text:"OFF",color:"#dc3545"}],t=document.getElementById("fb-chat-monitor-mode-toggle").parentNode,n="auto"===CONFIG.operationMode?"on":"off",a=document.createElement("div");a.className="fb-chat-monitor-custom-dropdown",a.style.position="relative",a.style.display="inline-block",a.style.minWidth="60px";const i=document.createElement("div");i.className="fb-chat-monitor-dropdown-button",i.setAttribute("tabindex","0"),i.style.padding="4px 8px",i.style.borderRadius="4px",i.style.cursor="pointer",i.style.userSelect="none",i.style.textAlign="center",i.style.fontWeight="bold",i.style.display="flex",i.style.alignItems="center",i.style.justifyContent="center",i.style.gap="6px",i.style.transition="background-color 0.2s ease-in-out",i.title="Click to toggle Auto Mode";const r=document.createElement("span");r.innerHTML="▼",r.style.fontSize="10px",r.style.marginLeft="2px",r.style.position="relative",r.style.top="1px";const o=document.createElement("div");o.className="fb-chat-monitor-dropdown-content",o.style.display="none",o.style.position="absolute",o.style.zIndex="10000",o.style.left="0",o.style.right="0",o.style.marginTop="2px",o.style.borderRadius="4px",o.style.overflow="hidden",o.style.boxShadow="0 2px 5px rgba(0,0,0,0.2)",a.appendChild(i),a.appendChild(o);const l=document.getElementById("fb-chat-monitor-mode-toggle");function c(t){const n=e.find((e=>e.value===t));if(!n)return;i.innerHTML="";const a=document.createElement("span");a.textContent=n.text,i.appendChild(a),i.appendChild(r.cloneNode(!0)),i.style.backgroundColor=n.color,i.style.color="white",i.onmouseover=function(){this.style.backgroundColor=d(n.color,-15)},i.onmouseout=function(){this.style.backgroundColor=n.color},i.dataset.value=t,u()}function d(e,t){let n=parseInt(e.substring(1,3),16),a=parseInt(e.substring(3,5),16),s=parseInt(e.substring(5,7),16);return n=Math.max(0,Math.min(255,n+t)),a=Math.max(0,Math.min(255,a+t)),s=Math.max(0,Math.min(255,s+t)),"#"+((1<<24)+(n<<16)+(a<<8)+s).toString(16).slice(1)}function u(){o.innerHTML="";const t=i.dataset.value,n=e.find((e=>e.value!==t));if(!n)return;const a=document.createElement("div");a.className="fb-chat-monitor-dropdown-item",a.textContent=n.text,a.dataset.value=n.value,a.style.padding="4px 8px",a.style.cursor="pointer",a.style.backgroundColor=n.color,a.style.color="white",a.style.textAlign="center",a.style.fontWeight="bold",a.style.transition="background-color 0.2s ease-in-out",a.onmouseover=function(){this.style.backgroundColor=d(n.color,-15)},a.onmouseout=function(){this.style.backgroundColor=n.color},a.addEventListener("click",(function(e){e.stopPropagation(),o.style.display="none";const t=this.dataset.value;c(t),g(t)})),o.appendChild(a)}function g(e){const t=document.getElementById("fb-chat-monitor-generate-response");"on"===e?(window.FBChatMonitor?(window.FBChatMonitor.changeOperationMode("auto"),window.FBChatMonitor.toggleMonitoring(!0)):logger.error("FBChatMonitor no disponible"),t&&t.setAttribute("disabled","")):(window.FBChatMonitor?(window.FBChatMonitor.changeOperationMode("manual"),window.FBChatMonitor.toggleMonitoring(!1)):logger.error("FBChatMonitor no disponible"),t&&t.removeAttribute("disabled"))}t.replaceChild(a,l),i.addEventListener("click",(function(e){e.stopPropagation();const t="block"===o.style.display;o.style.display=t?"none":"block",t||u()})),document.addEventListener("click",(function(){o.style.display="none"})),c(n),g(n),document.getElementById("fb-chat-monitor-generate-response").addEventListener("click",(async()=>{try{await chatManager.generateResponseForCurrentChat()||logger.debug("Failed to generate response via UI button")}catch(e){s(`Error generating response: ${e.message}`,"error")}})),document.getElementById("fb-chat-monitor-save-api-key").addEventListener("click",(async()=>{const e=document.getElementById("fb-chat-monitor-openai-key").value.trim();if(e)try{const t=document.getElementById("fb-chat-monitor-save-api-key");t.textContent="Validating...",t.disabled=!0;await openAIManager.setApiKey(e)?(s("API Key validated and saved successfully","success"),$()):s("Invalid API Key","error")}catch(e){s(`Error: ${e.message}`,"error")}finally{const e=document.getElementById("fb-chat-monitor-save-api-key");e.textContent="Save API Key",e.disabled=!1}else s("Please enter a valid API Key","error")})),document.getElementById("fb-chat-monitor-refresh-assistants").addEventListener("click",$),document.getElementById("fb-chat-monitor-save-config").addEventListener("click",k),document.getElementById("fb-chat-monitor-reset-config").addEventListener("click",O),document.getElementById("fb-chat-monitor-refresh-logs").addEventListener("click",N),document.getElementById("fb-chat-monitor-clear-logs").addEventListener("click",R),document.getElementById("fb-chat-monitor-export-logs").addEventListener("click",P),document.getElementById("fb-chat-monitor-log-level").addEventListener("change",N),document.getElementById("fb-chat-monitor-refresh-history").addEventListener("click",F),document.getElementById("fb-chat-monitor-clear-history").addEventListener("click",D),document.getElementById("fb-chat-monitor-export-history").addEventListener("click",L)}(),e}(),M.isControlPanelVisible=!0,M.floatingResponseButton&&(M.floatingResponseButton.style.display="none"),document.body.appendChild(M.controlPanel);const e=M.controlPanel.getBoundingClientRect();e.bottom>window.innerHeight&&(M.controlPanel.style.top=window.innerHeight-e.height-10+"px"),e.right>window.innerWidth&&(M.controlPanel.style.right="10px"),S();const t=setInterval((()=>{M.isControlPanelVisible?S():clearInterval(t)}),3e3);_(M.activeTab)}function _(e){document.querySelectorAll(".fb-chat-monitor-tab-content").forEach((e=>{e.classList.remove("active")}));const t=document.getElementById(`fb-chat-monitor-tab-${e}`);t&&(t.classList.add("active"),"logs"===e?N():"history"===e&&F())}function S(){try{const e=window.FBChatMonitor&&"function"==typeof window.FBChatMonitor.getMonitoringStats?window.FBChatMonitor.getMonitoringStats():{chatsProcessed:0,responsesSent:0,errors:0,uptime:0,isMonitoring:!1,nextScanIn:null};document.getElementById("fb-chat-monitor-stat-processed").textContent=e.chatsProcessed||0,document.getElementById("fb-chat-monitor-stat-responses").textContent=e.responsesSent||0,document.getElementById("fb-chat-monitor-stat-errors").textContent=e.errors||0;let t="Inactive";if(e.uptime>0){const n=Math.floor(e.uptime/1e3/60),a=Math.floor(n/60);t=a>0?`${a}h ${n%60}m`:`${n}m`}document.getElementById("fb-chat-monitor-stat-uptime").textContent=t,M.statusIndicator&&(M.statusIndicator.style.backgroundColor=e.isMonitoring?"#4CAF50":"#f44336")}catch(e){logger.error("Error updating stats",{},e)}}async function $(){try{const e=document.getElementById("fb-chat-monitor-seller-assistant"),t=document.getElementById("fb-chat-monitor-buyer-assistant");e&&(e.innerHTML='<option value="">Loading assistants...</option>'),t&&(t.innerHTML='<option value="">Loading assistants...</option>');const n=await openAIManager.listAssistants();if(!n||0===n.length)return e&&(e.innerHTML='<option value="">No assistants found</option>'),void(t&&(t.innerHTML='<option value="">No assistants found</option>'));const a=(e,t)=>{e&&(e.innerHTML='<option value="">Select an assistant</option>',n.forEach((n=>{const a=document.createElement("option");a.value=n.id,a.textContent=n.name,n.id===t&&(a.selected=!0),e.appendChild(a)})),e.addEventListener("change",(function(){const e="fb-chat-monitor-seller-assistant"===this.id?"seller":"buyer";openAIManager.setAssistantForRole(e,this.value),s(`${e.charAt(0).toUpperCase()+e.slice(1)} assistant updated`,"success")})))};a(e,CONFIG.AI?.assistants?.seller?.id),a(t,CONFIG.AI?.assistants?.buyer?.id)}catch(e){logger.error("Error refreshing assistants",{},e),s(`Error loading assistants: ${e.message}`,"error");const t=document.getElementById("fb-chat-monitor-seller-assistant"),n=document.getElementById("fb-chat-monitor-buyer-assistant");t&&(t.innerHTML='<option value="">Error loading assistants</option>'),n&&(n.innerHTML='<option value="">Error loading assistants</option>')}}function k(){if("function"==typeof GM_setValue)try{GM_setValue("CONFIG_operationMode",window.CONFIG.operationMode||"manual"),GM_setValue("CONFIG_autoSendMessages",window.CONFIG.autoSendMessages||!1),window.CONFIG.AI&&window.CONFIG.AI.apiKey&&GM_setValue("CONFIG_AI_apiKey",window.CONFIG.AI.apiKey),logger.log("Configuration saved to persistent storage")}catch(e){logger.error(`Error saving configuration: ${e.message}`)}else logger.warn("GM_setValue not available. Cannot save persistent configuration.")}function O(){confirm("Are you sure you want to reset all settings to default values?")&&(storageUtils.remove("CONFIG"),s("Settings reset to defaults. Reloading...","info"),setTimeout((()=>window.location.reload()),2e3))}function N(){try{const e=document.getElementById("fb-chat-monitor-logs-list"),t=document.getElementById("fb-chat-monitor-log-level").value,n=logger.getAllLogs();if(0===n.length)return void(e.innerHTML='<div class="fb-chat-monitor-log-entry">No logs recorded</div>');let a=n;"error"===t?a=n.filter((e=>"ERROR"===e.type)):"warn"===t?a=n.filter((e=>"ERROR"===e.type||"WARN"===e.type)):"info"===t&&(a=n.filter((e=>"ERROR"===e.type||"WARN"===e.type||"INFO"===e.type))),e.innerHTML="",a.slice(0,100).forEach((t=>{const n=document.createElement("div");n.className=`fb-chat-monitor-log-entry fb-chat-monitor-log-${t.type}`;const a=`${new Date(t.timestamp).toLocaleTimeString()}`;n.innerHTML=`\n            <span class="fb-chat-monitor-log-time">${a}</span>\n            <span class="fb-chat-monitor-log-message">${t.message}</span>\n          `,e.appendChild(n)})),e.scrollTop=e.scrollHeight}catch(e){console.error("Error refreshing logs",e)}}function R(){confirm("Are you sure you want to clear all logs?")&&(logger.clearLogs(),N(),s("Logs cleared","success"))}function P(){try{const e=logger.getAllLogs(),t={timestamp:(new Date).toISOString(),version:CONFIG.version||"1.0",logs:e},n=JSON.stringify(t,null,2),a=new Blob([n],{type:"application/json"}),i=URL.createObjectURL(a),r=document.createElement("a");r.href=i,r.download=`fb-chat-monitor-logs-${(new Date).toISOString().slice(0,10)}.json`,document.body.appendChild(r),r.click(),document.body.removeChild(r),s("Logs exported successfully","success")}catch(e){logger.error("Error exporting logs",{},e),s(`Error exporting logs: ${e.message}`,"error")}}function F(){try{const e=document.getElementById("fb-chat-monitor-history-list"),t=f();if(!t||0===t.length)return void(e.innerHTML='<tr><td colspan="4" style="text-align: center;">No conversation history</td></tr>');e.innerHTML="",t.slice(0,50).forEach((t=>{const a=document.createElement("tr");a.addEventListener("click",(()=>function(e){const t=document.createElement("div");t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.height="100%",t.style.backgroundColor="rgba(0, 0, 0, 0.5)",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center",t.style.zIndex="10000";const a=document.createElement("div");a.style.backgroundColor="white",a.style.borderRadius="8px",a.style.padding="20px",a.style.width="600px",a.style.maxWidth="90%",a.style.maxHeight="80%",a.style.overflowY="auto",a.style.position="relative";const s=document.createElement("button");s.innerHTML="&times;",s.style.position="absolute",s.style.top="10px",s.style.right="10px",s.style.background="none",s.style.border="none",s.style.fontSize="24px",s.style.cursor="pointer",s.addEventListener("click",(()=>document.body.removeChild(t))),a.appendChild(s);const i=document.createElement("h2");i.textContent="Conversation Details",i.style.marginTop="0",i.style.marginBottom="20px",a.appendChild(i);const r=document.createElement("div"),o=new Date(e.timestamp);if(r.innerHTML=`\n        <p><strong>Time:</strong> ${n.formatDate(o)}</p>\n        <p><strong>Mode:</strong> ${e.mode}</p>\n        <p><strong>Status:</strong> ${e.sent?"Sent":"Not sent"}</p>\n      `,e.context){const t=document.createElement("div");if(t.style.marginTop="15px",t.style.marginBottom="15px",t.innerHTML='<h3 style="margin-top:0;">Context</h3>',e.context.role&&(t.innerHTML+=`<p><strong>Role:</strong> ${e.context.role}</p>`),e.context.productDetails){const n=e.context.productDetails;t.innerHTML+=`\n            <div style="margin-top: 10px; margin-bottom: 15px;">\n              <h4 style="margin-top: 0; margin-bottom: 5px;">Product Details</h4>\n              <p style="margin: 2px 0;"><strong>Title:</strong> ${n.title||"N/A"}</p>\n              <p style="margin: 2px 0;"><strong>Price:</strong> ${n.price||"N/A"}</p>\n              ${n.id?`<p style="margin: 2px 0;"><strong>ID:</strong> ${n.id}</p>`:""}\n            </div>\n          `}e.context.lastMessage&&(t.innerHTML+=`\n            <div style="margin-top: 10px;">\n              <h4 style="margin-top: 0; margin-bottom: 5px;">Last Message</h4>\n              <div style="background-color: #f5f5f5; padding: 10px; border-radius: 4px; white-space: pre-wrap;">${e.context.lastMessage}</div>\n            </div>\n          `),r.appendChild(t)}if(e.response){const t=document.createElement("div");t.style.marginTop="15px",t.innerHTML=`\n          <h3 style="margin-top: 0;">Response</h3>\n          <div style="background-color: #e9f5ff; padding: 10px; border-radius: 4px; white-space: pre-wrap; margin-bottom: 15px; border: 1px solid #2196F3;">${e.response}</div>\n          <button id="copy-response-btn" style="padding: 5px 10px; background-color: #2196F3; color: white; border: none; border-radius: 4px; cursor: pointer;">Copy Response</button>\n        `,r.appendChild(t)}a.appendChild(r),t.appendChild(a),document.body.appendChild(t);const l=document.getElementById("copy-response-btn");l&&e.response&&l.addEventListener("click",(()=>{navigator.clipboard.writeText(e.response),l.textContent="Copied!",setTimeout((()=>l.textContent="Copy Response"),2e3)}))}(t)));const s=document.createElement("td"),i=new Date(t.timestamp);s.textContent=n.formatDate(i).split(",")[1].trim();const r=document.createElement("td"),o=document.createElement("span");o.textContent=t.mode,o.className=`fb-chat-monitor-badge fb-chat-monitor-badge-${t.mode}`,r.appendChild(o);const l=document.createElement("td"),c=t.context?.lastMessage||"No content";l.textContent="string"==typeof c?c.substring(0,30)+(c.length>30?"...":""):"Complex content";const d=document.createElement("td"),u=document.createElement("span");u.textContent=t.sent?"Sent":"Not sent",u.className="fb-chat-monitor-badge fb-chat-monitor-badge-"+(t.sent?"sent":"notsent"),d.appendChild(u),a.appendChild(s),a.appendChild(r),a.appendChild(l),a.appendChild(d),e.appendChild(a)}))}catch(e){logger.error("Error refreshing history",{},e);document.getElementById("fb-chat-monitor-history-list").innerHTML='<tr><td colspan="4" style="text-align: center;">Error loading history</td></tr>'}}function D(){confirm("Are you sure you want to clear all conversation history?")&&(storageUtils.remove("RESPONSE_LOGS"),F(),s("Conversation history cleared","success"))}function L(){try{const e=f(),t={timestamp:(new Date).toISOString(),version:CONFIG.version||"1.0",conversations:e},n=JSON.stringify(t,null,2),a=new Blob([n],{type:"application/json"}),i=URL.createObjectURL(a),r=document.createElement("a");r.href=i,r.download=`fb-chat-monitor-history-${(new Date).toISOString().slice(0,10)}.json`,document.body.appendChild(r),r.click(),document.body.removeChild(r),s("History exported successfully","success")}catch(e){logger.error("Error exporting history",{},e),s(`Error exporting history: ${e.message}`,"error")}}function f(){return storageUtils.get("RESPONSE_LOGS",[])}function U(e){try{const t=document.getElementById("fb-chat-auto-btn"),n=document.getElementById("fb-chat-manual-btn");return t&&n?(t.classList.remove("active","inactive"),n.classList.remove("active","inactive"),"auto"===e?(t.classList.add("active"),n.classList.add("inactive"),logger.debug("UI updated: AUTO mode activated")):(t.classList.add("inactive"),n.classList.add("active"),logger.debug("UI updated: MANUAL mode activated")),document.dispatchEvent(new CustomEvent("configUpdated",{detail:{operationMode:e}})),!0):(logger.debug("Mode buttons not found to update UI"),!1)}catch(e){return logger.error(`Error updating mode UI: ${e.message}`),!1}}function B(){if(!M.floatingResponseButton)return;if(window.CONFIG&&"manual"===window.CONFIG.operationMode&&!M.isControlPanelVisible&&window.chatManager&&window.chatManager.currentChatId){const e=document.querySelector(CONFIG.selectors.activeChat.messageInput),t=domUtils.findElement(CONFIG.selectors.activeChat.sendButton);if(e||t){const n=(e||t).getBoundingClientRect();M.floatingResponseButton.style.bottom=window.innerHeight-n.top+10+"px",M.floatingResponseButton.style.right="20px"}M.floatingResponseButton.style.display="block"}else M.floatingResponseButton.style.display="none"}function s(e,t="info",n=3e3){const a=document.createElement("div");a.className="fb-chat-monitor-alert";const s=function(){const e=document.getElementById("fbChatMonitorPanel"),t=document.getElementById("fbChatMonitorButton"),n={top:"60px",right:"20px",left:"auto"};if(e&&M.isControlPanelVisible){const t=e.getBoundingClientRect();return{top:`${t.bottom+10}px`,right:window.innerWidth-t.right+"px",left:"auto"}}if(t){const e=t.getBoundingClientRect();return{top:`${e.bottom+10}px`,right:window.innerWidth-e.right+"px",left:"auto"}}return n}();switch(a.style.position="fixed",a.style.zIndex="10000",a.style.padding="10px 15px",a.style.borderRadius="6px",a.style.boxShadow="0 3px 10px rgba(0,0,0,0.2)",a.style.fontSize="14px",a.style.transition="opacity 0.3s ease-in-out, transform 0.3s ease-in-out",a.style.opacity="0",a.style.transform="translateY(20px)",a.style.pointerEvents="none",a.style.left=s.left,a.style.top=s.top,a.style.right=s.right,a.style.maxWidth="300px",t){case"success":a.style.backgroundColor="#4CAF50",a.style.color="white";break;case"error":a.style.backgroundColor="#F44336",a.style.color="white";break;case"warning":a.style.backgroundColor="#FF9800",a.style.color="white";break;default:a.style.backgroundColor="#2196F3",a.style.color="white"}a.textContent=e,document.body.appendChild(a),setTimeout((()=>{a.style.opacity="1",a.style.transform="translateY(0)"}),50),setTimeout((()=>{a.style.opacity="0",a.style.transform="translateY(-20px)",setTimeout((()=>{a.parentElement&&a.parentElement.removeChild(a)}),300)}),n)}window.initializeUI=T,window.toggleControlPanel=E,window.updateMonitoringStatus=function(e){M.statusIndicator&&(M.statusIndicator.style.backgroundColor=e?"#4CAF50":"#f44336"),M.isControlPanelVisible&&S()},window.ui={updateModeUI:U,handleModeClick:function(e){try{if("auto"!==e&&"manual"!==e)return logger.error(`Invalid mode: ${e}`),!1;if(!window.CONFIG.updateOperationMode(e))return logger.error(`Could not update mode to ${e}`),!1;U(e);return s(`Mode ${"auto"===e?"automatic":"manual"} activated`,"success"),!0}catch(e){return logger.error(`Error changing mode: ${e.message}`),!1}}};const H={isMonitoring:!1,monitorInterval:null,errorCount:0,scansSinceLastSuccess:0,startTime:null,stats:{chatsProcessed:0,messagesProcessed:0,responsesSent:0,errors:0},lastScanTime:null,baseInterval:CONFIG.scanInterval||3e4};async function initialize(){logger.log("Initializing FB-Chat-Monitor",{version:CONFIG.version});try{const t=storageUtils.get("OPENAI_KEY",null);if(t&&(CONFIG.AI.apiKey=t,logger.log("Loaded OpenAI API Key from storageUtils")),a.redirectToMarketplace())return void logger.log("Redirecting to Marketplace messenger, please wait...");assistantManagerUI.initialize(),logger.debug("UI components initialized");openAIManager.initialize(CONFIG.AI.apiKey,CONFIG.AI.model)?logger.log("OpenAI Manager initialized successfully"):logger.warn("OpenAI Manager initialized but no valid API key is set"),function(){const e=storageUtils.get("FB_CHAT_MONITOR_OPENAI_KEY",null);if(e)CONFIG.AI.apiKey=e,logger.debug("OpenAI API Key loaded from storageUtils");else{const e=localStorage.getItem("FB_CHAT_MONITOR_OPENAI_KEY");e&&(CONFIG.AI.apiKey=e,storageUtils.set("FB_CHAT_MONITOR_OPENAI_KEY",e),logger.debug("OpenAI API Key migrated from localStorage to storageUtils"))}CONFIG.operationMode=storageUtils.get("OPERATION_MODE",CONFIG.defaultOperationMode),CONFIG.AI.assistants||(CONFIG.AI.assistants={seller:{},buyer:{}});CONFIG.AI.assistants.seller.id=storageUtils.get("FB_CHAT_MONITOR_SELLER_ASSISTANT_ID",""),CONFIG.AI.assistants.buyer.id=storageUtils.get("FB_CHAT_MONITOR_BUYER_ASSISTANT_ID",""),logger.debug("Saved settings loaded",{operationMode:CONFIG.operationMode,hasApiKey:!!CONFIG.AI.apiKey,sellerAssistant:!!CONFIG.AI.assistants.seller.id,buyerAssistant:!!CONFIG.AI.assistants.buyer.id})}(),e.onActivityChange((e=>{H.isMonitoring&&z(),logger.debug("User activity changed",{isActive:e})}));return storageUtils.get("MONITORING_ACTIVE",!1)&&(logger.log("Restoring previous monitoring state"),K(!0)),s("FB-Chat-Monitor initialized successfully","success"),logger.log("Initialization complete",{status:"success"}),!0}catch(e){return logger.error("Error during initialization",{},e),s("Error initializing FB-Chat-Monitor: "+e.message,"error"),!1}}function z(){let t=H.baseInterval;return e.isActive||(t*=1.5),H.errorCount>0&&(t=Math.min(t*Math.pow(1.5,H.errorCount),CONFIG.maxScanInterval||3e5)),H.isMonitoring&&H.monitorInterval&&(clearTimeout(H.monitorInterval),H.monitorInterval=setTimeout(G,t),logger.debug("Scan interval updated",{interval:t,userActive:e.isActive,errorCount:H.errorCount})),t}function K(e){return H.isMonitoring=e,e?(H.startTime=Date.now(),H.monitorInterval=setTimeout(G,1e3),storageUtils.set("MONITORING_ACTIVE",!0),logger.log("Chat monitoring started")):(H.monitorInterval&&(clearTimeout(H.monitorInterval),H.monitorInterval=null),storageUtils.set("MONITORING_ACTIVE",!1),logger.log("Chat monitoring stopped")),e?s("Chat monitoring started","success"):s("Chat monitoring stopped","info"),e}async function G(){if(H.isMonitoring){H.lastScanTime=Date.now(),logger.debug("Starting chat scan");try{if(!a.isMarketplaceMessenger())return logger.warn("Not on marketplace messenger page, skipping scan"),void q();const e=await t.withExponentialBackoff((()=>chatManager.scanForUnreadChats()),{maxRetries:2,baseDelay:1e3});if(e>0){logger.log(`Found ${e} unread chats`);await chatManager.openNextPendingChat()?(logger.log("Chat opened and processed successfully"),H.stats.chatsProcessed++,H.errorCount=0,H.scansSinceLastSuccess=0):(logger.error("Could not open the chat"),j())}else logger.debug("No unread chats found"),H.scansSinceLastSuccess++}catch(e){logger.error("Error during chat monitoring",{errorCount:H.errorCount,scansSinceLastSuccess:H.scansSinceLastSuccess},e),j()}q()}}function q(){if(!H.isMonitoring)return;H.monitorInterval&&clearTimeout(H.monitorInterval);const e=z();H.monitorInterval=setTimeout(G,e),logger.debug(`Next scan scheduled in ${e}ms`)}function j(){H.errorCount++,H.stats.errors++,H.scansSinceLastSuccess++,H.scansSinceLastSuccess>=CONFIG.maxConsecutiveFailures&&(logger.warn(`Too many consecutive failures (${H.scansSinceLastSuccess}), pausing monitoring`),s("Monitoring paused due to consecutive failures. Check console for details.","warning",{buttons:[{text:"Resume",action:()=>{H.errorCount=0,H.scansSinceLastSuccess=0,q()}}]}),H.errorCount=Math.min(H.errorCount,5))}function V(){const e=Date.now();return{...H.stats,isMonitoring:H.isMonitoring,uptime:H.startTime?e-H.startTime:0,lastScan:H.lastScanTime?e-H.lastScanTime:null,nextScanIn:H.monitorInterval?H.lastScanTime+z()-e:null,errorRate:H.stats.chatsProcessed>0?(H.stats.errors/H.stats.chatsProcessed).toFixed(2):0}}function initialize(){if(window.initializationInProgress)return;window.initializationInProgress=!0,logger.log("Initializing FB Chat Monitor"),T();const e=localStorage.getItem("FB_CHAT_MONITOR_OPENAI_KEY");if(e&&(CONFIG.AI.apiKey=e,CONFIG.AI.enabled=!0,logger.log("API Key loaded from localStorage in init")),CONFIG.operationMode=localStorage.getItem("FB_CHAT_MONITOR_OPERATION_MODE")||CONFIG.defaultOperationMode,CONFIG.AI.apiKey)if(CONFIG.AI.enabled=!0,logger.log("API key loaded from localStorage"),window.openAIManager){const e=openAIManager.initialize(CONFIG.AI.apiKey,CONFIG.AI.model);logger.log(`OpenAI Manager auto-initialized: ${e}`)}else logger.error("openAIManager not available for auto-initialization.");window.openaiManager?logger.log("OpenAI Manager is available to generate responses"):logger.warn("OpenAI Manager is not available. Some functions may not be operational."),window.assistantManager&&logger.log("Assistant Manager is available to generate responses");try{window.location.href.includes("/marketplace/")?(logger.log("We are in Marketplace, starting monitoring..."),setTimeout((()=>{window.FBChatMonitor&&"function"==typeof window.FBChatMonitor.manualScan?window.FBChatMonitor.manualScan():logger.warn("FBChatMonitor.manualScan not available yet")}),2500)):(logger.log("We are not in Marketplace, trying redirection..."),window.pageUtils&&window.pageUtils.redirectToMarketplace?window.pageUtils.redirectToMarketplace():logger.error("pageUtils.redirectToMarketplace not available"))}catch(e){logger.error(`Error in initialization: ${e.message}`)}finally{window.initializationInProgress=!1}}window.FBChatMonitor={initialize:initialize,toggleMonitoring:K,manualScan:async function(){logger.log("Manual chat scan triggered");const e=H.isMonitoring;e&&clearTimeout(H.monitorInterval);try{await G()}catch(e){logger.error("Error during manual scan",{},e),s("Error during manual scan: "+e.message,"error")}finally{e&&q()}},getMonitoringStats:V,changeOperationMode:e=>("auto"!==e&&"manual"!==e&&(e="manual"),CONFIG.operationMode=e,storageUtils.set("OPERATION_MODE",e),K("auto"===e),!0)},window.getMonitoringStats=V,"loading"!==document.readyState?initialize():document.addEventListener("DOMContentLoaded",initialize),window.addEventListener("load",(()=>{function e(){if(logger.log("Verifying OpenAI Manager consistency..."),window.openaiManager||(logger.warn("OpenAI Manager is not available, creating backup instance"),"function"==typeof window.OpenAIManager?(window.openaiManager=new OpenAIManager,logger.debug("Created new instance using refactored OpenAIManager class")):(window.openaiManager=new OpenAIManager,logger.debug("Created new instance using original OpenAIManager class"))),!window.openaiManager.isInitialized)if(CONFIG?.AI?.apiKey)logger.log("Recovering OpenAI Manager state with API key from CONFIG"),window.openaiManager.initialize(CONFIG.AI.apiKey);else{const e=storageUtils.get("FB_CHAT_MONITOR_OPENAI_KEY","");e&&(logger.log("Recovering OpenAI Manager state with API key from localStorage"),window.openaiManager.initialize(e))}let e=!1;"function"==typeof window.openaiManager.isReady?(e=window.openaiManager.isReady(),logger.debug(`openaiManager.isReady() = ${e}`)):(e=window.openaiManager.isInitialized&&!!window.openaiManager.apiKey,logger.debug(`Fallback isReady check = ${e}`)),!e&&window.openaiManager.apiKey&&(logger.warn("Inconsistency detected - forcing isInitialized=true since there is API key"),window.openaiManager.isInitialized=!0,e=!0),window.openaiManager.apiClient&&window.openaiManager.apiKey&&window.openaiManager.apiClient.setApiKey(window.openaiManager.apiKey),logger.log("Final state of OpenAI Manager: "+(e?"READY":"NOT AVAILABLE"))}window.storageUtils?(storageUtils.checkStorageHealth(),storageUtils.migrateSettings(),function(){try{if(!window.CONFIG||!window.CONFIG.AI)return void console.warn("CONFIG is not correctly initialized");CONFIG.AI.apiKey=storageUtils.get("FB_CHAT_MONITOR_OPENAI_KEY","")||localStorage.getItem("FB_CHAT_MONITOR_OPENAI_KEY")||"",CONFIG.AI.assistants.seller.id=storageUtils.get("FB_CHAT_MONITOR_SELLER_ASSISTANT_ID","")||localStorage.getItem("FB_CHAT_MONITOR_SELLER_ASSISTANT_ID")||"",CONFIG.AI.assistants.buyer.id=storageUtils.get("FB_CHAT_MONITOR_BUYER_ASSISTANT_ID","")||localStorage.getItem("FB_CHAT_MONITOR_BUYER_ASSISTANT_ID")||"",CONFIG.operationMode=storageUtils.get("FB_CHAT_MONITOR_OPERATION_MODE",CONFIG.defaultOperationMode)||localStorage.getItem("FB_CHAT_MONITOR_OPERATION_MODE")||CONFIG.defaultOperationMode,CONFIG.audioTranscription&&(CONFIG.audioTranscription.apiKey=CONFIG.AI.apiKey),console.log("[CONFIG] Configuration loaded:",{apiKey:CONFIG.AI.apiKey?"********":"(no key)",model:CONFIG.AI.model,assistants:{seller:CONFIG.AI.assistants.seller.id?"(configured)":"(not configured)",buyer:CONFIG.AI.assistants.buyer.id?"(configured)":"(not configured)"},mode:CONFIG.operationMode})}catch(e){console.error("[CONFIG] Error loading configuration:",e)}}()):console.error("storageUtils is not available for migration and verification"),window.FBChatMonitor||(window.FBChatMonitor={},console.error("FBChatMonitor is not available on load. An empty object has been created to prevent errors.")),window.FBChatMonitor.getMonitoringStats||(window.FBChatMonitor.getMonitoringStats=function(){return{chatsProcessed:0,responsesSent:0,errors:0,uptime:0,isMonitoring:!1}},console.warn("A temporary version of getMonitoringStats has been created")),window.FBChatMonitor.initialized||"function"!=typeof window.FBChatMonitor.initialize||(window.FBChatMonitor.initialized=!0,window.FBChatMonitor.initialize()),function(){if(logger.log("Verifying availability of AI services..."),window.openaiManager){const e=window.openaiManager.isReady?window.openaiManager.isReady():window.openaiManager.isInitialized&&!!window.openaiManager.apiKey;if(logger.log(`OpenAI Manager auto-initialized: ${e}`),!e&&window.storageUtils){const e=window.storageUtils.get("FB_CHAT_MONITOR_OPENAI_KEY","");e&&(window.openaiManager.setApiKey(e),logger.log("OpenAI Manager re-initialized with stored API key"))}}else logger.warn("OpenAI Manager is not available. Some functions will not be operational."),window.openaiManager={isInitialized:!1,generateResponse:async()=>{throw new Error("OpenAI Manager is not initialized correctly")},isReady:()=>!1},logger.debug("A backup implementation of OpenAI Manager has been created");window.assistantManager&&logger.log("Assistant Manager is available to generate responses")}(),e(),setInterval(e,6e4)}))}();